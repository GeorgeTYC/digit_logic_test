// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Lite Edition"

// DATE "12/26/2018 10:34:01"

// 
// Device: Altera EPM1270T144C5 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module analog (
	clk,
	rst,
	start,
	change_map,
	direction1,
	direction2,
	direction3,
	direction4,
	time_sign,
	row,
	g_col,
	r_col,
	suc,
	step_cnt);
input 	clk;
input 	rst;
input 	start;
input 	change_map;
input 	direction1;
input 	direction2;
input 	direction3;
input 	direction4;
input 	[4:0] time_sign;
output 	[7:0] row;
output 	[7:0] g_col;
output 	[7:0] r_col;
output 	suc;
output 	[6:0] step_cnt;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \Add6~155_combout ;
wire \Equal4~5_combout ;
wire \Equal4~6_combout ;
wire \Equal4~7_combout ;
wire \Equal4~8_combout ;
wire \Equal4~9_combout ;
wire \Add6~157 ;
wire \Add6~140_combout ;
wire \Add6~142 ;
wire \Add6~150_combout ;
wire \Add6~152 ;
wire \Add6~145_combout ;
wire \Add6~147 ;
wire \Add6~135_combout ;
wire \Add6~137 ;
wire \Add6~130_combout ;
wire \Add6~132 ;
wire \Add6~125_combout ;
wire \Add6~127 ;
wire \Add6~120_combout ;
wire \Add6~122 ;
wire \Add6~115_combout ;
wire \Add6~117 ;
wire \Add6~110_combout ;
wire \Add6~112 ;
wire \Add6~105_combout ;
wire \Add6~107 ;
wire \Add6~100_combout ;
wire \Add6~102 ;
wire \Add6~95_combout ;
wire \Add6~97 ;
wire \Add6~90_combout ;
wire \Add6~92 ;
wire \Add6~85_combout ;
wire \Add6~87 ;
wire \Add6~80_combout ;
wire \Add6~82 ;
wire \Add6~75_combout ;
wire \Add6~77 ;
wire \Add6~70_combout ;
wire \Add6~72 ;
wire \Add6~65_combout ;
wire \Add6~67 ;
wire \Add6~60_combout ;
wire \Add6~62 ;
wire \Add6~55_combout ;
wire \Add6~57 ;
wire \Add6~50_combout ;
wire \Add6~52 ;
wire \Add6~45_combout ;
wire \Add6~47 ;
wire \Add6~40_combout ;
wire \Add6~42 ;
wire \Add6~35_combout ;
wire \Add6~37 ;
wire \Add6~30_combout ;
wire \Add6~32 ;
wire \Add6~25_combout ;
wire \Add6~27 ;
wire \Add6~20_combout ;
wire \Add6~22 ;
wire \Add6~15_combout ;
wire \Add6~17 ;
wire \Add6~10_combout ;
wire \Add6~12 ;
wire \Add6~5_combout ;
wire \Add6~7 ;
wire \Add6~0_combout ;
wire \Equal4~0_combout ;
wire \Equal4~1_combout ;
wire \Equal4~2_combout ;
wire \Equal4~3_combout ;
wire \Equal4~4_combout ;
wire \clk_1kHz~regout ;
wire \row[0]~reg0_regout ;
wire \row[1]~reg0_regout ;
wire \row[2]~reg0_regout ;
wire \row[3]~reg0_regout ;
wire \row[4]~reg0_regout ;
wire \row[5]~reg0_regout ;
wire \row[6]~reg0_regout ;
wire \row[7]~reg0_regout ;
wire \start~combout ;
wire \a1|tcnt1[1]~9 ;
wire \a1|tcnt1[2]~11 ;
wire \a1|tcnt1[3]~13 ;
wire \a1|tcnt1[4]~15 ;
wire \a1|tcnt1[5]~17 ;
wire \a1|tcnt1[6]~19 ;
wire \a1|tcnt1[7]~21 ;
wire \a1|tcnt1[8]~23 ;
wire \a1|tcnt1[9]~25 ;
wire \a1|tcnt1[10]~27 ;
wire \a1|tcnt1[11]~29 ;
wire \a1|tcnt1[12]~31 ;
wire \a1|tcnt1[13]~33 ;
wire \a1|tcnt1[14]~35 ;
wire \a1|tcnt1[15]~37 ;
wire \a1|tcnt1[16]~1 ;
wire \a1|tcnt1[17]~3 ;
wire \a1|tcnt1[18]~5 ;
wire \a1|Equal0~0_combout ;
wire \a1|Equal0~1_combout ;
wire \a1|Equal0~2_combout ;
wire \a1|Equal0~3_combout ;
wire \a1|Equal0~4_combout ;
wire \a1|Equal0~5_combout ;
wire \a1|key_out~regout ;
wire \start_con~regout ;
wire \Equal7~0_combout ;
wire \Equal7~1_combout ;
wire \change_map~combout ;
wire \a2|tcnt1[1]~9 ;
wire \a2|tcnt1[2]~11 ;
wire \a2|tcnt1[3]~13 ;
wire \a2|tcnt1[4]~15 ;
wire \a2|tcnt1[5]~17 ;
wire \a2|tcnt1[6]~19 ;
wire \a2|tcnt1[7]~21 ;
wire \a2|tcnt1[8]~23 ;
wire \a2|tcnt1[9]~25 ;
wire \a2|tcnt1[10]~27 ;
wire \a2|tcnt1[11]~29 ;
wire \a2|tcnt1[12]~31 ;
wire \a2|tcnt1[13]~33 ;
wire \a2|tcnt1[14]~35 ;
wire \a2|tcnt1[15]~37 ;
wire \a2|tcnt1[16]~1 ;
wire \a2|tcnt1[17]~3 ;
wire \a2|tcnt1[18]~5 ;
wire \a2|Equal0~0_combout ;
wire \a2|Equal0~1_combout ;
wire \a2|Equal0~2_combout ;
wire \a2|Equal0~3_combout ;
wire \a2|Equal0~4_combout ;
wire \a2|Equal0~5_combout ;
wire \a2|key_out~regout ;
wire \Mux0~0_combout ;
wire \direction1~combout ;
wire \c1|tcnt1[1]~9 ;
wire \c1|tcnt1[2]~11 ;
wire \c1|tcnt1[3]~13 ;
wire \c1|tcnt1[4]~15 ;
wire \c1|tcnt1[5]~17 ;
wire \c1|tcnt1[6]~19 ;
wire \c1|tcnt1[7]~21 ;
wire \c1|tcnt1[8]~23 ;
wire \c1|tcnt1[9]~25 ;
wire \c1|tcnt1[10]~27 ;
wire \c1|tcnt1[11]~29 ;
wire \c1|tcnt1[12]~31 ;
wire \c1|tcnt1[13]~33 ;
wire \c1|tcnt1[14]~35 ;
wire \c1|tcnt1[15]~37 ;
wire \c1|tcnt1[16]~1 ;
wire \c1|tcnt1[17]~3 ;
wire \c1|tcnt1[18]~5 ;
wire \c1|Equal0~0_combout ;
wire \c1|Equal0~1_combout ;
wire \c1|Equal0~2_combout ;
wire \c1|Equal0~3_combout ;
wire \c1|Equal0~4_combout ;
wire \c1|Equal0~5_combout ;
wire \c1|key_out~regout ;
wire \Mux1~0_combout ;
wire \location_row_num~7_combout ;
wire \location_row_num~6_combout ;
wire \location_row_num~4_combout ;
wire \Add2~0_combout ;
wire \Mux3~0_combout ;
wire \Mux2~0_combout ;
wire \Mux9~0_combout ;
wire \Mux9~1_combout ;
wire \step_cnt~16_combout ;
wire \Add2~1_combout ;
wire \Mux5~0_combout ;
wire \Mux7~0_combout ;
wire \Mux6~0_combout ;
wire \Mux9~2_combout ;
wire \Mux4~0_combout ;
wire \Mux9~3_combout ;
wire \direction2~combout ;
wire \c2|tcnt1[1]~9 ;
wire \c2|tcnt1[2]~11 ;
wire \c2|tcnt1[3]~13 ;
wire \c2|tcnt1[4]~15 ;
wire \c2|tcnt1[5]~17 ;
wire \c2|tcnt1[6]~19 ;
wire \c2|tcnt1[7]~21 ;
wire \c2|tcnt1[8]~23 ;
wire \c2|tcnt1[9]~25 ;
wire \c2|tcnt1[10]~27 ;
wire \c2|tcnt1[11]~29 ;
wire \c2|tcnt1[12]~31 ;
wire \c2|tcnt1[13]~33 ;
wire \c2|tcnt1[14]~35 ;
wire \c2|tcnt1[15]~37 ;
wire \c2|tcnt1[16]~1 ;
wire \c2|tcnt1[17]~3 ;
wire \c2|tcnt1[18]~5 ;
wire \c2|Equal0~0_combout ;
wire \c2|Equal0~1_combout ;
wire \c2|Equal0~2_combout ;
wire \c2|Equal0~3_combout ;
wire \c2|Equal0~4_combout ;
wire \c2|Equal0~5_combout ;
wire \c2|key_out~regout ;
wire \step_cnt~17_combout ;
wire \location_row_num~12_combout ;
wire \location_row_num[0]~COMBOUT ;
wire \Add0~0_combout ;
wire \Mux8~0_combout ;
wire \Mux8~1_combout ;
wire \Add0~1_combout ;
wire \Mux8~2_combout ;
wire \Mux8~3_combout ;
wire \step_cnt~15_combout ;
wire \location_row_num~8_combout ;
wire \location_row_num~5_combout ;
wire \always3~0_combout ;
wire \always3~1_combout ;
wire \always3~2_combout ;
wire \location_col_num[0]~COMBOUT ;
wire \direction3~combout ;
wire \c3|tcnt1[1]~9 ;
wire \c3|tcnt1[2]~11 ;
wire \c3|tcnt1[3]~13 ;
wire \c3|tcnt1[4]~15 ;
wire \c3|tcnt1[5]~17 ;
wire \c3|tcnt1[6]~19 ;
wire \c3|tcnt1[7]~21 ;
wire \c3|tcnt1[8]~23 ;
wire \c3|tcnt1[9]~25 ;
wire \c3|tcnt1[10]~27 ;
wire \c3|tcnt1[11]~29 ;
wire \c3|tcnt1[12]~31 ;
wire \c3|tcnt1[13]~33 ;
wire \c3|tcnt1[14]~35 ;
wire \c3|tcnt1[15]~37 ;
wire \c3|tcnt1[16]~1 ;
wire \c3|tcnt1[17]~3 ;
wire \c3|tcnt1[18]~5 ;
wire \c3|Equal0~0_combout ;
wire \c3|Equal0~1_combout ;
wire \c3|Equal0~2_combout ;
wire \c3|Equal0~3_combout ;
wire \c3|Equal0~4_combout ;
wire \c3|Equal0~5_combout ;
wire \c3|key_out~regout ;
wire \step_cnt~14_combout ;
wire \Add3~2_combout ;
wire \Add3~3_combout ;
wire \Mux12~0_combout ;
wire \Mux12~1_combout ;
wire \Mux12~2_combout ;
wire \Mux11~0_combout ;
wire \location_row_num~9_combout ;
wire \Mux13~0_combout ;
wire \Mux18~0_combout ;
wire \Mux10~0_combout ;
wire \Mux18~1_combout ;
wire \Mux15~0_combout ;
wire \Mux16~0_combout ;
wire \Mux17~0_combout ;
wire \Mux18~2_combout ;
wire \Mux14~0_combout ;
wire \Mux18~3_combout ;
wire \location_row_num~13_combout ;
wire \step_cnt~18_combout ;
wire \Add4~4_combout ;
wire \location_col_num~2_combout ;
wire \location_col_num~4_combout ;
wire \Mux21~0_combout ;
wire \Mux20~0_combout ;
wire \Mux22~0_combout ;
wire \Mux27~0_combout ;
wire \Mux19~0_combout ;
wire \Mux27~1_combout ;
wire \Mux24~0_combout ;
wire \Mux25~0_combout ;
wire \Mux26~0_combout ;
wire \Mux27~2_combout ;
wire \Mux23~0_combout ;
wire \Mux27~3_combout ;
wire \direction4~combout ;
wire \c4|tcnt1[1]~9 ;
wire \c4|tcnt1[2]~11 ;
wire \c4|tcnt1[3]~13 ;
wire \c4|tcnt1[4]~15 ;
wire \c4|tcnt1[5]~17 ;
wire \c4|tcnt1[6]~19 ;
wire \c4|tcnt1[7]~21 ;
wire \c4|tcnt1[8]~23 ;
wire \c4|tcnt1[9]~25 ;
wire \c4|tcnt1[10]~27 ;
wire \c4|tcnt1[11]~29 ;
wire \c4|tcnt1[12]~31 ;
wire \c4|tcnt1[13]~33 ;
wire \c4|tcnt1[14]~35 ;
wire \c4|tcnt1[15]~37 ;
wire \c4|tcnt1[16]~1 ;
wire \c4|tcnt1[17]~3 ;
wire \c4|tcnt1[18]~5 ;
wire \c4|Equal0~0_combout ;
wire \c4|Equal0~1_combout ;
wire \c4|Equal0~2_combout ;
wire \c4|Equal0~3_combout ;
wire \c4|Equal0~4_combout ;
wire \c4|Equal0~5_combout ;
wire \c4|key_out~regout ;
wire \step_cnt~19_combout ;
wire \step_cnt~20_combout ;
wire \location_col_num~0_combout ;
wire \Add4~5_combout ;
wire \location_col_num~1_combout ;
wire \location_col_num~3_combout ;
wire \location_col_num~5_combout ;
wire \always4~0_combout ;
wire \Equal3~0_combout ;
wire \suc~reg0_regout ;
wire \r_col~0_combout ;
wire \g_col[6]~0_combout ;
wire \g_col[6]~1_combout ;
wire \r_col~1_combout ;
wire \g_col[0]~reg0_regout ;
wire \g_col~3_combout ;
wire \g_col~4_combout ;
wire \g_col~5_combout ;
wire \g_col[1]~reg0_regout ;
wire \g_col~7_combout ;
wire \g_col~8_combout ;
wire \g_col[2]~reg0_regout ;
wire \g_col~10_combout ;
wire \g_col~11_combout ;
wire \g_col[3]~reg0_regout ;
wire \g_col~13_combout ;
wire \g_col[4]~reg0_regout ;
wire \g_col[5]~reg0_regout ;
wire \g_col[6]~reg0_regout ;
wire \g_col[7]~reg0_regout ;
wire \r_col~2_combout ;
wire \r_col[0]~reg0_regout ;
wire \r_col~4_combout ;
wire \r_col~5_combout ;
wire \r_col~6_combout ;
wire \r_col[1]~reg0_regout ;
wire \r_col~8_combout ;
wire \r_col~9_combout ;
wire \r_col[2]~reg0_regout ;
wire \r_col~11_combout ;
wire \r_col~12_combout ;
wire \r_col~13_combout ;
wire \Mux40~0_combout ;
wire \r_col[3]~reg0_regout ;
wire \r_col~15_combout ;
wire \Mux39~0_combout ;
wire \r_col[4]~reg0_regout ;
wire \Mux38~0_combout ;
wire \r_col~17_combout ;
wire \r_col[5]~reg0_regout ;
wire \Mux38~1_combout ;
wire \r_col~19_combout ;
wire \r_col[6]~reg0_regout ;
wire \r_col~21_combout ;
wire \r_col[7]~reg0_regout ;
wire \step_cnt[0]~21_combout ;
wire \step_cnt[0]~22_combout ;
wire \step_cnt[0]~23_combout ;
wire \step_cnt[0]~reg0_regout ;
wire \step_cnt[0]~1 ;
wire \step_cnt[1]~reg0_regout ;
wire \step_cnt[1]~3 ;
wire \step_cnt[2]~reg0_regout ;
wire \step_cnt[2]~5 ;
wire \step_cnt[3]~reg0_regout ;
wire \step_cnt[3]~7 ;
wire \step_cnt[4]~reg0_regout ;
wire \step_cnt[4]~9 ;
wire \step_cnt[5]~reg0_regout ;
wire \step_cnt[5]~11 ;
wire \step_cnt[6]~reg0_regout ;
wire [7:0] terminal_point_col;
wire [2:0] location_col_num;
wire [3:0] row_num;
wire [4:0] \time_sign~combout ;
wire [19:0] \c1|tcnt1 ;
wire [2:0] location_row_num;
wire [31:0] count;
wire [19:0] \c3|tcnt1 ;
wire [19:0] \a1|tcnt1 ;
wire [19:0] \c2|tcnt1 ;
wire [19:0] \c4|tcnt1 ;
wire [19:0] \a2|tcnt1 ;


maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \Add6~155 (
// Equation(s):
// \Add6~155_combout  = (!count[0])
// \Add6~157  = CARRY((count[0]))

	.clk(gnd),
	.dataa(count[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~155_combout ),
	.regout(),
	.cout(\Add6~157 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~155 .lut_mask = "55aa";
defparam \Add6~155 .operation_mode = "arithmetic";
defparam \Add6~155 .output_mode = "comb_only";
defparam \Add6~155 .register_cascade_mode = "off";
defparam \Add6~155 .sum_lutc_input = "cin";
defparam \Add6~155 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~5 (
// Equation(s):
// \Equal4~5_combout  = (!count[15] & (!count[14] & (!count[13] & !count[12])))

	.clk(gnd),
	.dataa(count[15]),
	.datab(count[14]),
	.datac(count[13]),
	.datad(count[12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~5 .lut_mask = "0001";
defparam \Equal4~5 .operation_mode = "normal";
defparam \Equal4~5 .output_mode = "comb_only";
defparam \Equal4~5 .register_cascade_mode = "off";
defparam \Equal4~5 .sum_lutc_input = "datac";
defparam \Equal4~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~6 (
// Equation(s):
// \Equal4~6_combout  = (!count[11] & (!count[10] & (!count[9] & !count[8])))

	.clk(gnd),
	.dataa(count[11]),
	.datab(count[10]),
	.datac(count[9]),
	.datad(count[8]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~6 .lut_mask = "0001";
defparam \Equal4~6 .operation_mode = "normal";
defparam \Equal4~6 .output_mode = "comb_only";
defparam \Equal4~6 .register_cascade_mode = "off";
defparam \Equal4~6 .sum_lutc_input = "datac";
defparam \Equal4~6 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~7 (
// Equation(s):
// \Equal4~7_combout  = (!count[7] & (!count[6] & (!count[5] & !count[4])))

	.clk(gnd),
	.dataa(count[7]),
	.datab(count[6]),
	.datac(count[5]),
	.datad(count[4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~7 .lut_mask = "0001";
defparam \Equal4~7 .operation_mode = "normal";
defparam \Equal4~7 .output_mode = "comb_only";
defparam \Equal4~7 .register_cascade_mode = "off";
defparam \Equal4~7 .sum_lutc_input = "datac";
defparam \Equal4~7 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~8 (
// Equation(s):
// \Equal4~8_combout  = (count[1] & (!count[3] & (!count[2] & !count[0])))

	.clk(gnd),
	.dataa(count[1]),
	.datab(count[3]),
	.datac(count[2]),
	.datad(count[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~8 .lut_mask = "0002";
defparam \Equal4~8 .operation_mode = "normal";
defparam \Equal4~8 .output_mode = "comb_only";
defparam \Equal4~8 .register_cascade_mode = "off";
defparam \Equal4~8 .sum_lutc_input = "datac";
defparam \Equal4~8 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~9 (
// Equation(s):
// \Equal4~9_combout  = (\Equal4~5_combout  & (\Equal4~6_combout  & (\Equal4~7_combout  & \Equal4~8_combout )))

	.clk(gnd),
	.dataa(\Equal4~5_combout ),
	.datab(\Equal4~6_combout ),
	.datac(\Equal4~7_combout ),
	.datad(\Equal4~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~9 .lut_mask = "8000";
defparam \Equal4~9 .operation_mode = "normal";
defparam \Equal4~9 .output_mode = "comb_only";
defparam \Equal4~9 .register_cascade_mode = "off";
defparam \Equal4~9 .sum_lutc_input = "datac";
defparam \Equal4~9 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[0] (
// Equation(s):
// count[0] = DFFEAS((\Add6~155_combout  & (((!\Equal4~9_combout ) # (!\Equal4~4_combout )))), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~155_combout ),
	.datab(vcc),
	.datac(\Equal4~4_combout ),
	.datad(\Equal4~9_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[0] .lut_mask = "0aaa";
defparam \count[0] .operation_mode = "normal";
defparam \count[0] .output_mode = "reg_only";
defparam \count[0] .register_cascade_mode = "off";
defparam \count[0] .sum_lutc_input = "datac";
defparam \count[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~140 (
// Equation(s):
// \Add6~140_combout  = count[1] $ ((((\Add6~157 ))))
// \Add6~142  = CARRY(((!\Add6~157 )) # (!count[1]))

	.clk(gnd),
	.dataa(count[1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~157 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~140_combout ),
	.regout(),
	.cout(\Add6~142 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~140 .cin_used = "true";
defparam \Add6~140 .lut_mask = "5a5f";
defparam \Add6~140 .operation_mode = "arithmetic";
defparam \Add6~140 .output_mode = "comb_only";
defparam \Add6~140 .register_cascade_mode = "off";
defparam \Add6~140 .sum_lutc_input = "cin";
defparam \Add6~140 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[1] (
// Equation(s):
// count[1] = DFFEAS((\Add6~140_combout  & (((!\Equal4~9_combout ) # (!\Equal4~4_combout )))), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~140_combout ),
	.datab(vcc),
	.datac(\Equal4~4_combout ),
	.datad(\Equal4~9_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[1] .lut_mask = "0aaa";
defparam \count[1] .operation_mode = "normal";
defparam \count[1] .output_mode = "reg_only";
defparam \count[1] .register_cascade_mode = "off";
defparam \count[1] .sum_lutc_input = "datac";
defparam \count[1] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~150 (
// Equation(s):
// \Add6~150_combout  = count[2] $ ((((!\Add6~142 ))))
// \Add6~152  = CARRY((count[2] & ((!\Add6~142 ))))

	.clk(gnd),
	.dataa(count[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~142 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~150_combout ),
	.regout(),
	.cout(\Add6~152 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~150 .cin_used = "true";
defparam \Add6~150 .lut_mask = "a50a";
defparam \Add6~150 .operation_mode = "arithmetic";
defparam \Add6~150 .output_mode = "comb_only";
defparam \Add6~150 .register_cascade_mode = "off";
defparam \Add6~150 .sum_lutc_input = "cin";
defparam \Add6~150 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[2] (
// Equation(s):
// count[2] = DFFEAS((\Add6~150_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~150_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[2] .lut_mask = "aaaa";
defparam \count[2] .operation_mode = "normal";
defparam \count[2] .output_mode = "reg_only";
defparam \count[2] .register_cascade_mode = "off";
defparam \count[2] .sum_lutc_input = "datac";
defparam \count[2] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~145 (
// Equation(s):
// \Add6~145_combout  = count[3] $ ((((\Add6~152 ))))
// \Add6~147  = CARRY(((!\Add6~152 )) # (!count[3]))

	.clk(gnd),
	.dataa(count[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~152 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~145_combout ),
	.regout(),
	.cout(\Add6~147 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~145 .cin_used = "true";
defparam \Add6~145 .lut_mask = "5a5f";
defparam \Add6~145 .operation_mode = "arithmetic";
defparam \Add6~145 .output_mode = "comb_only";
defparam \Add6~145 .register_cascade_mode = "off";
defparam \Add6~145 .sum_lutc_input = "cin";
defparam \Add6~145 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[3] (
// Equation(s):
// count[3] = DFFEAS((\Add6~145_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~145_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[3] .lut_mask = "aaaa";
defparam \count[3] .operation_mode = "normal";
defparam \count[3] .output_mode = "reg_only";
defparam \count[3] .register_cascade_mode = "off";
defparam \count[3] .sum_lutc_input = "datac";
defparam \count[3] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~135 (
// Equation(s):
// \Add6~135_combout  = count[4] $ ((((!\Add6~147 ))))
// \Add6~137  = CARRY((count[4] & ((!\Add6~147 ))))

	.clk(gnd),
	.dataa(count[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~147 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~135_combout ),
	.regout(),
	.cout(\Add6~137 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~135 .cin_used = "true";
defparam \Add6~135 .lut_mask = "a50a";
defparam \Add6~135 .operation_mode = "arithmetic";
defparam \Add6~135 .output_mode = "comb_only";
defparam \Add6~135 .register_cascade_mode = "off";
defparam \Add6~135 .sum_lutc_input = "cin";
defparam \Add6~135 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[4] (
// Equation(s):
// count[4] = DFFEAS((\Add6~135_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~135_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[4] .lut_mask = "aaaa";
defparam \count[4] .operation_mode = "normal";
defparam \count[4] .output_mode = "reg_only";
defparam \count[4] .register_cascade_mode = "off";
defparam \count[4] .sum_lutc_input = "datac";
defparam \count[4] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~130 (
// Equation(s):
// \Add6~130_combout  = count[5] $ ((((\Add6~137 ))))
// \Add6~132  = CARRY(((!\Add6~137 )) # (!count[5]))

	.clk(gnd),
	.dataa(count[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~137 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~130_combout ),
	.regout(),
	.cout(\Add6~132 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~130 .cin_used = "true";
defparam \Add6~130 .lut_mask = "5a5f";
defparam \Add6~130 .operation_mode = "arithmetic";
defparam \Add6~130 .output_mode = "comb_only";
defparam \Add6~130 .register_cascade_mode = "off";
defparam \Add6~130 .sum_lutc_input = "cin";
defparam \Add6~130 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[5] (
// Equation(s):
// count[5] = DFFEAS((\Add6~130_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~130_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[5] .lut_mask = "aaaa";
defparam \count[5] .operation_mode = "normal";
defparam \count[5] .output_mode = "reg_only";
defparam \count[5] .register_cascade_mode = "off";
defparam \count[5] .sum_lutc_input = "datac";
defparam \count[5] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~125 (
// Equation(s):
// \Add6~125_combout  = count[6] $ ((((!\Add6~132 ))))
// \Add6~127  = CARRY((count[6] & ((!\Add6~132 ))))

	.clk(gnd),
	.dataa(count[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~132 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~125_combout ),
	.regout(),
	.cout(\Add6~127 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~125 .cin_used = "true";
defparam \Add6~125 .lut_mask = "a50a";
defparam \Add6~125 .operation_mode = "arithmetic";
defparam \Add6~125 .output_mode = "comb_only";
defparam \Add6~125 .register_cascade_mode = "off";
defparam \Add6~125 .sum_lutc_input = "cin";
defparam \Add6~125 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[6] (
// Equation(s):
// count[6] = DFFEAS((\Add6~125_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~125_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[6] .lut_mask = "aaaa";
defparam \count[6] .operation_mode = "normal";
defparam \count[6] .output_mode = "reg_only";
defparam \count[6] .register_cascade_mode = "off";
defparam \count[6] .sum_lutc_input = "datac";
defparam \count[6] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~120 (
// Equation(s):
// \Add6~120_combout  = count[7] $ ((((\Add6~127 ))))
// \Add6~122  = CARRY(((!\Add6~127 )) # (!count[7]))

	.clk(gnd),
	.dataa(count[7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~127 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~120_combout ),
	.regout(),
	.cout(\Add6~122 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~120 .cin_used = "true";
defparam \Add6~120 .lut_mask = "5a5f";
defparam \Add6~120 .operation_mode = "arithmetic";
defparam \Add6~120 .output_mode = "comb_only";
defparam \Add6~120 .register_cascade_mode = "off";
defparam \Add6~120 .sum_lutc_input = "cin";
defparam \Add6~120 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[7] (
// Equation(s):
// count[7] = DFFEAS((\Add6~120_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~120_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[7] .lut_mask = "aaaa";
defparam \count[7] .operation_mode = "normal";
defparam \count[7] .output_mode = "reg_only";
defparam \count[7] .register_cascade_mode = "off";
defparam \count[7] .sum_lutc_input = "datac";
defparam \count[7] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~115 (
// Equation(s):
// \Add6~115_combout  = count[8] $ ((((!\Add6~122 ))))
// \Add6~117  = CARRY((count[8] & ((!\Add6~122 ))))

	.clk(gnd),
	.dataa(count[8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~122 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~115_combout ),
	.regout(),
	.cout(\Add6~117 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~115 .cin_used = "true";
defparam \Add6~115 .lut_mask = "a50a";
defparam \Add6~115 .operation_mode = "arithmetic";
defparam \Add6~115 .output_mode = "comb_only";
defparam \Add6~115 .register_cascade_mode = "off";
defparam \Add6~115 .sum_lutc_input = "cin";
defparam \Add6~115 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[8] (
// Equation(s):
// count[8] = DFFEAS((\Add6~115_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~115_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[8] .lut_mask = "aaaa";
defparam \count[8] .operation_mode = "normal";
defparam \count[8] .output_mode = "reg_only";
defparam \count[8] .register_cascade_mode = "off";
defparam \count[8] .sum_lutc_input = "datac";
defparam \count[8] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~110 (
// Equation(s):
// \Add6~110_combout  = count[9] $ ((((\Add6~117 ))))
// \Add6~112  = CARRY(((!\Add6~117 )) # (!count[9]))

	.clk(gnd),
	.dataa(count[9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~117 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~110_combout ),
	.regout(),
	.cout(\Add6~112 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~110 .cin_used = "true";
defparam \Add6~110 .lut_mask = "5a5f";
defparam \Add6~110 .operation_mode = "arithmetic";
defparam \Add6~110 .output_mode = "comb_only";
defparam \Add6~110 .register_cascade_mode = "off";
defparam \Add6~110 .sum_lutc_input = "cin";
defparam \Add6~110 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[9] (
// Equation(s):
// count[9] = DFFEAS((\Add6~110_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~110_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[9] .lut_mask = "aaaa";
defparam \count[9] .operation_mode = "normal";
defparam \count[9] .output_mode = "reg_only";
defparam \count[9] .register_cascade_mode = "off";
defparam \count[9] .sum_lutc_input = "datac";
defparam \count[9] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~105 (
// Equation(s):
// \Add6~105_combout  = count[10] $ ((((!\Add6~112 ))))
// \Add6~107  = CARRY((count[10] & ((!\Add6~112 ))))

	.clk(gnd),
	.dataa(count[10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~112 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~105_combout ),
	.regout(),
	.cout(\Add6~107 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~105 .cin_used = "true";
defparam \Add6~105 .lut_mask = "a50a";
defparam \Add6~105 .operation_mode = "arithmetic";
defparam \Add6~105 .output_mode = "comb_only";
defparam \Add6~105 .register_cascade_mode = "off";
defparam \Add6~105 .sum_lutc_input = "cin";
defparam \Add6~105 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[10] (
// Equation(s):
// count[10] = DFFEAS((\Add6~105_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~105_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[10]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[10] .lut_mask = "aaaa";
defparam \count[10] .operation_mode = "normal";
defparam \count[10] .output_mode = "reg_only";
defparam \count[10] .register_cascade_mode = "off";
defparam \count[10] .sum_lutc_input = "datac";
defparam \count[10] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~100 (
// Equation(s):
// \Add6~100_combout  = count[11] $ ((((\Add6~107 ))))
// \Add6~102  = CARRY(((!\Add6~107 )) # (!count[11]))

	.clk(gnd),
	.dataa(count[11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~107 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~100_combout ),
	.regout(),
	.cout(\Add6~102 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~100 .cin_used = "true";
defparam \Add6~100 .lut_mask = "5a5f";
defparam \Add6~100 .operation_mode = "arithmetic";
defparam \Add6~100 .output_mode = "comb_only";
defparam \Add6~100 .register_cascade_mode = "off";
defparam \Add6~100 .sum_lutc_input = "cin";
defparam \Add6~100 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[11] (
// Equation(s):
// count[11] = DFFEAS((\Add6~100_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~100_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[11]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[11] .lut_mask = "aaaa";
defparam \count[11] .operation_mode = "normal";
defparam \count[11] .output_mode = "reg_only";
defparam \count[11] .register_cascade_mode = "off";
defparam \count[11] .sum_lutc_input = "datac";
defparam \count[11] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~95 (
// Equation(s):
// \Add6~95_combout  = count[12] $ ((((!\Add6~102 ))))
// \Add6~97  = CARRY((count[12] & ((!\Add6~102 ))))

	.clk(gnd),
	.dataa(count[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~102 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~95_combout ),
	.regout(),
	.cout(\Add6~97 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~95 .cin_used = "true";
defparam \Add6~95 .lut_mask = "a50a";
defparam \Add6~95 .operation_mode = "arithmetic";
defparam \Add6~95 .output_mode = "comb_only";
defparam \Add6~95 .register_cascade_mode = "off";
defparam \Add6~95 .sum_lutc_input = "cin";
defparam \Add6~95 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[12] (
// Equation(s):
// count[12] = DFFEAS((\Add6~95_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~95_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[12] .lut_mask = "aaaa";
defparam \count[12] .operation_mode = "normal";
defparam \count[12] .output_mode = "reg_only";
defparam \count[12] .register_cascade_mode = "off";
defparam \count[12] .sum_lutc_input = "datac";
defparam \count[12] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~90 (
// Equation(s):
// \Add6~90_combout  = count[13] $ ((((\Add6~97 ))))
// \Add6~92  = CARRY(((!\Add6~97 )) # (!count[13]))

	.clk(gnd),
	.dataa(count[13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~97 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~90_combout ),
	.regout(),
	.cout(\Add6~92 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~90 .cin_used = "true";
defparam \Add6~90 .lut_mask = "5a5f";
defparam \Add6~90 .operation_mode = "arithmetic";
defparam \Add6~90 .output_mode = "comb_only";
defparam \Add6~90 .register_cascade_mode = "off";
defparam \Add6~90 .sum_lutc_input = "cin";
defparam \Add6~90 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[13] (
// Equation(s):
// count[13] = DFFEAS((\Add6~90_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~90_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[13]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[13] .lut_mask = "aaaa";
defparam \count[13] .operation_mode = "normal";
defparam \count[13] .output_mode = "reg_only";
defparam \count[13] .register_cascade_mode = "off";
defparam \count[13] .sum_lutc_input = "datac";
defparam \count[13] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~85 (
// Equation(s):
// \Add6~85_combout  = count[14] $ ((((!\Add6~92 ))))
// \Add6~87  = CARRY((count[14] & ((!\Add6~92 ))))

	.clk(gnd),
	.dataa(count[14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~92 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~85_combout ),
	.regout(),
	.cout(\Add6~87 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~85 .cin_used = "true";
defparam \Add6~85 .lut_mask = "a50a";
defparam \Add6~85 .operation_mode = "arithmetic";
defparam \Add6~85 .output_mode = "comb_only";
defparam \Add6~85 .register_cascade_mode = "off";
defparam \Add6~85 .sum_lutc_input = "cin";
defparam \Add6~85 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[14] (
// Equation(s):
// count[14] = DFFEAS((\Add6~85_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~85_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[14]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[14] .lut_mask = "aaaa";
defparam \count[14] .operation_mode = "normal";
defparam \count[14] .output_mode = "reg_only";
defparam \count[14] .register_cascade_mode = "off";
defparam \count[14] .sum_lutc_input = "datac";
defparam \count[14] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~80 (
// Equation(s):
// \Add6~80_combout  = count[15] $ ((((\Add6~87 ))))
// \Add6~82  = CARRY(((!\Add6~87 )) # (!count[15]))

	.clk(gnd),
	.dataa(count[15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~87 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~80_combout ),
	.regout(),
	.cout(\Add6~82 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~80 .cin_used = "true";
defparam \Add6~80 .lut_mask = "5a5f";
defparam \Add6~80 .operation_mode = "arithmetic";
defparam \Add6~80 .output_mode = "comb_only";
defparam \Add6~80 .register_cascade_mode = "off";
defparam \Add6~80 .sum_lutc_input = "cin";
defparam \Add6~80 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[15] (
// Equation(s):
// count[15] = DFFEAS((\Add6~80_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~80_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[15]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[15] .lut_mask = "aaaa";
defparam \count[15] .operation_mode = "normal";
defparam \count[15] .output_mode = "reg_only";
defparam \count[15] .register_cascade_mode = "off";
defparam \count[15] .sum_lutc_input = "datac";
defparam \count[15] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~75 (
// Equation(s):
// \Add6~75_combout  = count[16] $ ((((!\Add6~82 ))))
// \Add6~77  = CARRY((count[16] & ((!\Add6~82 ))))

	.clk(gnd),
	.dataa(count[16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~82 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~75_combout ),
	.regout(),
	.cout(\Add6~77 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~75 .cin_used = "true";
defparam \Add6~75 .lut_mask = "a50a";
defparam \Add6~75 .operation_mode = "arithmetic";
defparam \Add6~75 .output_mode = "comb_only";
defparam \Add6~75 .register_cascade_mode = "off";
defparam \Add6~75 .sum_lutc_input = "cin";
defparam \Add6~75 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[16] (
// Equation(s):
// count[16] = DFFEAS((\Add6~75_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~75_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[16]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[16] .lut_mask = "aaaa";
defparam \count[16] .operation_mode = "normal";
defparam \count[16] .output_mode = "reg_only";
defparam \count[16] .register_cascade_mode = "off";
defparam \count[16] .sum_lutc_input = "datac";
defparam \count[16] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~70 (
// Equation(s):
// \Add6~70_combout  = count[17] $ ((((\Add6~77 ))))
// \Add6~72  = CARRY(((!\Add6~77 )) # (!count[17]))

	.clk(gnd),
	.dataa(count[17]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~77 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~70_combout ),
	.regout(),
	.cout(\Add6~72 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~70 .cin_used = "true";
defparam \Add6~70 .lut_mask = "5a5f";
defparam \Add6~70 .operation_mode = "arithmetic";
defparam \Add6~70 .output_mode = "comb_only";
defparam \Add6~70 .register_cascade_mode = "off";
defparam \Add6~70 .sum_lutc_input = "cin";
defparam \Add6~70 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[17] (
// Equation(s):
// count[17] = DFFEAS((\Add6~70_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~70_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[17]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[17] .lut_mask = "aaaa";
defparam \count[17] .operation_mode = "normal";
defparam \count[17] .output_mode = "reg_only";
defparam \count[17] .register_cascade_mode = "off";
defparam \count[17] .sum_lutc_input = "datac";
defparam \count[17] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~65 (
// Equation(s):
// \Add6~65_combout  = count[18] $ ((((!\Add6~72 ))))
// \Add6~67  = CARRY((count[18] & ((!\Add6~72 ))))

	.clk(gnd),
	.dataa(count[18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~72 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~65_combout ),
	.regout(),
	.cout(\Add6~67 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~65 .cin_used = "true";
defparam \Add6~65 .lut_mask = "a50a";
defparam \Add6~65 .operation_mode = "arithmetic";
defparam \Add6~65 .output_mode = "comb_only";
defparam \Add6~65 .register_cascade_mode = "off";
defparam \Add6~65 .sum_lutc_input = "cin";
defparam \Add6~65 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[18] (
// Equation(s):
// count[18] = DFFEAS((\Add6~65_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~65_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[18]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[18] .lut_mask = "aaaa";
defparam \count[18] .operation_mode = "normal";
defparam \count[18] .output_mode = "reg_only";
defparam \count[18] .register_cascade_mode = "off";
defparam \count[18] .sum_lutc_input = "datac";
defparam \count[18] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~60 (
// Equation(s):
// \Add6~60_combout  = count[19] $ ((((\Add6~67 ))))
// \Add6~62  = CARRY(((!\Add6~67 )) # (!count[19]))

	.clk(gnd),
	.dataa(count[19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~67 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~60_combout ),
	.regout(),
	.cout(\Add6~62 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~60 .cin_used = "true";
defparam \Add6~60 .lut_mask = "5a5f";
defparam \Add6~60 .operation_mode = "arithmetic";
defparam \Add6~60 .output_mode = "comb_only";
defparam \Add6~60 .register_cascade_mode = "off";
defparam \Add6~60 .sum_lutc_input = "cin";
defparam \Add6~60 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[19] (
// Equation(s):
// count[19] = DFFEAS((\Add6~60_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~60_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[19] .lut_mask = "aaaa";
defparam \count[19] .operation_mode = "normal";
defparam \count[19] .output_mode = "reg_only";
defparam \count[19] .register_cascade_mode = "off";
defparam \count[19] .sum_lutc_input = "datac";
defparam \count[19] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~55 (
// Equation(s):
// \Add6~55_combout  = count[20] $ ((((!\Add6~62 ))))
// \Add6~57  = CARRY((count[20] & ((!\Add6~62 ))))

	.clk(gnd),
	.dataa(count[20]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~62 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~55_combout ),
	.regout(),
	.cout(\Add6~57 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~55 .cin_used = "true";
defparam \Add6~55 .lut_mask = "a50a";
defparam \Add6~55 .operation_mode = "arithmetic";
defparam \Add6~55 .output_mode = "comb_only";
defparam \Add6~55 .register_cascade_mode = "off";
defparam \Add6~55 .sum_lutc_input = "cin";
defparam \Add6~55 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[20] (
// Equation(s):
// count[20] = DFFEAS((\Add6~55_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~55_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[20]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[20] .lut_mask = "aaaa";
defparam \count[20] .operation_mode = "normal";
defparam \count[20] .output_mode = "reg_only";
defparam \count[20] .register_cascade_mode = "off";
defparam \count[20] .sum_lutc_input = "datac";
defparam \count[20] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~50 (
// Equation(s):
// \Add6~50_combout  = count[21] $ ((((\Add6~57 ))))
// \Add6~52  = CARRY(((!\Add6~57 )) # (!count[21]))

	.clk(gnd),
	.dataa(count[21]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~57 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~50_combout ),
	.regout(),
	.cout(\Add6~52 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~50 .cin_used = "true";
defparam \Add6~50 .lut_mask = "5a5f";
defparam \Add6~50 .operation_mode = "arithmetic";
defparam \Add6~50 .output_mode = "comb_only";
defparam \Add6~50 .register_cascade_mode = "off";
defparam \Add6~50 .sum_lutc_input = "cin";
defparam \Add6~50 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[21] (
// Equation(s):
// count[21] = DFFEAS((\Add6~50_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~50_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[21]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[21] .lut_mask = "aaaa";
defparam \count[21] .operation_mode = "normal";
defparam \count[21] .output_mode = "reg_only";
defparam \count[21] .register_cascade_mode = "off";
defparam \count[21] .sum_lutc_input = "datac";
defparam \count[21] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~45 (
// Equation(s):
// \Add6~45_combout  = count[22] $ ((((!\Add6~52 ))))
// \Add6~47  = CARRY((count[22] & ((!\Add6~52 ))))

	.clk(gnd),
	.dataa(count[22]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~52 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~45_combout ),
	.regout(),
	.cout(\Add6~47 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~45 .cin_used = "true";
defparam \Add6~45 .lut_mask = "a50a";
defparam \Add6~45 .operation_mode = "arithmetic";
defparam \Add6~45 .output_mode = "comb_only";
defparam \Add6~45 .register_cascade_mode = "off";
defparam \Add6~45 .sum_lutc_input = "cin";
defparam \Add6~45 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[22] (
// Equation(s):
// count[22] = DFFEAS((\Add6~45_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~45_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[22]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[22] .lut_mask = "aaaa";
defparam \count[22] .operation_mode = "normal";
defparam \count[22] .output_mode = "reg_only";
defparam \count[22] .register_cascade_mode = "off";
defparam \count[22] .sum_lutc_input = "datac";
defparam \count[22] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~40 (
// Equation(s):
// \Add6~40_combout  = count[23] $ ((((\Add6~47 ))))
// \Add6~42  = CARRY(((!\Add6~47 )) # (!count[23]))

	.clk(gnd),
	.dataa(count[23]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~47 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~40_combout ),
	.regout(),
	.cout(\Add6~42 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~40 .cin_used = "true";
defparam \Add6~40 .lut_mask = "5a5f";
defparam \Add6~40 .operation_mode = "arithmetic";
defparam \Add6~40 .output_mode = "comb_only";
defparam \Add6~40 .register_cascade_mode = "off";
defparam \Add6~40 .sum_lutc_input = "cin";
defparam \Add6~40 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[23] (
// Equation(s):
// count[23] = DFFEAS((\Add6~40_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~40_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[23]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[23] .lut_mask = "aaaa";
defparam \count[23] .operation_mode = "normal";
defparam \count[23] .output_mode = "reg_only";
defparam \count[23] .register_cascade_mode = "off";
defparam \count[23] .sum_lutc_input = "datac";
defparam \count[23] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~35 (
// Equation(s):
// \Add6~35_combout  = count[24] $ ((((!\Add6~42 ))))
// \Add6~37  = CARRY((count[24] & ((!\Add6~42 ))))

	.clk(gnd),
	.dataa(count[24]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~42 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~35_combout ),
	.regout(),
	.cout(\Add6~37 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~35 .cin_used = "true";
defparam \Add6~35 .lut_mask = "a50a";
defparam \Add6~35 .operation_mode = "arithmetic";
defparam \Add6~35 .output_mode = "comb_only";
defparam \Add6~35 .register_cascade_mode = "off";
defparam \Add6~35 .sum_lutc_input = "cin";
defparam \Add6~35 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[24] (
// Equation(s):
// count[24] = DFFEAS((\Add6~35_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~35_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[24]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[24] .lut_mask = "aaaa";
defparam \count[24] .operation_mode = "normal";
defparam \count[24] .output_mode = "reg_only";
defparam \count[24] .register_cascade_mode = "off";
defparam \count[24] .sum_lutc_input = "datac";
defparam \count[24] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~30 (
// Equation(s):
// \Add6~30_combout  = count[25] $ ((((\Add6~37 ))))
// \Add6~32  = CARRY(((!\Add6~37 )) # (!count[25]))

	.clk(gnd),
	.dataa(count[25]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~37 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~30_combout ),
	.regout(),
	.cout(\Add6~32 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~30 .cin_used = "true";
defparam \Add6~30 .lut_mask = "5a5f";
defparam \Add6~30 .operation_mode = "arithmetic";
defparam \Add6~30 .output_mode = "comb_only";
defparam \Add6~30 .register_cascade_mode = "off";
defparam \Add6~30 .sum_lutc_input = "cin";
defparam \Add6~30 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[25] (
// Equation(s):
// count[25] = DFFEAS((\Add6~30_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~30_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[25]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[25] .lut_mask = "aaaa";
defparam \count[25] .operation_mode = "normal";
defparam \count[25] .output_mode = "reg_only";
defparam \count[25] .register_cascade_mode = "off";
defparam \count[25] .sum_lutc_input = "datac";
defparam \count[25] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~25 (
// Equation(s):
// \Add6~25_combout  = count[26] $ ((((!\Add6~32 ))))
// \Add6~27  = CARRY((count[26] & ((!\Add6~32 ))))

	.clk(gnd),
	.dataa(count[26]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~32 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~25_combout ),
	.regout(),
	.cout(\Add6~27 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~25 .cin_used = "true";
defparam \Add6~25 .lut_mask = "a50a";
defparam \Add6~25 .operation_mode = "arithmetic";
defparam \Add6~25 .output_mode = "comb_only";
defparam \Add6~25 .register_cascade_mode = "off";
defparam \Add6~25 .sum_lutc_input = "cin";
defparam \Add6~25 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[26] (
// Equation(s):
// count[26] = DFFEAS((\Add6~25_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~25_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[26]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[26] .lut_mask = "aaaa";
defparam \count[26] .operation_mode = "normal";
defparam \count[26] .output_mode = "reg_only";
defparam \count[26] .register_cascade_mode = "off";
defparam \count[26] .sum_lutc_input = "datac";
defparam \count[26] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~20 (
// Equation(s):
// \Add6~20_combout  = count[27] $ ((((\Add6~27 ))))
// \Add6~22  = CARRY(((!\Add6~27 )) # (!count[27]))

	.clk(gnd),
	.dataa(count[27]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~27 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~20_combout ),
	.regout(),
	.cout(\Add6~22 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~20 .cin_used = "true";
defparam \Add6~20 .lut_mask = "5a5f";
defparam \Add6~20 .operation_mode = "arithmetic";
defparam \Add6~20 .output_mode = "comb_only";
defparam \Add6~20 .register_cascade_mode = "off";
defparam \Add6~20 .sum_lutc_input = "cin";
defparam \Add6~20 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[27] (
// Equation(s):
// count[27] = DFFEAS((\Add6~20_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~20_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[27]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[27] .lut_mask = "aaaa";
defparam \count[27] .operation_mode = "normal";
defparam \count[27] .output_mode = "reg_only";
defparam \count[27] .register_cascade_mode = "off";
defparam \count[27] .sum_lutc_input = "datac";
defparam \count[27] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~15 (
// Equation(s):
// \Add6~15_combout  = count[28] $ ((((!\Add6~22 ))))
// \Add6~17  = CARRY((count[28] & ((!\Add6~22 ))))

	.clk(gnd),
	.dataa(count[28]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~22 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~15_combout ),
	.regout(),
	.cout(\Add6~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~15 .cin_used = "true";
defparam \Add6~15 .lut_mask = "a50a";
defparam \Add6~15 .operation_mode = "arithmetic";
defparam \Add6~15 .output_mode = "comb_only";
defparam \Add6~15 .register_cascade_mode = "off";
defparam \Add6~15 .sum_lutc_input = "cin";
defparam \Add6~15 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[28] (
// Equation(s):
// count[28] = DFFEAS((\Add6~15_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~15_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[28]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[28] .lut_mask = "aaaa";
defparam \count[28] .operation_mode = "normal";
defparam \count[28] .output_mode = "reg_only";
defparam \count[28] .register_cascade_mode = "off";
defparam \count[28] .sum_lutc_input = "datac";
defparam \count[28] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~10 (
// Equation(s):
// \Add6~10_combout  = count[29] $ ((((\Add6~17 ))))
// \Add6~12  = CARRY(((!\Add6~17 )) # (!count[29]))

	.clk(gnd),
	.dataa(count[29]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~10_combout ),
	.regout(),
	.cout(\Add6~12 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~10 .cin_used = "true";
defparam \Add6~10 .lut_mask = "5a5f";
defparam \Add6~10 .operation_mode = "arithmetic";
defparam \Add6~10 .output_mode = "comb_only";
defparam \Add6~10 .register_cascade_mode = "off";
defparam \Add6~10 .sum_lutc_input = "cin";
defparam \Add6~10 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[29] (
// Equation(s):
// count[29] = DFFEAS((\Add6~10_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~10_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[29]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[29] .lut_mask = "aaaa";
defparam \count[29] .operation_mode = "normal";
defparam \count[29] .output_mode = "reg_only";
defparam \count[29] .register_cascade_mode = "off";
defparam \count[29] .sum_lutc_input = "datac";
defparam \count[29] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~5 (
// Equation(s):
// \Add6~5_combout  = count[30] $ ((((!\Add6~12 ))))
// \Add6~7  = CARRY((count[30] & ((!\Add6~12 ))))

	.clk(gnd),
	.dataa(count[30]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~12 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~5_combout ),
	.regout(),
	.cout(\Add6~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~5 .cin_used = "true";
defparam \Add6~5 .lut_mask = "a50a";
defparam \Add6~5 .operation_mode = "arithmetic";
defparam \Add6~5 .output_mode = "comb_only";
defparam \Add6~5 .register_cascade_mode = "off";
defparam \Add6~5 .sum_lutc_input = "cin";
defparam \Add6~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[30] (
// Equation(s):
// count[30] = DFFEAS((\Add6~5_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~5_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[30]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[30] .lut_mask = "aaaa";
defparam \count[30] .operation_mode = "normal";
defparam \count[30] .output_mode = "reg_only";
defparam \count[30] .register_cascade_mode = "off";
defparam \count[30] .sum_lutc_input = "datac";
defparam \count[30] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add6~0 (
// Equation(s):
// \Add6~0_combout  = count[31] $ ((((\Add6~7 ))))

	.clk(gnd),
	.dataa(count[31]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add6~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~0 .cin_used = "true";
defparam \Add6~0 .lut_mask = "5a5a";
defparam \Add6~0 .operation_mode = "normal";
defparam \Add6~0 .output_mode = "comb_only";
defparam \Add6~0 .register_cascade_mode = "off";
defparam \Add6~0 .sum_lutc_input = "cin";
defparam \Add6~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \count[31] (
// Equation(s):
// count[31] = DFFEAS((\Add6~0_combout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Add6~0_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(count[31]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count[31] .lut_mask = "aaaa";
defparam \count[31] .operation_mode = "normal";
defparam \count[31] .output_mode = "reg_only";
defparam \count[31] .register_cascade_mode = "off";
defparam \count[31] .sum_lutc_input = "datac";
defparam \count[31] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~0 (
// Equation(s):
// \Equal4~0_combout  = (!count[31] & (!count[30] & (!count[29] & !count[28])))

	.clk(gnd),
	.dataa(count[31]),
	.datab(count[30]),
	.datac(count[29]),
	.datad(count[28]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~0 .lut_mask = "0001";
defparam \Equal4~0 .operation_mode = "normal";
defparam \Equal4~0 .output_mode = "comb_only";
defparam \Equal4~0 .register_cascade_mode = "off";
defparam \Equal4~0 .sum_lutc_input = "datac";
defparam \Equal4~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~1 (
// Equation(s):
// \Equal4~1_combout  = (!count[27] & (!count[26] & (!count[25] & !count[24])))

	.clk(gnd),
	.dataa(count[27]),
	.datab(count[26]),
	.datac(count[25]),
	.datad(count[24]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~1 .lut_mask = "0001";
defparam \Equal4~1 .operation_mode = "normal";
defparam \Equal4~1 .output_mode = "comb_only";
defparam \Equal4~1 .register_cascade_mode = "off";
defparam \Equal4~1 .sum_lutc_input = "datac";
defparam \Equal4~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~2 (
// Equation(s):
// \Equal4~2_combout  = (!count[23] & (!count[22] & (!count[21] & !count[20])))

	.clk(gnd),
	.dataa(count[23]),
	.datab(count[22]),
	.datac(count[21]),
	.datad(count[20]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~2 .lut_mask = "0001";
defparam \Equal4~2 .operation_mode = "normal";
defparam \Equal4~2 .output_mode = "comb_only";
defparam \Equal4~2 .register_cascade_mode = "off";
defparam \Equal4~2 .sum_lutc_input = "datac";
defparam \Equal4~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~3 (
// Equation(s):
// \Equal4~3_combout  = (!count[19] & (!count[18] & (!count[17] & !count[16])))

	.clk(gnd),
	.dataa(count[19]),
	.datab(count[18]),
	.datac(count[17]),
	.datad(count[16]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~3 .lut_mask = "0001";
defparam \Equal4~3 .operation_mode = "normal";
defparam \Equal4~3 .output_mode = "comb_only";
defparam \Equal4~3 .register_cascade_mode = "off";
defparam \Equal4~3 .sum_lutc_input = "datac";
defparam \Equal4~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal4~4 (
// Equation(s):
// \Equal4~4_combout  = (\Equal4~0_combout  & (\Equal4~1_combout  & (\Equal4~2_combout  & \Equal4~3_combout )))

	.clk(gnd),
	.dataa(\Equal4~0_combout ),
	.datab(\Equal4~1_combout ),
	.datac(\Equal4~2_combout ),
	.datad(\Equal4~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal4~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal4~4 .lut_mask = "8000";
defparam \Equal4~4 .operation_mode = "normal";
defparam \Equal4~4 .output_mode = "comb_only";
defparam \Equal4~4 .register_cascade_mode = "off";
defparam \Equal4~4 .sum_lutc_input = "datac";
defparam \Equal4~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell clk_1kHz(
// Equation(s):
// \clk_1kHz~regout  = DFFEAS((\clk_1kHz~regout  $ (((\Equal4~4_combout  & \Equal4~9_combout )))), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\clk_1kHz~regout ),
	.datac(\Equal4~4_combout ),
	.datad(\Equal4~9_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\clk_1kHz~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam clk_1kHz.lut_mask = "3ccc";
defparam clk_1kHz.operation_mode = "normal";
defparam clk_1kHz.output_mode = "reg_only";
defparam clk_1kHz.register_cascade_mode = "off";
defparam clk_1kHz.sum_lutc_input = "datac";
defparam clk_1kHz.synch_mode = "off";
// synopsys translate_on

maxii_lcell \row_num[0] (
// Equation(s):
// row_num[0] = DFFEAS((!row_num[0]), \clk_1kHz~regout , VCC, , , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(row_num[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row_num[0] .lut_mask = "5555";
defparam \row_num[0] .operation_mode = "normal";
defparam \row_num[0] .output_mode = "reg_only";
defparam \row_num[0] .register_cascade_mode = "off";
defparam \row_num[0] .sum_lutc_input = "datac";
defparam \row_num[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \row_num[1] (
// Equation(s):
// row_num[1] = DFFEAS(((row_num[0] $ (row_num[1]))), \clk_1kHz~regout , VCC, , , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(row_num[0]),
	.datad(row_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(row_num[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row_num[1] .lut_mask = "0ff0";
defparam \row_num[1] .operation_mode = "normal";
defparam \row_num[1] .output_mode = "reg_only";
defparam \row_num[1] .register_cascade_mode = "off";
defparam \row_num[1] .sum_lutc_input = "datac";
defparam \row_num[1] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \row_num[2] (
// Equation(s):
// row_num[2] = DFFEAS((row_num[2] $ (((row_num[0] & row_num[1])))), \clk_1kHz~regout , VCC, , , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(vcc),
	.datab(row_num[2]),
	.datac(row_num[0]),
	.datad(row_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(row_num[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row_num[2] .lut_mask = "3ccc";
defparam \row_num[2] .operation_mode = "normal";
defparam \row_num[2] .output_mode = "reg_only";
defparam \row_num[2] .register_cascade_mode = "off";
defparam \row_num[2] .sum_lutc_input = "datac";
defparam \row_num[2] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \row[0]~reg0 (
// Equation(s):
// \row[0]~reg0_regout  = DFFEAS((row_num[0]) # ((row_num[1])), \clk_1kHz~regout , VCC, , , VCC, , , row_num[2])

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(row_num[2]),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\row[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row[0]~reg0 .lut_mask = "eeee";
defparam \row[0]~reg0 .operation_mode = "normal";
defparam \row[0]~reg0 .output_mode = "reg_only";
defparam \row[0]~reg0 .register_cascade_mode = "off";
defparam \row[0]~reg0 .sum_lutc_input = "datac";
defparam \row[0]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \row[1]~reg0 (
// Equation(s):
// \row[1]~reg0_regout  = DFFEAS(((row_num[1])) # (!row_num[0]), \clk_1kHz~regout , VCC, , , VCC, , , row_num[2])

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(row_num[2]),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\row[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row[1]~reg0 .lut_mask = "dddd";
defparam \row[1]~reg0 .operation_mode = "normal";
defparam \row[1]~reg0 .output_mode = "reg_only";
defparam \row[1]~reg0 .register_cascade_mode = "off";
defparam \row[1]~reg0 .sum_lutc_input = "datac";
defparam \row[1]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \row[2]~reg0 (
// Equation(s):
// \row[2]~reg0_regout  = DFFEAS((row_num[0]) # ((!row_num[1])), \clk_1kHz~regout , VCC, , , VCC, , , row_num[2])

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(row_num[2]),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\row[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row[2]~reg0 .lut_mask = "bbbb";
defparam \row[2]~reg0 .operation_mode = "normal";
defparam \row[2]~reg0 .output_mode = "reg_only";
defparam \row[2]~reg0 .register_cascade_mode = "off";
defparam \row[2]~reg0 .sum_lutc_input = "datac";
defparam \row[2]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \row[3]~reg0 (
// Equation(s):
// \row[3]~reg0_regout  = DFFEAS(((!row_num[1])) # (!row_num[0]), \clk_1kHz~regout , VCC, , , VCC, , , row_num[2])

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(row_num[2]),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\row[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row[3]~reg0 .lut_mask = "7777";
defparam \row[3]~reg0 .operation_mode = "normal";
defparam \row[3]~reg0 .output_mode = "reg_only";
defparam \row[3]~reg0 .register_cascade_mode = "off";
defparam \row[3]~reg0 .sum_lutc_input = "datac";
defparam \row[3]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \row[4]~reg0 (
// Equation(s):
// \row[4]~reg0_regout  = DFFEAS((row_num[0]) # ((row_num[1])), \clk_1kHz~regout , VCC, , , VCC, , , !row_num[2])

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!row_num[2]),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\row[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row[4]~reg0 .lut_mask = "eeee";
defparam \row[4]~reg0 .operation_mode = "normal";
defparam \row[4]~reg0 .output_mode = "reg_only";
defparam \row[4]~reg0 .register_cascade_mode = "off";
defparam \row[4]~reg0 .sum_lutc_input = "datac";
defparam \row[4]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \row[5]~reg0 (
// Equation(s):
// \row[5]~reg0_regout  = DFFEAS(((row_num[1])) # (!row_num[0]), \clk_1kHz~regout , VCC, , , VCC, , , !row_num[2])

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!row_num[2]),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\row[5]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row[5]~reg0 .lut_mask = "dddd";
defparam \row[5]~reg0 .operation_mode = "normal";
defparam \row[5]~reg0 .output_mode = "reg_only";
defparam \row[5]~reg0 .register_cascade_mode = "off";
defparam \row[5]~reg0 .sum_lutc_input = "datac";
defparam \row[5]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \row[6]~reg0 (
// Equation(s):
// \row[6]~reg0_regout  = DFFEAS((row_num[0]) # ((!row_num[1])), \clk_1kHz~regout , VCC, , , VCC, , , !row_num[2])

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!row_num[2]),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\row[6]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row[6]~reg0 .lut_mask = "bbbb";
defparam \row[6]~reg0 .operation_mode = "normal";
defparam \row[6]~reg0 .output_mode = "reg_only";
defparam \row[6]~reg0 .register_cascade_mode = "off";
defparam \row[6]~reg0 .sum_lutc_input = "datac";
defparam \row[6]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \row[7]~reg0 (
// Equation(s):
// \row[7]~reg0_regout  = DFFEAS(((!row_num[1])) # (!row_num[0]), \clk_1kHz~regout , VCC, , , VCC, , , !row_num[2])

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!row_num[2]),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\row[7]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \row[7]~reg0 .lut_mask = "7777";
defparam \row[7]~reg0 .operation_mode = "normal";
defparam \row[7]~reg0 .output_mode = "reg_only";
defparam \row[7]~reg0 .register_cascade_mode = "off";
defparam \row[7]~reg0 .sum_lutc_input = "datac";
defparam \row[7]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_io \start~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\start~combout ),
	.padio(start));
// synopsys translate_off
defparam \start~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \a1|tcnt1[0] (
// Equation(s):
// \a1|tcnt1 [0] = DFFEAS((!\a1|tcnt1 [0]), \clk~combout , \start~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[0] .lut_mask = "5555";
defparam \a1|tcnt1[0] .operation_mode = "normal";
defparam \a1|tcnt1[0] .output_mode = "reg_only";
defparam \a1|tcnt1[0] .register_cascade_mode = "off";
defparam \a1|tcnt1[0] .sum_lutc_input = "datac";
defparam \a1|tcnt1[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[1] (
// Equation(s):
// \a1|tcnt1 [1] = DFFEAS(\a1|tcnt1 [0] $ ((\a1|tcnt1 [1])), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[1]~9  = CARRY((\a1|tcnt1 [0] & (\a1|tcnt1 [1])))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [0]),
	.datab(\a1|tcnt1 [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [1]),
	.cout(\a1|tcnt1[1]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[1] .lut_mask = "6688";
defparam \a1|tcnt1[1] .operation_mode = "arithmetic";
defparam \a1|tcnt1[1] .output_mode = "reg_only";
defparam \a1|tcnt1[1] .register_cascade_mode = "off";
defparam \a1|tcnt1[1] .sum_lutc_input = "cin";
defparam \a1|tcnt1[1] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[2] (
// Equation(s):
// \a1|tcnt1 [2] = DFFEAS(\a1|tcnt1 [2] $ ((((\a1|tcnt1[1]~9 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[2]~11  = CARRY(((!\a1|tcnt1[1]~9 )) # (!\a1|tcnt1 [2]))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[1]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [2]),
	.cout(\a1|tcnt1[2]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[2] .cin_used = "true";
defparam \a1|tcnt1[2] .lut_mask = "5a5f";
defparam \a1|tcnt1[2] .operation_mode = "arithmetic";
defparam \a1|tcnt1[2] .output_mode = "reg_only";
defparam \a1|tcnt1[2] .register_cascade_mode = "off";
defparam \a1|tcnt1[2] .sum_lutc_input = "cin";
defparam \a1|tcnt1[2] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[3] (
// Equation(s):
// \a1|tcnt1 [3] = DFFEAS(\a1|tcnt1 [3] $ ((((!\a1|tcnt1[2]~11 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[3]~13  = CARRY((\a1|tcnt1 [3] & ((!\a1|tcnt1[2]~11 ))))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[2]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [3]),
	.cout(\a1|tcnt1[3]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[3] .cin_used = "true";
defparam \a1|tcnt1[3] .lut_mask = "a50a";
defparam \a1|tcnt1[3] .operation_mode = "arithmetic";
defparam \a1|tcnt1[3] .output_mode = "reg_only";
defparam \a1|tcnt1[3] .register_cascade_mode = "off";
defparam \a1|tcnt1[3] .sum_lutc_input = "cin";
defparam \a1|tcnt1[3] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[4] (
// Equation(s):
// \a1|tcnt1 [4] = DFFEAS(\a1|tcnt1 [4] $ ((((\a1|tcnt1[3]~13 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[4]~15  = CARRY(((!\a1|tcnt1[3]~13 )) # (!\a1|tcnt1 [4]))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[3]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [4]),
	.cout(\a1|tcnt1[4]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[4] .cin_used = "true";
defparam \a1|tcnt1[4] .lut_mask = "5a5f";
defparam \a1|tcnt1[4] .operation_mode = "arithmetic";
defparam \a1|tcnt1[4] .output_mode = "reg_only";
defparam \a1|tcnt1[4] .register_cascade_mode = "off";
defparam \a1|tcnt1[4] .sum_lutc_input = "cin";
defparam \a1|tcnt1[4] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[5] (
// Equation(s):
// \a1|tcnt1 [5] = DFFEAS(\a1|tcnt1 [5] $ ((((!\a1|tcnt1[4]~15 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[5]~17  = CARRY((\a1|tcnt1 [5] & ((!\a1|tcnt1[4]~15 ))))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[4]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [5]),
	.cout(\a1|tcnt1[5]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[5] .cin_used = "true";
defparam \a1|tcnt1[5] .lut_mask = "a50a";
defparam \a1|tcnt1[5] .operation_mode = "arithmetic";
defparam \a1|tcnt1[5] .output_mode = "reg_only";
defparam \a1|tcnt1[5] .register_cascade_mode = "off";
defparam \a1|tcnt1[5] .sum_lutc_input = "cin";
defparam \a1|tcnt1[5] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[6] (
// Equation(s):
// \a1|tcnt1 [6] = DFFEAS(\a1|tcnt1 [6] $ ((((\a1|tcnt1[5]~17 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[6]~19  = CARRY(((!\a1|tcnt1[5]~17 )) # (!\a1|tcnt1 [6]))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[5]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [6]),
	.cout(\a1|tcnt1[6]~19 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[6] .cin_used = "true";
defparam \a1|tcnt1[6] .lut_mask = "5a5f";
defparam \a1|tcnt1[6] .operation_mode = "arithmetic";
defparam \a1|tcnt1[6] .output_mode = "reg_only";
defparam \a1|tcnt1[6] .register_cascade_mode = "off";
defparam \a1|tcnt1[6] .sum_lutc_input = "cin";
defparam \a1|tcnt1[6] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[7] (
// Equation(s):
// \a1|tcnt1 [7] = DFFEAS(\a1|tcnt1 [7] $ ((((!\a1|tcnt1[6]~19 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[7]~21  = CARRY((\a1|tcnt1 [7] & ((!\a1|tcnt1[6]~19 ))))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[6]~19 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [7]),
	.cout(\a1|tcnt1[7]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[7] .cin_used = "true";
defparam \a1|tcnt1[7] .lut_mask = "a50a";
defparam \a1|tcnt1[7] .operation_mode = "arithmetic";
defparam \a1|tcnt1[7] .output_mode = "reg_only";
defparam \a1|tcnt1[7] .register_cascade_mode = "off";
defparam \a1|tcnt1[7] .sum_lutc_input = "cin";
defparam \a1|tcnt1[7] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[8] (
// Equation(s):
// \a1|tcnt1 [8] = DFFEAS(\a1|tcnt1 [8] $ ((((\a1|tcnt1[7]~21 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[8]~23  = CARRY(((!\a1|tcnt1[7]~21 )) # (!\a1|tcnt1 [8]))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[7]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [8]),
	.cout(\a1|tcnt1[8]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[8] .cin_used = "true";
defparam \a1|tcnt1[8] .lut_mask = "5a5f";
defparam \a1|tcnt1[8] .operation_mode = "arithmetic";
defparam \a1|tcnt1[8] .output_mode = "reg_only";
defparam \a1|tcnt1[8] .register_cascade_mode = "off";
defparam \a1|tcnt1[8] .sum_lutc_input = "cin";
defparam \a1|tcnt1[8] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[9] (
// Equation(s):
// \a1|tcnt1 [9] = DFFEAS(\a1|tcnt1 [9] $ ((((!\a1|tcnt1[8]~23 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[9]~25  = CARRY((\a1|tcnt1 [9] & ((!\a1|tcnt1[8]~23 ))))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[8]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [9]),
	.cout(\a1|tcnt1[9]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[9] .cin_used = "true";
defparam \a1|tcnt1[9] .lut_mask = "a50a";
defparam \a1|tcnt1[9] .operation_mode = "arithmetic";
defparam \a1|tcnt1[9] .output_mode = "reg_only";
defparam \a1|tcnt1[9] .register_cascade_mode = "off";
defparam \a1|tcnt1[9] .sum_lutc_input = "cin";
defparam \a1|tcnt1[9] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[10] (
// Equation(s):
// \a1|tcnt1 [10] = DFFEAS(\a1|tcnt1 [10] $ ((((\a1|tcnt1[9]~25 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[10]~27  = CARRY(((!\a1|tcnt1[9]~25 )) # (!\a1|tcnt1 [10]))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[9]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [10]),
	.cout(\a1|tcnt1[10]~27 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[10] .cin_used = "true";
defparam \a1|tcnt1[10] .lut_mask = "5a5f";
defparam \a1|tcnt1[10] .operation_mode = "arithmetic";
defparam \a1|tcnt1[10] .output_mode = "reg_only";
defparam \a1|tcnt1[10] .register_cascade_mode = "off";
defparam \a1|tcnt1[10] .sum_lutc_input = "cin";
defparam \a1|tcnt1[10] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[11] (
// Equation(s):
// \a1|tcnt1 [11] = DFFEAS(\a1|tcnt1 [11] $ ((((!\a1|tcnt1[10]~27 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[11]~29  = CARRY((\a1|tcnt1 [11] & ((!\a1|tcnt1[10]~27 ))))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[10]~27 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [11]),
	.cout(\a1|tcnt1[11]~29 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[11] .cin_used = "true";
defparam \a1|tcnt1[11] .lut_mask = "a50a";
defparam \a1|tcnt1[11] .operation_mode = "arithmetic";
defparam \a1|tcnt1[11] .output_mode = "reg_only";
defparam \a1|tcnt1[11] .register_cascade_mode = "off";
defparam \a1|tcnt1[11] .sum_lutc_input = "cin";
defparam \a1|tcnt1[11] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[12] (
// Equation(s):
// \a1|tcnt1 [12] = DFFEAS(\a1|tcnt1 [12] $ ((((\a1|tcnt1[11]~29 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[12]~31  = CARRY(((!\a1|tcnt1[11]~29 )) # (!\a1|tcnt1 [12]))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[11]~29 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [12]),
	.cout(\a1|tcnt1[12]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[12] .cin_used = "true";
defparam \a1|tcnt1[12] .lut_mask = "5a5f";
defparam \a1|tcnt1[12] .operation_mode = "arithmetic";
defparam \a1|tcnt1[12] .output_mode = "reg_only";
defparam \a1|tcnt1[12] .register_cascade_mode = "off";
defparam \a1|tcnt1[12] .sum_lutc_input = "cin";
defparam \a1|tcnt1[12] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[13] (
// Equation(s):
// \a1|tcnt1 [13] = DFFEAS(\a1|tcnt1 [13] $ ((((!\a1|tcnt1[12]~31 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[13]~33  = CARRY((\a1|tcnt1 [13] & ((!\a1|tcnt1[12]~31 ))))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[12]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [13]),
	.cout(\a1|tcnt1[13]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[13] .cin_used = "true";
defparam \a1|tcnt1[13] .lut_mask = "a50a";
defparam \a1|tcnt1[13] .operation_mode = "arithmetic";
defparam \a1|tcnt1[13] .output_mode = "reg_only";
defparam \a1|tcnt1[13] .register_cascade_mode = "off";
defparam \a1|tcnt1[13] .sum_lutc_input = "cin";
defparam \a1|tcnt1[13] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[14] (
// Equation(s):
// \a1|tcnt1 [14] = DFFEAS(\a1|tcnt1 [14] $ ((((\a1|tcnt1[13]~33 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[14]~35  = CARRY(((!\a1|tcnt1[13]~33 )) # (!\a1|tcnt1 [14]))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[13]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [14]),
	.cout(\a1|tcnt1[14]~35 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[14] .cin_used = "true";
defparam \a1|tcnt1[14] .lut_mask = "5a5f";
defparam \a1|tcnt1[14] .operation_mode = "arithmetic";
defparam \a1|tcnt1[14] .output_mode = "reg_only";
defparam \a1|tcnt1[14] .register_cascade_mode = "off";
defparam \a1|tcnt1[14] .sum_lutc_input = "cin";
defparam \a1|tcnt1[14] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[15] (
// Equation(s):
// \a1|tcnt1 [15] = DFFEAS(\a1|tcnt1 [15] $ ((((!\a1|tcnt1[14]~35 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[15]~37  = CARRY((\a1|tcnt1 [15] & ((!\a1|tcnt1[14]~35 ))))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[14]~35 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [15]),
	.cout(\a1|tcnt1[15]~37 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[15] .cin_used = "true";
defparam \a1|tcnt1[15] .lut_mask = "a50a";
defparam \a1|tcnt1[15] .operation_mode = "arithmetic";
defparam \a1|tcnt1[15] .output_mode = "reg_only";
defparam \a1|tcnt1[15] .register_cascade_mode = "off";
defparam \a1|tcnt1[15] .sum_lutc_input = "cin";
defparam \a1|tcnt1[15] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[16] (
// Equation(s):
// \a1|tcnt1 [16] = DFFEAS(\a1|tcnt1 [16] $ ((((\a1|tcnt1[15]~37 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[16]~1  = CARRY(((!\a1|tcnt1[15]~37 )) # (!\a1|tcnt1 [16]))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[15]~37 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [16]),
	.cout(\a1|tcnt1[16]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[16] .cin_used = "true";
defparam \a1|tcnt1[16] .lut_mask = "5a5f";
defparam \a1|tcnt1[16] .operation_mode = "arithmetic";
defparam \a1|tcnt1[16] .output_mode = "reg_only";
defparam \a1|tcnt1[16] .register_cascade_mode = "off";
defparam \a1|tcnt1[16] .sum_lutc_input = "cin";
defparam \a1|tcnt1[16] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[17] (
// Equation(s):
// \a1|tcnt1 [17] = DFFEAS(\a1|tcnt1 [17] $ ((((!\a1|tcnt1[16]~1 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[17]~3  = CARRY((\a1|tcnt1 [17] & ((!\a1|tcnt1[16]~1 ))))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [17]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[16]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [17]),
	.cout(\a1|tcnt1[17]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[17] .cin_used = "true";
defparam \a1|tcnt1[17] .lut_mask = "a50a";
defparam \a1|tcnt1[17] .operation_mode = "arithmetic";
defparam \a1|tcnt1[17] .output_mode = "reg_only";
defparam \a1|tcnt1[17] .register_cascade_mode = "off";
defparam \a1|tcnt1[17] .sum_lutc_input = "cin";
defparam \a1|tcnt1[17] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[18] (
// Equation(s):
// \a1|tcnt1 [18] = DFFEAS(\a1|tcnt1 [18] $ ((((\a1|tcnt1[17]~3 )))), \clk~combout , \start~combout , , , , , , )
// \a1|tcnt1[18]~5  = CARRY(((!\a1|tcnt1[17]~3 )) # (!\a1|tcnt1 [18]))

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[17]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [18]),
	.cout(\a1|tcnt1[18]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[18] .cin_used = "true";
defparam \a1|tcnt1[18] .lut_mask = "5a5f";
defparam \a1|tcnt1[18] .operation_mode = "arithmetic";
defparam \a1|tcnt1[18] .output_mode = "reg_only";
defparam \a1|tcnt1[18] .register_cascade_mode = "off";
defparam \a1|tcnt1[18] .sum_lutc_input = "cin";
defparam \a1|tcnt1[18] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|tcnt1[19] (
// Equation(s):
// \a1|tcnt1 [19] = DFFEAS(\a1|tcnt1 [19] $ ((((!\a1|tcnt1[18]~5 )))), \clk~combout , \start~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\a1|tcnt1 [19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a1|tcnt1[18]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|tcnt1 [19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|tcnt1[19] .cin_used = "true";
defparam \a1|tcnt1[19] .lut_mask = "a5a5";
defparam \a1|tcnt1[19] .operation_mode = "normal";
defparam \a1|tcnt1[19] .output_mode = "reg_only";
defparam \a1|tcnt1[19] .register_cascade_mode = "off";
defparam \a1|tcnt1[19] .sum_lutc_input = "cin";
defparam \a1|tcnt1[19] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|Equal0~0 (
// Equation(s):
// \a1|Equal0~0_combout  = (!\a1|tcnt1 [16] & (!\a1|tcnt1 [17] & (!\a1|tcnt1 [18] & !\a1|tcnt1 [19])))

	.clk(gnd),
	.dataa(\a1|tcnt1 [16]),
	.datab(\a1|tcnt1 [17]),
	.datac(\a1|tcnt1 [18]),
	.datad(\a1|tcnt1 [19]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a1|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|Equal0~0 .lut_mask = "0001";
defparam \a1|Equal0~0 .operation_mode = "normal";
defparam \a1|Equal0~0 .output_mode = "comb_only";
defparam \a1|Equal0~0 .register_cascade_mode = "off";
defparam \a1|Equal0~0 .sum_lutc_input = "datac";
defparam \a1|Equal0~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|Equal0~1 (
// Equation(s):
// \a1|Equal0~1_combout  = (\a1|tcnt1 [0] & (!\a1|tcnt1 [1] & (!\a1|tcnt1 [2] & !\a1|tcnt1 [3])))

	.clk(gnd),
	.dataa(\a1|tcnt1 [0]),
	.datab(\a1|tcnt1 [1]),
	.datac(\a1|tcnt1 [2]),
	.datad(\a1|tcnt1 [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a1|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|Equal0~1 .lut_mask = "0002";
defparam \a1|Equal0~1 .operation_mode = "normal";
defparam \a1|Equal0~1 .output_mode = "comb_only";
defparam \a1|Equal0~1 .register_cascade_mode = "off";
defparam \a1|Equal0~1 .sum_lutc_input = "datac";
defparam \a1|Equal0~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|Equal0~2 (
// Equation(s):
// \a1|Equal0~2_combout  = (!\a1|tcnt1 [4] & (!\a1|tcnt1 [5] & (!\a1|tcnt1 [6] & !\a1|tcnt1 [7])))

	.clk(gnd),
	.dataa(\a1|tcnt1 [4]),
	.datab(\a1|tcnt1 [5]),
	.datac(\a1|tcnt1 [6]),
	.datad(\a1|tcnt1 [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a1|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|Equal0~2 .lut_mask = "0001";
defparam \a1|Equal0~2 .operation_mode = "normal";
defparam \a1|Equal0~2 .output_mode = "comb_only";
defparam \a1|Equal0~2 .register_cascade_mode = "off";
defparam \a1|Equal0~2 .sum_lutc_input = "datac";
defparam \a1|Equal0~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|Equal0~3 (
// Equation(s):
// \a1|Equal0~3_combout  = (!\a1|tcnt1 [8] & (!\a1|tcnt1 [9] & (!\a1|tcnt1 [10] & !\a1|tcnt1 [11])))

	.clk(gnd),
	.dataa(\a1|tcnt1 [8]),
	.datab(\a1|tcnt1 [9]),
	.datac(\a1|tcnt1 [10]),
	.datad(\a1|tcnt1 [11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a1|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|Equal0~3 .lut_mask = "0001";
defparam \a1|Equal0~3 .operation_mode = "normal";
defparam \a1|Equal0~3 .output_mode = "comb_only";
defparam \a1|Equal0~3 .register_cascade_mode = "off";
defparam \a1|Equal0~3 .sum_lutc_input = "datac";
defparam \a1|Equal0~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|Equal0~4 (
// Equation(s):
// \a1|Equal0~4_combout  = (!\a1|tcnt1 [12] & (!\a1|tcnt1 [13] & (!\a1|tcnt1 [14] & !\a1|tcnt1 [15])))

	.clk(gnd),
	.dataa(\a1|tcnt1 [12]),
	.datab(\a1|tcnt1 [13]),
	.datac(\a1|tcnt1 [14]),
	.datad(\a1|tcnt1 [15]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a1|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|Equal0~4 .lut_mask = "0001";
defparam \a1|Equal0~4 .operation_mode = "normal";
defparam \a1|Equal0~4 .output_mode = "comb_only";
defparam \a1|Equal0~4 .register_cascade_mode = "off";
defparam \a1|Equal0~4 .sum_lutc_input = "datac";
defparam \a1|Equal0~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|Equal0~5 (
// Equation(s):
// \a1|Equal0~5_combout  = (\a1|Equal0~1_combout  & (\a1|Equal0~2_combout  & (\a1|Equal0~3_combout  & \a1|Equal0~4_combout )))

	.clk(gnd),
	.dataa(\a1|Equal0~1_combout ),
	.datab(\a1|Equal0~2_combout ),
	.datac(\a1|Equal0~3_combout ),
	.datad(\a1|Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a1|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|Equal0~5 .lut_mask = "8000";
defparam \a1|Equal0~5 .operation_mode = "normal";
defparam \a1|Equal0~5 .output_mode = "comb_only";
defparam \a1|Equal0~5 .register_cascade_mode = "off";
defparam \a1|Equal0~5 .sum_lutc_input = "datac";
defparam \a1|Equal0~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a1|key_out (
// Equation(s):
// \a1|key_out~regout  = DFFEAS((\a1|key_out~regout ) # ((\a1|Equal0~0_combout  & (\a1|Equal0~5_combout ))), \clk~combout , \start~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\a1|key_out~regout ),
	.datab(\a1|Equal0~0_combout ),
	.datac(\a1|Equal0~5_combout ),
	.datad(vcc),
	.aclr(!\start~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a1|key_out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a1|key_out .lut_mask = "eaea";
defparam \a1|key_out .operation_mode = "normal";
defparam \a1|key_out .output_mode = "reg_only";
defparam \a1|key_out .register_cascade_mode = "off";
defparam \a1|key_out .sum_lutc_input = "datac";
defparam \a1|key_out .synch_mode = "off";
// synopsys translate_on

maxii_lcell start_con(
// Equation(s):
// \start_con~regout  = DFFEAS(VCC, \a1|key_out~regout , VCC, , , , , , )

	.clk(\a1|key_out~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\start_con~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam start_con.lut_mask = "ffff";
defparam start_con.operation_mode = "normal";
defparam start_con.output_mode = "reg_only";
defparam start_con.register_cascade_mode = "off";
defparam start_con.sum_lutc_input = "datac";
defparam start_con.synch_mode = "off";
// synopsys translate_on

maxii_io \time_sign[4]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\time_sign~combout [4]),
	.padio(time_sign[4]));
// synopsys translate_off
defparam \time_sign[4]~I .operation_mode = "input";
// synopsys translate_on

maxii_io \time_sign[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\time_sign~combout [0]),
	.padio(time_sign[0]));
// synopsys translate_off
defparam \time_sign[0]~I .operation_mode = "input";
// synopsys translate_on

maxii_io \time_sign[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\time_sign~combout [1]),
	.padio(time_sign[1]));
// synopsys translate_off
defparam \time_sign[1]~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \Equal7~0 (
// Equation(s):
// \Equal7~0_combout  = (\time_sign~combout [0]) # ((\time_sign~combout [1]))

	.clk(gnd),
	.dataa(\time_sign~combout [0]),
	.datab(\time_sign~combout [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal7~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal7~0 .lut_mask = "eeee";
defparam \Equal7~0 .operation_mode = "normal";
defparam \Equal7~0 .output_mode = "comb_only";
defparam \Equal7~0 .register_cascade_mode = "off";
defparam \Equal7~0 .sum_lutc_input = "datac";
defparam \Equal7~0 .synch_mode = "off";
// synopsys translate_on

maxii_io \time_sign[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\time_sign~combout [2]),
	.padio(time_sign[2]));
// synopsys translate_off
defparam \time_sign[2]~I .operation_mode = "input";
// synopsys translate_on

maxii_io \time_sign[3]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\time_sign~combout [3]),
	.padio(time_sign[3]));
// synopsys translate_off
defparam \time_sign[3]~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \Equal7~1 (
// Equation(s):
// \Equal7~1_combout  = (\time_sign~combout [4]) # ((\Equal7~0_combout ) # ((\time_sign~combout [2]) # (\time_sign~combout [3])))

	.clk(gnd),
	.dataa(\time_sign~combout [4]),
	.datab(\Equal7~0_combout ),
	.datac(\time_sign~combout [2]),
	.datad(\time_sign~combout [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal7~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal7~1 .lut_mask = "fffe";
defparam \Equal7~1 .operation_mode = "normal";
defparam \Equal7~1 .output_mode = "comb_only";
defparam \Equal7~1 .register_cascade_mode = "off";
defparam \Equal7~1 .sum_lutc_input = "datac";
defparam \Equal7~1 .synch_mode = "off";
// synopsys translate_on

maxii_io \change_map~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\change_map~combout ),
	.padio(change_map));
// synopsys translate_off
defparam \change_map~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \a2|tcnt1[0] (
// Equation(s):
// \a2|tcnt1 [0] = DFFEAS((!\a2|tcnt1 [0]), \clk~combout , \change_map~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[0] .lut_mask = "5555";
defparam \a2|tcnt1[0] .operation_mode = "normal";
defparam \a2|tcnt1[0] .output_mode = "reg_only";
defparam \a2|tcnt1[0] .register_cascade_mode = "off";
defparam \a2|tcnt1[0] .sum_lutc_input = "datac";
defparam \a2|tcnt1[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[1] (
// Equation(s):
// \a2|tcnt1 [1] = DFFEAS(\a2|tcnt1 [0] $ ((\a2|tcnt1 [1])), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[1]~9  = CARRY((\a2|tcnt1 [0] & (\a2|tcnt1 [1])))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [0]),
	.datab(\a2|tcnt1 [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [1]),
	.cout(\a2|tcnt1[1]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[1] .lut_mask = "6688";
defparam \a2|tcnt1[1] .operation_mode = "arithmetic";
defparam \a2|tcnt1[1] .output_mode = "reg_only";
defparam \a2|tcnt1[1] .register_cascade_mode = "off";
defparam \a2|tcnt1[1] .sum_lutc_input = "cin";
defparam \a2|tcnt1[1] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[2] (
// Equation(s):
// \a2|tcnt1 [2] = DFFEAS(\a2|tcnt1 [2] $ ((((\a2|tcnt1[1]~9 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[2]~11  = CARRY(((!\a2|tcnt1[1]~9 )) # (!\a2|tcnt1 [2]))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[1]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [2]),
	.cout(\a2|tcnt1[2]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[2] .cin_used = "true";
defparam \a2|tcnt1[2] .lut_mask = "5a5f";
defparam \a2|tcnt1[2] .operation_mode = "arithmetic";
defparam \a2|tcnt1[2] .output_mode = "reg_only";
defparam \a2|tcnt1[2] .register_cascade_mode = "off";
defparam \a2|tcnt1[2] .sum_lutc_input = "cin";
defparam \a2|tcnt1[2] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[3] (
// Equation(s):
// \a2|tcnt1 [3] = DFFEAS(\a2|tcnt1 [3] $ ((((!\a2|tcnt1[2]~11 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[3]~13  = CARRY((\a2|tcnt1 [3] & ((!\a2|tcnt1[2]~11 ))))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[2]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [3]),
	.cout(\a2|tcnt1[3]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[3] .cin_used = "true";
defparam \a2|tcnt1[3] .lut_mask = "a50a";
defparam \a2|tcnt1[3] .operation_mode = "arithmetic";
defparam \a2|tcnt1[3] .output_mode = "reg_only";
defparam \a2|tcnt1[3] .register_cascade_mode = "off";
defparam \a2|tcnt1[3] .sum_lutc_input = "cin";
defparam \a2|tcnt1[3] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[4] (
// Equation(s):
// \a2|tcnt1 [4] = DFFEAS(\a2|tcnt1 [4] $ ((((\a2|tcnt1[3]~13 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[4]~15  = CARRY(((!\a2|tcnt1[3]~13 )) # (!\a2|tcnt1 [4]))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[3]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [4]),
	.cout(\a2|tcnt1[4]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[4] .cin_used = "true";
defparam \a2|tcnt1[4] .lut_mask = "5a5f";
defparam \a2|tcnt1[4] .operation_mode = "arithmetic";
defparam \a2|tcnt1[4] .output_mode = "reg_only";
defparam \a2|tcnt1[4] .register_cascade_mode = "off";
defparam \a2|tcnt1[4] .sum_lutc_input = "cin";
defparam \a2|tcnt1[4] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[5] (
// Equation(s):
// \a2|tcnt1 [5] = DFFEAS(\a2|tcnt1 [5] $ ((((!\a2|tcnt1[4]~15 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[5]~17  = CARRY((\a2|tcnt1 [5] & ((!\a2|tcnt1[4]~15 ))))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[4]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [5]),
	.cout(\a2|tcnt1[5]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[5] .cin_used = "true";
defparam \a2|tcnt1[5] .lut_mask = "a50a";
defparam \a2|tcnt1[5] .operation_mode = "arithmetic";
defparam \a2|tcnt1[5] .output_mode = "reg_only";
defparam \a2|tcnt1[5] .register_cascade_mode = "off";
defparam \a2|tcnt1[5] .sum_lutc_input = "cin";
defparam \a2|tcnt1[5] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[6] (
// Equation(s):
// \a2|tcnt1 [6] = DFFEAS(\a2|tcnt1 [6] $ ((((\a2|tcnt1[5]~17 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[6]~19  = CARRY(((!\a2|tcnt1[5]~17 )) # (!\a2|tcnt1 [6]))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[5]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [6]),
	.cout(\a2|tcnt1[6]~19 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[6] .cin_used = "true";
defparam \a2|tcnt1[6] .lut_mask = "5a5f";
defparam \a2|tcnt1[6] .operation_mode = "arithmetic";
defparam \a2|tcnt1[6] .output_mode = "reg_only";
defparam \a2|tcnt1[6] .register_cascade_mode = "off";
defparam \a2|tcnt1[6] .sum_lutc_input = "cin";
defparam \a2|tcnt1[6] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[7] (
// Equation(s):
// \a2|tcnt1 [7] = DFFEAS(\a2|tcnt1 [7] $ ((((!\a2|tcnt1[6]~19 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[7]~21  = CARRY((\a2|tcnt1 [7] & ((!\a2|tcnt1[6]~19 ))))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[6]~19 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [7]),
	.cout(\a2|tcnt1[7]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[7] .cin_used = "true";
defparam \a2|tcnt1[7] .lut_mask = "a50a";
defparam \a2|tcnt1[7] .operation_mode = "arithmetic";
defparam \a2|tcnt1[7] .output_mode = "reg_only";
defparam \a2|tcnt1[7] .register_cascade_mode = "off";
defparam \a2|tcnt1[7] .sum_lutc_input = "cin";
defparam \a2|tcnt1[7] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[8] (
// Equation(s):
// \a2|tcnt1 [8] = DFFEAS(\a2|tcnt1 [8] $ ((((\a2|tcnt1[7]~21 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[8]~23  = CARRY(((!\a2|tcnt1[7]~21 )) # (!\a2|tcnt1 [8]))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[7]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [8]),
	.cout(\a2|tcnt1[8]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[8] .cin_used = "true";
defparam \a2|tcnt1[8] .lut_mask = "5a5f";
defparam \a2|tcnt1[8] .operation_mode = "arithmetic";
defparam \a2|tcnt1[8] .output_mode = "reg_only";
defparam \a2|tcnt1[8] .register_cascade_mode = "off";
defparam \a2|tcnt1[8] .sum_lutc_input = "cin";
defparam \a2|tcnt1[8] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[9] (
// Equation(s):
// \a2|tcnt1 [9] = DFFEAS(\a2|tcnt1 [9] $ ((((!\a2|tcnt1[8]~23 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[9]~25  = CARRY((\a2|tcnt1 [9] & ((!\a2|tcnt1[8]~23 ))))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[8]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [9]),
	.cout(\a2|tcnt1[9]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[9] .cin_used = "true";
defparam \a2|tcnt1[9] .lut_mask = "a50a";
defparam \a2|tcnt1[9] .operation_mode = "arithmetic";
defparam \a2|tcnt1[9] .output_mode = "reg_only";
defparam \a2|tcnt1[9] .register_cascade_mode = "off";
defparam \a2|tcnt1[9] .sum_lutc_input = "cin";
defparam \a2|tcnt1[9] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[10] (
// Equation(s):
// \a2|tcnt1 [10] = DFFEAS(\a2|tcnt1 [10] $ ((((\a2|tcnt1[9]~25 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[10]~27  = CARRY(((!\a2|tcnt1[9]~25 )) # (!\a2|tcnt1 [10]))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[9]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [10]),
	.cout(\a2|tcnt1[10]~27 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[10] .cin_used = "true";
defparam \a2|tcnt1[10] .lut_mask = "5a5f";
defparam \a2|tcnt1[10] .operation_mode = "arithmetic";
defparam \a2|tcnt1[10] .output_mode = "reg_only";
defparam \a2|tcnt1[10] .register_cascade_mode = "off";
defparam \a2|tcnt1[10] .sum_lutc_input = "cin";
defparam \a2|tcnt1[10] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[11] (
// Equation(s):
// \a2|tcnt1 [11] = DFFEAS(\a2|tcnt1 [11] $ ((((!\a2|tcnt1[10]~27 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[11]~29  = CARRY((\a2|tcnt1 [11] & ((!\a2|tcnt1[10]~27 ))))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[10]~27 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [11]),
	.cout(\a2|tcnt1[11]~29 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[11] .cin_used = "true";
defparam \a2|tcnt1[11] .lut_mask = "a50a";
defparam \a2|tcnt1[11] .operation_mode = "arithmetic";
defparam \a2|tcnt1[11] .output_mode = "reg_only";
defparam \a2|tcnt1[11] .register_cascade_mode = "off";
defparam \a2|tcnt1[11] .sum_lutc_input = "cin";
defparam \a2|tcnt1[11] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[12] (
// Equation(s):
// \a2|tcnt1 [12] = DFFEAS(\a2|tcnt1 [12] $ ((((\a2|tcnt1[11]~29 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[12]~31  = CARRY(((!\a2|tcnt1[11]~29 )) # (!\a2|tcnt1 [12]))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[11]~29 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [12]),
	.cout(\a2|tcnt1[12]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[12] .cin_used = "true";
defparam \a2|tcnt1[12] .lut_mask = "5a5f";
defparam \a2|tcnt1[12] .operation_mode = "arithmetic";
defparam \a2|tcnt1[12] .output_mode = "reg_only";
defparam \a2|tcnt1[12] .register_cascade_mode = "off";
defparam \a2|tcnt1[12] .sum_lutc_input = "cin";
defparam \a2|tcnt1[12] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[13] (
// Equation(s):
// \a2|tcnt1 [13] = DFFEAS(\a2|tcnt1 [13] $ ((((!\a2|tcnt1[12]~31 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[13]~33  = CARRY((\a2|tcnt1 [13] & ((!\a2|tcnt1[12]~31 ))))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[12]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [13]),
	.cout(\a2|tcnt1[13]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[13] .cin_used = "true";
defparam \a2|tcnt1[13] .lut_mask = "a50a";
defparam \a2|tcnt1[13] .operation_mode = "arithmetic";
defparam \a2|tcnt1[13] .output_mode = "reg_only";
defparam \a2|tcnt1[13] .register_cascade_mode = "off";
defparam \a2|tcnt1[13] .sum_lutc_input = "cin";
defparam \a2|tcnt1[13] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[14] (
// Equation(s):
// \a2|tcnt1 [14] = DFFEAS(\a2|tcnt1 [14] $ ((((\a2|tcnt1[13]~33 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[14]~35  = CARRY(((!\a2|tcnt1[13]~33 )) # (!\a2|tcnt1 [14]))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[13]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [14]),
	.cout(\a2|tcnt1[14]~35 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[14] .cin_used = "true";
defparam \a2|tcnt1[14] .lut_mask = "5a5f";
defparam \a2|tcnt1[14] .operation_mode = "arithmetic";
defparam \a2|tcnt1[14] .output_mode = "reg_only";
defparam \a2|tcnt1[14] .register_cascade_mode = "off";
defparam \a2|tcnt1[14] .sum_lutc_input = "cin";
defparam \a2|tcnt1[14] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[15] (
// Equation(s):
// \a2|tcnt1 [15] = DFFEAS(\a2|tcnt1 [15] $ ((((!\a2|tcnt1[14]~35 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[15]~37  = CARRY((\a2|tcnt1 [15] & ((!\a2|tcnt1[14]~35 ))))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[14]~35 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [15]),
	.cout(\a2|tcnt1[15]~37 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[15] .cin_used = "true";
defparam \a2|tcnt1[15] .lut_mask = "a50a";
defparam \a2|tcnt1[15] .operation_mode = "arithmetic";
defparam \a2|tcnt1[15] .output_mode = "reg_only";
defparam \a2|tcnt1[15] .register_cascade_mode = "off";
defparam \a2|tcnt1[15] .sum_lutc_input = "cin";
defparam \a2|tcnt1[15] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[16] (
// Equation(s):
// \a2|tcnt1 [16] = DFFEAS(\a2|tcnt1 [16] $ ((((\a2|tcnt1[15]~37 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[16]~1  = CARRY(((!\a2|tcnt1[15]~37 )) # (!\a2|tcnt1 [16]))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[15]~37 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [16]),
	.cout(\a2|tcnt1[16]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[16] .cin_used = "true";
defparam \a2|tcnt1[16] .lut_mask = "5a5f";
defparam \a2|tcnt1[16] .operation_mode = "arithmetic";
defparam \a2|tcnt1[16] .output_mode = "reg_only";
defparam \a2|tcnt1[16] .register_cascade_mode = "off";
defparam \a2|tcnt1[16] .sum_lutc_input = "cin";
defparam \a2|tcnt1[16] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[17] (
// Equation(s):
// \a2|tcnt1 [17] = DFFEAS(\a2|tcnt1 [17] $ ((((!\a2|tcnt1[16]~1 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[17]~3  = CARRY((\a2|tcnt1 [17] & ((!\a2|tcnt1[16]~1 ))))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [17]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[16]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [17]),
	.cout(\a2|tcnt1[17]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[17] .cin_used = "true";
defparam \a2|tcnt1[17] .lut_mask = "a50a";
defparam \a2|tcnt1[17] .operation_mode = "arithmetic";
defparam \a2|tcnt1[17] .output_mode = "reg_only";
defparam \a2|tcnt1[17] .register_cascade_mode = "off";
defparam \a2|tcnt1[17] .sum_lutc_input = "cin";
defparam \a2|tcnt1[17] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[18] (
// Equation(s):
// \a2|tcnt1 [18] = DFFEAS(\a2|tcnt1 [18] $ ((((\a2|tcnt1[17]~3 )))), \clk~combout , \change_map~combout , , , , , , )
// \a2|tcnt1[18]~5  = CARRY(((!\a2|tcnt1[17]~3 )) # (!\a2|tcnt1 [18]))

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[17]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [18]),
	.cout(\a2|tcnt1[18]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[18] .cin_used = "true";
defparam \a2|tcnt1[18] .lut_mask = "5a5f";
defparam \a2|tcnt1[18] .operation_mode = "arithmetic";
defparam \a2|tcnt1[18] .output_mode = "reg_only";
defparam \a2|tcnt1[18] .register_cascade_mode = "off";
defparam \a2|tcnt1[18] .sum_lutc_input = "cin";
defparam \a2|tcnt1[18] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|tcnt1[19] (
// Equation(s):
// \a2|tcnt1 [19] = DFFEAS(\a2|tcnt1 [19] $ ((((!\a2|tcnt1[18]~5 )))), \clk~combout , \change_map~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\a2|tcnt1 [19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\a2|tcnt1[18]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|tcnt1 [19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|tcnt1[19] .cin_used = "true";
defparam \a2|tcnt1[19] .lut_mask = "a5a5";
defparam \a2|tcnt1[19] .operation_mode = "normal";
defparam \a2|tcnt1[19] .output_mode = "reg_only";
defparam \a2|tcnt1[19] .register_cascade_mode = "off";
defparam \a2|tcnt1[19] .sum_lutc_input = "cin";
defparam \a2|tcnt1[19] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|Equal0~0 (
// Equation(s):
// \a2|Equal0~0_combout  = (!\a2|tcnt1 [16] & (!\a2|tcnt1 [17] & (!\a2|tcnt1 [18] & !\a2|tcnt1 [19])))

	.clk(gnd),
	.dataa(\a2|tcnt1 [16]),
	.datab(\a2|tcnt1 [17]),
	.datac(\a2|tcnt1 [18]),
	.datad(\a2|tcnt1 [19]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a2|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|Equal0~0 .lut_mask = "0001";
defparam \a2|Equal0~0 .operation_mode = "normal";
defparam \a2|Equal0~0 .output_mode = "comb_only";
defparam \a2|Equal0~0 .register_cascade_mode = "off";
defparam \a2|Equal0~0 .sum_lutc_input = "datac";
defparam \a2|Equal0~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|Equal0~1 (
// Equation(s):
// \a2|Equal0~1_combout  = (\a2|tcnt1 [0] & (!\a2|tcnt1 [1] & (!\a2|tcnt1 [2] & !\a2|tcnt1 [3])))

	.clk(gnd),
	.dataa(\a2|tcnt1 [0]),
	.datab(\a2|tcnt1 [1]),
	.datac(\a2|tcnt1 [2]),
	.datad(\a2|tcnt1 [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a2|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|Equal0~1 .lut_mask = "0002";
defparam \a2|Equal0~1 .operation_mode = "normal";
defparam \a2|Equal0~1 .output_mode = "comb_only";
defparam \a2|Equal0~1 .register_cascade_mode = "off";
defparam \a2|Equal0~1 .sum_lutc_input = "datac";
defparam \a2|Equal0~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|Equal0~2 (
// Equation(s):
// \a2|Equal0~2_combout  = (!\a2|tcnt1 [4] & (!\a2|tcnt1 [5] & (!\a2|tcnt1 [6] & !\a2|tcnt1 [7])))

	.clk(gnd),
	.dataa(\a2|tcnt1 [4]),
	.datab(\a2|tcnt1 [5]),
	.datac(\a2|tcnt1 [6]),
	.datad(\a2|tcnt1 [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a2|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|Equal0~2 .lut_mask = "0001";
defparam \a2|Equal0~2 .operation_mode = "normal";
defparam \a2|Equal0~2 .output_mode = "comb_only";
defparam \a2|Equal0~2 .register_cascade_mode = "off";
defparam \a2|Equal0~2 .sum_lutc_input = "datac";
defparam \a2|Equal0~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|Equal0~3 (
// Equation(s):
// \a2|Equal0~3_combout  = (!\a2|tcnt1 [8] & (!\a2|tcnt1 [9] & (!\a2|tcnt1 [10] & !\a2|tcnt1 [11])))

	.clk(gnd),
	.dataa(\a2|tcnt1 [8]),
	.datab(\a2|tcnt1 [9]),
	.datac(\a2|tcnt1 [10]),
	.datad(\a2|tcnt1 [11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a2|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|Equal0~3 .lut_mask = "0001";
defparam \a2|Equal0~3 .operation_mode = "normal";
defparam \a2|Equal0~3 .output_mode = "comb_only";
defparam \a2|Equal0~3 .register_cascade_mode = "off";
defparam \a2|Equal0~3 .sum_lutc_input = "datac";
defparam \a2|Equal0~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|Equal0~4 (
// Equation(s):
// \a2|Equal0~4_combout  = (!\a2|tcnt1 [12] & (!\a2|tcnt1 [13] & (!\a2|tcnt1 [14] & !\a2|tcnt1 [15])))

	.clk(gnd),
	.dataa(\a2|tcnt1 [12]),
	.datab(\a2|tcnt1 [13]),
	.datac(\a2|tcnt1 [14]),
	.datad(\a2|tcnt1 [15]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a2|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|Equal0~4 .lut_mask = "0001";
defparam \a2|Equal0~4 .operation_mode = "normal";
defparam \a2|Equal0~4 .output_mode = "comb_only";
defparam \a2|Equal0~4 .register_cascade_mode = "off";
defparam \a2|Equal0~4 .sum_lutc_input = "datac";
defparam \a2|Equal0~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|Equal0~5 (
// Equation(s):
// \a2|Equal0~5_combout  = (\a2|Equal0~1_combout  & (\a2|Equal0~2_combout  & (\a2|Equal0~3_combout  & \a2|Equal0~4_combout )))

	.clk(gnd),
	.dataa(\a2|Equal0~1_combout ),
	.datab(\a2|Equal0~2_combout ),
	.datac(\a2|Equal0~3_combout ),
	.datad(\a2|Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\a2|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|Equal0~5 .lut_mask = "8000";
defparam \a2|Equal0~5 .operation_mode = "normal";
defparam \a2|Equal0~5 .output_mode = "comb_only";
defparam \a2|Equal0~5 .register_cascade_mode = "off";
defparam \a2|Equal0~5 .sum_lutc_input = "datac";
defparam \a2|Equal0~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \a2|key_out (
// Equation(s):
// \a2|key_out~regout  = DFFEAS((\a2|key_out~regout ) # ((\a2|Equal0~0_combout  & (\a2|Equal0~5_combout ))), \clk~combout , \change_map~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\a2|key_out~regout ),
	.datab(\a2|Equal0~0_combout ),
	.datac(\a2|Equal0~5_combout ),
	.datad(vcc),
	.aclr(!\change_map~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\a2|key_out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \a2|key_out .lut_mask = "eaea";
defparam \a2|key_out .operation_mode = "normal";
defparam \a2|key_out .output_mode = "reg_only";
defparam \a2|key_out .register_cascade_mode = "off";
defparam \a2|key_out .sum_lutc_input = "datac";
defparam \a2|key_out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \terminal_point_col[0] (
// Equation(s):
// terminal_point_col[0] = DFFEAS((\a2|key_out~regout ), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\a2|key_out~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(terminal_point_col[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \terminal_point_col[0] .lut_mask = "aaaa";
defparam \terminal_point_col[0] .operation_mode = "normal";
defparam \terminal_point_col[0] .output_mode = "reg_only";
defparam \terminal_point_col[0] .register_cascade_mode = "off";
defparam \terminal_point_col[0] .sum_lutc_input = "datac";
defparam \terminal_point_col[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (((!\location_col_num~0_combout ) # (!\location_col_num~1_combout )) # (!terminal_point_col[0])) # (!\location_col_num[0]~COMBOUT )

	.clk(gnd),
	.dataa(\location_col_num[0]~COMBOUT ),
	.datab(terminal_point_col[0]),
	.datac(\location_col_num~1_combout ),
	.datad(\location_col_num~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = "7fff";
defparam \Mux0~0 .operation_mode = "normal";
defparam \Mux0~0 .output_mode = "comb_only";
defparam \Mux0~0 .register_cascade_mode = "off";
defparam \Mux0~0 .sum_lutc_input = "datac";
defparam \Mux0~0 .synch_mode = "off";
// synopsys translate_on

maxii_io \direction1~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\direction1~combout ),
	.padio(direction1));
// synopsys translate_off
defparam \direction1~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \c1|tcnt1[0] (
// Equation(s):
// \c1|tcnt1 [0] = DFFEAS((!\c1|tcnt1 [0]), \clk~combout , \direction1~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[0] .lut_mask = "5555";
defparam \c1|tcnt1[0] .operation_mode = "normal";
defparam \c1|tcnt1[0] .output_mode = "reg_only";
defparam \c1|tcnt1[0] .register_cascade_mode = "off";
defparam \c1|tcnt1[0] .sum_lutc_input = "datac";
defparam \c1|tcnt1[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[1] (
// Equation(s):
// \c1|tcnt1 [1] = DFFEAS(\c1|tcnt1 [0] $ ((\c1|tcnt1 [1])), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[1]~9  = CARRY((\c1|tcnt1 [0] & (\c1|tcnt1 [1])))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [0]),
	.datab(\c1|tcnt1 [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [1]),
	.cout(\c1|tcnt1[1]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[1] .lut_mask = "6688";
defparam \c1|tcnt1[1] .operation_mode = "arithmetic";
defparam \c1|tcnt1[1] .output_mode = "reg_only";
defparam \c1|tcnt1[1] .register_cascade_mode = "off";
defparam \c1|tcnt1[1] .sum_lutc_input = "cin";
defparam \c1|tcnt1[1] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[2] (
// Equation(s):
// \c1|tcnt1 [2] = DFFEAS(\c1|tcnt1 [2] $ ((((\c1|tcnt1[1]~9 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[2]~11  = CARRY(((!\c1|tcnt1[1]~9 )) # (!\c1|tcnt1 [2]))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[1]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [2]),
	.cout(\c1|tcnt1[2]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[2] .cin_used = "true";
defparam \c1|tcnt1[2] .lut_mask = "5a5f";
defparam \c1|tcnt1[2] .operation_mode = "arithmetic";
defparam \c1|tcnt1[2] .output_mode = "reg_only";
defparam \c1|tcnt1[2] .register_cascade_mode = "off";
defparam \c1|tcnt1[2] .sum_lutc_input = "cin";
defparam \c1|tcnt1[2] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[3] (
// Equation(s):
// \c1|tcnt1 [3] = DFFEAS(\c1|tcnt1 [3] $ ((((!\c1|tcnt1[2]~11 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[3]~13  = CARRY((\c1|tcnt1 [3] & ((!\c1|tcnt1[2]~11 ))))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[2]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [3]),
	.cout(\c1|tcnt1[3]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[3] .cin_used = "true";
defparam \c1|tcnt1[3] .lut_mask = "a50a";
defparam \c1|tcnt1[3] .operation_mode = "arithmetic";
defparam \c1|tcnt1[3] .output_mode = "reg_only";
defparam \c1|tcnt1[3] .register_cascade_mode = "off";
defparam \c1|tcnt1[3] .sum_lutc_input = "cin";
defparam \c1|tcnt1[3] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[4] (
// Equation(s):
// \c1|tcnt1 [4] = DFFEAS(\c1|tcnt1 [4] $ ((((\c1|tcnt1[3]~13 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[4]~15  = CARRY(((!\c1|tcnt1[3]~13 )) # (!\c1|tcnt1 [4]))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[3]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [4]),
	.cout(\c1|tcnt1[4]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[4] .cin_used = "true";
defparam \c1|tcnt1[4] .lut_mask = "5a5f";
defparam \c1|tcnt1[4] .operation_mode = "arithmetic";
defparam \c1|tcnt1[4] .output_mode = "reg_only";
defparam \c1|tcnt1[4] .register_cascade_mode = "off";
defparam \c1|tcnt1[4] .sum_lutc_input = "cin";
defparam \c1|tcnt1[4] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[5] (
// Equation(s):
// \c1|tcnt1 [5] = DFFEAS(\c1|tcnt1 [5] $ ((((!\c1|tcnt1[4]~15 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[5]~17  = CARRY((\c1|tcnt1 [5] & ((!\c1|tcnt1[4]~15 ))))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[4]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [5]),
	.cout(\c1|tcnt1[5]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[5] .cin_used = "true";
defparam \c1|tcnt1[5] .lut_mask = "a50a";
defparam \c1|tcnt1[5] .operation_mode = "arithmetic";
defparam \c1|tcnt1[5] .output_mode = "reg_only";
defparam \c1|tcnt1[5] .register_cascade_mode = "off";
defparam \c1|tcnt1[5] .sum_lutc_input = "cin";
defparam \c1|tcnt1[5] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[6] (
// Equation(s):
// \c1|tcnt1 [6] = DFFEAS(\c1|tcnt1 [6] $ ((((\c1|tcnt1[5]~17 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[6]~19  = CARRY(((!\c1|tcnt1[5]~17 )) # (!\c1|tcnt1 [6]))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[5]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [6]),
	.cout(\c1|tcnt1[6]~19 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[6] .cin_used = "true";
defparam \c1|tcnt1[6] .lut_mask = "5a5f";
defparam \c1|tcnt1[6] .operation_mode = "arithmetic";
defparam \c1|tcnt1[6] .output_mode = "reg_only";
defparam \c1|tcnt1[6] .register_cascade_mode = "off";
defparam \c1|tcnt1[6] .sum_lutc_input = "cin";
defparam \c1|tcnt1[6] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[7] (
// Equation(s):
// \c1|tcnt1 [7] = DFFEAS(\c1|tcnt1 [7] $ ((((!\c1|tcnt1[6]~19 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[7]~21  = CARRY((\c1|tcnt1 [7] & ((!\c1|tcnt1[6]~19 ))))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[6]~19 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [7]),
	.cout(\c1|tcnt1[7]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[7] .cin_used = "true";
defparam \c1|tcnt1[7] .lut_mask = "a50a";
defparam \c1|tcnt1[7] .operation_mode = "arithmetic";
defparam \c1|tcnt1[7] .output_mode = "reg_only";
defparam \c1|tcnt1[7] .register_cascade_mode = "off";
defparam \c1|tcnt1[7] .sum_lutc_input = "cin";
defparam \c1|tcnt1[7] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[8] (
// Equation(s):
// \c1|tcnt1 [8] = DFFEAS(\c1|tcnt1 [8] $ ((((\c1|tcnt1[7]~21 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[8]~23  = CARRY(((!\c1|tcnt1[7]~21 )) # (!\c1|tcnt1 [8]))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[7]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [8]),
	.cout(\c1|tcnt1[8]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[8] .cin_used = "true";
defparam \c1|tcnt1[8] .lut_mask = "5a5f";
defparam \c1|tcnt1[8] .operation_mode = "arithmetic";
defparam \c1|tcnt1[8] .output_mode = "reg_only";
defparam \c1|tcnt1[8] .register_cascade_mode = "off";
defparam \c1|tcnt1[8] .sum_lutc_input = "cin";
defparam \c1|tcnt1[8] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[9] (
// Equation(s):
// \c1|tcnt1 [9] = DFFEAS(\c1|tcnt1 [9] $ ((((!\c1|tcnt1[8]~23 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[9]~25  = CARRY((\c1|tcnt1 [9] & ((!\c1|tcnt1[8]~23 ))))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[8]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [9]),
	.cout(\c1|tcnt1[9]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[9] .cin_used = "true";
defparam \c1|tcnt1[9] .lut_mask = "a50a";
defparam \c1|tcnt1[9] .operation_mode = "arithmetic";
defparam \c1|tcnt1[9] .output_mode = "reg_only";
defparam \c1|tcnt1[9] .register_cascade_mode = "off";
defparam \c1|tcnt1[9] .sum_lutc_input = "cin";
defparam \c1|tcnt1[9] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[10] (
// Equation(s):
// \c1|tcnt1 [10] = DFFEAS(\c1|tcnt1 [10] $ ((((\c1|tcnt1[9]~25 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[10]~27  = CARRY(((!\c1|tcnt1[9]~25 )) # (!\c1|tcnt1 [10]))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[9]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [10]),
	.cout(\c1|tcnt1[10]~27 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[10] .cin_used = "true";
defparam \c1|tcnt1[10] .lut_mask = "5a5f";
defparam \c1|tcnt1[10] .operation_mode = "arithmetic";
defparam \c1|tcnt1[10] .output_mode = "reg_only";
defparam \c1|tcnt1[10] .register_cascade_mode = "off";
defparam \c1|tcnt1[10] .sum_lutc_input = "cin";
defparam \c1|tcnt1[10] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[11] (
// Equation(s):
// \c1|tcnt1 [11] = DFFEAS(\c1|tcnt1 [11] $ ((((!\c1|tcnt1[10]~27 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[11]~29  = CARRY((\c1|tcnt1 [11] & ((!\c1|tcnt1[10]~27 ))))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[10]~27 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [11]),
	.cout(\c1|tcnt1[11]~29 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[11] .cin_used = "true";
defparam \c1|tcnt1[11] .lut_mask = "a50a";
defparam \c1|tcnt1[11] .operation_mode = "arithmetic";
defparam \c1|tcnt1[11] .output_mode = "reg_only";
defparam \c1|tcnt1[11] .register_cascade_mode = "off";
defparam \c1|tcnt1[11] .sum_lutc_input = "cin";
defparam \c1|tcnt1[11] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[12] (
// Equation(s):
// \c1|tcnt1 [12] = DFFEAS(\c1|tcnt1 [12] $ ((((\c1|tcnt1[11]~29 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[12]~31  = CARRY(((!\c1|tcnt1[11]~29 )) # (!\c1|tcnt1 [12]))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[11]~29 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [12]),
	.cout(\c1|tcnt1[12]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[12] .cin_used = "true";
defparam \c1|tcnt1[12] .lut_mask = "5a5f";
defparam \c1|tcnt1[12] .operation_mode = "arithmetic";
defparam \c1|tcnt1[12] .output_mode = "reg_only";
defparam \c1|tcnt1[12] .register_cascade_mode = "off";
defparam \c1|tcnt1[12] .sum_lutc_input = "cin";
defparam \c1|tcnt1[12] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[13] (
// Equation(s):
// \c1|tcnt1 [13] = DFFEAS(\c1|tcnt1 [13] $ ((((!\c1|tcnt1[12]~31 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[13]~33  = CARRY((\c1|tcnt1 [13] & ((!\c1|tcnt1[12]~31 ))))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[12]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [13]),
	.cout(\c1|tcnt1[13]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[13] .cin_used = "true";
defparam \c1|tcnt1[13] .lut_mask = "a50a";
defparam \c1|tcnt1[13] .operation_mode = "arithmetic";
defparam \c1|tcnt1[13] .output_mode = "reg_only";
defparam \c1|tcnt1[13] .register_cascade_mode = "off";
defparam \c1|tcnt1[13] .sum_lutc_input = "cin";
defparam \c1|tcnt1[13] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[14] (
// Equation(s):
// \c1|tcnt1 [14] = DFFEAS(\c1|tcnt1 [14] $ ((((\c1|tcnt1[13]~33 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[14]~35  = CARRY(((!\c1|tcnt1[13]~33 )) # (!\c1|tcnt1 [14]))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[13]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [14]),
	.cout(\c1|tcnt1[14]~35 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[14] .cin_used = "true";
defparam \c1|tcnt1[14] .lut_mask = "5a5f";
defparam \c1|tcnt1[14] .operation_mode = "arithmetic";
defparam \c1|tcnt1[14] .output_mode = "reg_only";
defparam \c1|tcnt1[14] .register_cascade_mode = "off";
defparam \c1|tcnt1[14] .sum_lutc_input = "cin";
defparam \c1|tcnt1[14] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[15] (
// Equation(s):
// \c1|tcnt1 [15] = DFFEAS(\c1|tcnt1 [15] $ ((((!\c1|tcnt1[14]~35 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[15]~37  = CARRY((\c1|tcnt1 [15] & ((!\c1|tcnt1[14]~35 ))))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[14]~35 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [15]),
	.cout(\c1|tcnt1[15]~37 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[15] .cin_used = "true";
defparam \c1|tcnt1[15] .lut_mask = "a50a";
defparam \c1|tcnt1[15] .operation_mode = "arithmetic";
defparam \c1|tcnt1[15] .output_mode = "reg_only";
defparam \c1|tcnt1[15] .register_cascade_mode = "off";
defparam \c1|tcnt1[15] .sum_lutc_input = "cin";
defparam \c1|tcnt1[15] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[16] (
// Equation(s):
// \c1|tcnt1 [16] = DFFEAS(\c1|tcnt1 [16] $ ((((\c1|tcnt1[15]~37 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[16]~1  = CARRY(((!\c1|tcnt1[15]~37 )) # (!\c1|tcnt1 [16]))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[15]~37 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [16]),
	.cout(\c1|tcnt1[16]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[16] .cin_used = "true";
defparam \c1|tcnt1[16] .lut_mask = "5a5f";
defparam \c1|tcnt1[16] .operation_mode = "arithmetic";
defparam \c1|tcnt1[16] .output_mode = "reg_only";
defparam \c1|tcnt1[16] .register_cascade_mode = "off";
defparam \c1|tcnt1[16] .sum_lutc_input = "cin";
defparam \c1|tcnt1[16] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[17] (
// Equation(s):
// \c1|tcnt1 [17] = DFFEAS(\c1|tcnt1 [17] $ ((((!\c1|tcnt1[16]~1 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[17]~3  = CARRY((\c1|tcnt1 [17] & ((!\c1|tcnt1[16]~1 ))))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [17]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[16]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [17]),
	.cout(\c1|tcnt1[17]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[17] .cin_used = "true";
defparam \c1|tcnt1[17] .lut_mask = "a50a";
defparam \c1|tcnt1[17] .operation_mode = "arithmetic";
defparam \c1|tcnt1[17] .output_mode = "reg_only";
defparam \c1|tcnt1[17] .register_cascade_mode = "off";
defparam \c1|tcnt1[17] .sum_lutc_input = "cin";
defparam \c1|tcnt1[17] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[18] (
// Equation(s):
// \c1|tcnt1 [18] = DFFEAS(\c1|tcnt1 [18] $ ((((\c1|tcnt1[17]~3 )))), \clk~combout , \direction1~combout , , , , , , )
// \c1|tcnt1[18]~5  = CARRY(((!\c1|tcnt1[17]~3 )) # (!\c1|tcnt1 [18]))

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[17]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [18]),
	.cout(\c1|tcnt1[18]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[18] .cin_used = "true";
defparam \c1|tcnt1[18] .lut_mask = "5a5f";
defparam \c1|tcnt1[18] .operation_mode = "arithmetic";
defparam \c1|tcnt1[18] .output_mode = "reg_only";
defparam \c1|tcnt1[18] .register_cascade_mode = "off";
defparam \c1|tcnt1[18] .sum_lutc_input = "cin";
defparam \c1|tcnt1[18] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|tcnt1[19] (
// Equation(s):
// \c1|tcnt1 [19] = DFFEAS(\c1|tcnt1 [19] $ ((((!\c1|tcnt1[18]~5 )))), \clk~combout , \direction1~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c1|tcnt1 [19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c1|tcnt1[18]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|tcnt1 [19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|tcnt1[19] .cin_used = "true";
defparam \c1|tcnt1[19] .lut_mask = "a5a5";
defparam \c1|tcnt1[19] .operation_mode = "normal";
defparam \c1|tcnt1[19] .output_mode = "reg_only";
defparam \c1|tcnt1[19] .register_cascade_mode = "off";
defparam \c1|tcnt1[19] .sum_lutc_input = "cin";
defparam \c1|tcnt1[19] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|Equal0~0 (
// Equation(s):
// \c1|Equal0~0_combout  = (!\c1|tcnt1 [16] & (!\c1|tcnt1 [17] & (!\c1|tcnt1 [18] & !\c1|tcnt1 [19])))

	.clk(gnd),
	.dataa(\c1|tcnt1 [16]),
	.datab(\c1|tcnt1 [17]),
	.datac(\c1|tcnt1 [18]),
	.datad(\c1|tcnt1 [19]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c1|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|Equal0~0 .lut_mask = "0001";
defparam \c1|Equal0~0 .operation_mode = "normal";
defparam \c1|Equal0~0 .output_mode = "comb_only";
defparam \c1|Equal0~0 .register_cascade_mode = "off";
defparam \c1|Equal0~0 .sum_lutc_input = "datac";
defparam \c1|Equal0~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|Equal0~1 (
// Equation(s):
// \c1|Equal0~1_combout  = (\c1|tcnt1 [0] & (!\c1|tcnt1 [1] & (!\c1|tcnt1 [2] & !\c1|tcnt1 [3])))

	.clk(gnd),
	.dataa(\c1|tcnt1 [0]),
	.datab(\c1|tcnt1 [1]),
	.datac(\c1|tcnt1 [2]),
	.datad(\c1|tcnt1 [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c1|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|Equal0~1 .lut_mask = "0002";
defparam \c1|Equal0~1 .operation_mode = "normal";
defparam \c1|Equal0~1 .output_mode = "comb_only";
defparam \c1|Equal0~1 .register_cascade_mode = "off";
defparam \c1|Equal0~1 .sum_lutc_input = "datac";
defparam \c1|Equal0~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|Equal0~2 (
// Equation(s):
// \c1|Equal0~2_combout  = (!\c1|tcnt1 [4] & (!\c1|tcnt1 [5] & (!\c1|tcnt1 [6] & !\c1|tcnt1 [7])))

	.clk(gnd),
	.dataa(\c1|tcnt1 [4]),
	.datab(\c1|tcnt1 [5]),
	.datac(\c1|tcnt1 [6]),
	.datad(\c1|tcnt1 [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c1|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|Equal0~2 .lut_mask = "0001";
defparam \c1|Equal0~2 .operation_mode = "normal";
defparam \c1|Equal0~2 .output_mode = "comb_only";
defparam \c1|Equal0~2 .register_cascade_mode = "off";
defparam \c1|Equal0~2 .sum_lutc_input = "datac";
defparam \c1|Equal0~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|Equal0~3 (
// Equation(s):
// \c1|Equal0~3_combout  = (!\c1|tcnt1 [8] & (!\c1|tcnt1 [9] & (!\c1|tcnt1 [10] & !\c1|tcnt1 [11])))

	.clk(gnd),
	.dataa(\c1|tcnt1 [8]),
	.datab(\c1|tcnt1 [9]),
	.datac(\c1|tcnt1 [10]),
	.datad(\c1|tcnt1 [11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c1|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|Equal0~3 .lut_mask = "0001";
defparam \c1|Equal0~3 .operation_mode = "normal";
defparam \c1|Equal0~3 .output_mode = "comb_only";
defparam \c1|Equal0~3 .register_cascade_mode = "off";
defparam \c1|Equal0~3 .sum_lutc_input = "datac";
defparam \c1|Equal0~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|Equal0~4 (
// Equation(s):
// \c1|Equal0~4_combout  = (!\c1|tcnt1 [12] & (!\c1|tcnt1 [13] & (!\c1|tcnt1 [14] & !\c1|tcnt1 [15])))

	.clk(gnd),
	.dataa(\c1|tcnt1 [12]),
	.datab(\c1|tcnt1 [13]),
	.datac(\c1|tcnt1 [14]),
	.datad(\c1|tcnt1 [15]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c1|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|Equal0~4 .lut_mask = "0001";
defparam \c1|Equal0~4 .operation_mode = "normal";
defparam \c1|Equal0~4 .output_mode = "comb_only";
defparam \c1|Equal0~4 .register_cascade_mode = "off";
defparam \c1|Equal0~4 .sum_lutc_input = "datac";
defparam \c1|Equal0~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|Equal0~5 (
// Equation(s):
// \c1|Equal0~5_combout  = (\c1|Equal0~1_combout  & (\c1|Equal0~2_combout  & (\c1|Equal0~3_combout  & \c1|Equal0~4_combout )))

	.clk(gnd),
	.dataa(\c1|Equal0~1_combout ),
	.datab(\c1|Equal0~2_combout ),
	.datac(\c1|Equal0~3_combout ),
	.datad(\c1|Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c1|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|Equal0~5 .lut_mask = "8000";
defparam \c1|Equal0~5 .operation_mode = "normal";
defparam \c1|Equal0~5 .output_mode = "comb_only";
defparam \c1|Equal0~5 .register_cascade_mode = "off";
defparam \c1|Equal0~5 .sum_lutc_input = "datac";
defparam \c1|Equal0~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c1|key_out (
// Equation(s):
// \c1|key_out~regout  = DFFEAS((\c1|key_out~regout ) # ((\c1|Equal0~0_combout  & (\c1|Equal0~5_combout ))), \clk~combout , \direction1~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c1|key_out~regout ),
	.datab(\c1|Equal0~0_combout ),
	.datac(\c1|Equal0~5_combout ),
	.datad(vcc),
	.aclr(!\direction1~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c1|key_out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c1|key_out .lut_mask = "eaea";
defparam \c1|key_out .operation_mode = "normal";
defparam \c1|key_out .output_mode = "reg_only";
defparam \c1|key_out .register_cascade_mode = "off";
defparam \c1|key_out .sum_lutc_input = "datac";
defparam \c1|key_out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (!\location_col_num[0]~COMBOUT  & ((\location_col_num~1_combout  & (terminal_point_col[0] & \location_col_num~0_combout )) # (!\location_col_num~1_combout  & ((!\location_col_num~0_combout )))))

	.clk(gnd),
	.dataa(terminal_point_col[0]),
	.datab(\location_col_num~1_combout ),
	.datac(\location_col_num~0_combout ),
	.datad(\location_col_num[0]~COMBOUT ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux1~0 .lut_mask = "0083";
defparam \Mux1~0 .operation_mode = "normal";
defparam \Mux1~0 .output_mode = "comb_only";
defparam \Mux1~0 .register_cascade_mode = "off";
defparam \Mux1~0 .sum_lutc_input = "datac";
defparam \Mux1~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num~7 (
// Equation(s):
// \location_row_num~7_combout  = \location_row_num~4_combout  $ (((!\step_cnt~15_combout  & (\location_row_num[0]~COMBOUT  & \c1|key_out~regout ))))

	.clk(gnd),
	.dataa(\location_row_num~4_combout ),
	.datab(\step_cnt~15_combout ),
	.datac(\location_row_num[0]~COMBOUT ),
	.datad(\c1|key_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_row_num~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num~7 .lut_mask = "9aaa";
defparam \location_row_num~7 .operation_mode = "normal";
defparam \location_row_num~7 .output_mode = "comb_only";
defparam \location_row_num~7 .register_cascade_mode = "off";
defparam \location_row_num~7 .sum_lutc_input = "datac";
defparam \location_row_num~7 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num~6 (
// Equation(s):
// \location_row_num~6_combout  = (\location_row_num[0]~COMBOUT  $ (((\step_cnt~15_combout ) # (!\c1|key_out~regout ))))

	.clk(gnd),
	.dataa(\c1|key_out~regout ),
	.datab(vcc),
	.datac(\step_cnt~15_combout ),
	.datad(\location_row_num[0]~COMBOUT ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_row_num~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num~6 .lut_mask = "0af5";
defparam \location_row_num~6 .operation_mode = "normal";
defparam \location_row_num~6 .output_mode = "comb_only";
defparam \location_row_num~6 .register_cascade_mode = "off";
defparam \location_row_num~6 .sum_lutc_input = "datac";
defparam \location_row_num~6 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num[1] (
// Equation(s):
// location_row_num[1] = DFFEAS((\always3~2_combout  & (\location_row_num~7_combout  $ (((!\step_cnt~17_combout  & \location_row_num~6_combout ))))), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\always3~2_combout ),
	.datab(\location_row_num~7_combout ),
	.datac(\step_cnt~17_combout ),
	.datad(\location_row_num~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(location_row_num[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num[1] .lut_mask = "8288";
defparam \location_row_num[1] .operation_mode = "normal";
defparam \location_row_num[1] .output_mode = "reg_only";
defparam \location_row_num[1] .register_cascade_mode = "off";
defparam \location_row_num[1] .sum_lutc_input = "datac";
defparam \location_row_num[1] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num~4 (
// Equation(s):
// \location_row_num~4_combout  = ((\a1|key_out~regout  & ((!terminal_point_col[0]))) # (!\a1|key_out~regout  & (location_row_num[1])))

	.clk(gnd),
	.dataa(location_row_num[1]),
	.datab(vcc),
	.datac(\a1|key_out~regout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_row_num~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num~4 .lut_mask = "0afa";
defparam \location_row_num~4 .operation_mode = "normal";
defparam \location_row_num~4 .output_mode = "comb_only";
defparam \location_row_num~4 .register_cascade_mode = "off";
defparam \location_row_num~4 .sum_lutc_input = "datac";
defparam \location_row_num~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add2~0 (
// Equation(s):
// \Add2~0_combout  = \location_row_num~4_combout  $ (((!\location_row_num[0]~COMBOUT  & ((\step_cnt~15_combout ) # (!\c1|key_out~regout )))))

	.clk(gnd),
	.dataa(\location_row_num~4_combout ),
	.datab(\location_row_num[0]~COMBOUT ),
	.datac(\c1|key_out~regout ),
	.datad(\step_cnt~15_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add2~0 .lut_mask = "99a9";
defparam \Add2~0 .operation_mode = "normal";
defparam \Add2~0 .output_mode = "comb_only";
defparam \Add2~0 .register_cascade_mode = "off";
defparam \Add2~0 .sum_lutc_input = "datac";
defparam \Add2~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = (\location_col_num[0]~COMBOUT  & (((!terminal_point_col[0] & \location_col_num~0_combout )))) # (!\location_col_num[0]~COMBOUT  & (((terminal_point_col[0])) # (!\location_col_num~1_combout )))

	.clk(gnd),
	.dataa(\location_col_num~1_combout ),
	.datab(\location_col_num[0]~COMBOUT ),
	.datac(terminal_point_col[0]),
	.datad(\location_col_num~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux3~0 .lut_mask = "3d31";
defparam \Mux3~0 .operation_mode = "normal";
defparam \Mux3~0 .output_mode = "comb_only";
defparam \Mux3~0 .register_cascade_mode = "off";
defparam \Mux3~0 .sum_lutc_input = "datac";
defparam \Mux3~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = ((\location_col_num~1_combout  & ((!terminal_point_col[0]))) # (!\location_col_num~1_combout  & (\location_col_num~0_combout ))) # (!\location_col_num[0]~COMBOUT )

	.clk(gnd),
	.dataa(\location_col_num~0_combout ),
	.datab(\location_col_num~1_combout ),
	.datac(terminal_point_col[0]),
	.datad(\location_col_num[0]~COMBOUT ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux2~0 .lut_mask = "2eff";
defparam \Mux2~0 .operation_mode = "normal";
defparam \Mux2~0 .output_mode = "comb_only";
defparam \Mux2~0 .register_cascade_mode = "off";
defparam \Mux2~0 .sum_lutc_input = "datac";
defparam \Mux2~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux9~0 (
// Equation(s):
// \Mux9~0_combout  = (\location_row_num~7_combout  & (((\location_row_num~6_combout  & \Mux2~0_combout )))) # (!\location_row_num~7_combout  & ((\Mux3~0_combout ) # ((\location_row_num~6_combout ))))

	.clk(gnd),
	.dataa(\location_row_num~7_combout ),
	.datab(\Mux3~0_combout ),
	.datac(\location_row_num~6_combout ),
	.datad(\Mux2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux9~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux9~0 .lut_mask = "f454";
defparam \Mux9~0 .operation_mode = "normal";
defparam \Mux9~0 .output_mode = "comb_only";
defparam \Mux9~0 .register_cascade_mode = "off";
defparam \Mux9~0 .sum_lutc_input = "datac";
defparam \Mux9~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux9~1 (
// Equation(s):
// \Mux9~1_combout  = (\Add2~0_combout  & ((\Mux9~0_combout  & ((\Mux0~0_combout ))) # (!\Mux9~0_combout  & (\Mux1~0_combout )))) # (!\Add2~0_combout  & (((\Mux9~0_combout ))))

	.clk(gnd),
	.dataa(\Mux1~0_combout ),
	.datab(\Add2~0_combout ),
	.datac(\Mux9~0_combout ),
	.datad(\Mux0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux9~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux9~1 .lut_mask = "f838";
defparam \Mux9~1 .operation_mode = "normal";
defparam \Mux9~1 .output_mode = "comb_only";
defparam \Mux9~1 .register_cascade_mode = "off";
defparam \Mux9~1 .sum_lutc_input = "datac";
defparam \Mux9~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt~16 (
// Equation(s):
// \step_cnt~16_combout  = (\location_row_num~8_combout  & (\Mux9~1_combout  & ((\location_row_num~7_combout ) # (!\location_row_num~6_combout )))) # (!\location_row_num~8_combout  & (((!\location_row_num~7_combout  & \location_row_num~6_combout ))))

	.clk(gnd),
	.dataa(\Mux9~1_combout ),
	.datab(\location_row_num~8_combout ),
	.datac(\location_row_num~7_combout ),
	.datad(\location_row_num~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt~16 .lut_mask = "8388";
defparam \step_cnt~16 .operation_mode = "normal";
defparam \step_cnt~16 .output_mode = "comb_only";
defparam \step_cnt~16 .register_cascade_mode = "off";
defparam \step_cnt~16 .sum_lutc_input = "datac";
defparam \step_cnt~16 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add2~1 (
// Equation(s):
// \Add2~1_combout  = (\location_row_num~8_combout  $ (((\location_row_num~7_combout ) # (!\location_row_num~6_combout ))))

	.clk(gnd),
	.dataa(\location_row_num~6_combout ),
	.datab(vcc),
	.datac(\location_row_num~7_combout ),
	.datad(\location_row_num~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add2~1 .lut_mask = "0af5";
defparam \Add2~1 .operation_mode = "normal";
defparam \Add2~1 .output_mode = "comb_only";
defparam \Add2~1 .register_cascade_mode = "off";
defparam \Add2~1 .sum_lutc_input = "datac";
defparam \Add2~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux5~0 (
// Equation(s):
// \Mux5~0_combout  = (\location_col_num~1_combout  & ((\location_col_num~0_combout  & ((\location_col_num[0]~COMBOUT ) # (terminal_point_col[0]))) # (!\location_col_num~0_combout  & ((!terminal_point_col[0]))))) # (!\location_col_num~1_combout  & 
// (((!terminal_point_col[0]) # (!\location_col_num[0]~COMBOUT ))))

	.clk(gnd),
	.dataa(\location_col_num~0_combout ),
	.datab(\location_col_num~1_combout ),
	.datac(\location_col_num[0]~COMBOUT ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux5~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux5~0 .lut_mask = "8bf7";
defparam \Mux5~0 .operation_mode = "normal";
defparam \Mux5~0 .output_mode = "comb_only";
defparam \Mux5~0 .register_cascade_mode = "off";
defparam \Mux5~0 .sum_lutc_input = "datac";
defparam \Mux5~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux7~0 (
// Equation(s):
// \Mux7~0_combout  = (terminal_point_col[0]) # ((\location_col_num~1_combout ) # ((\location_col_num[0]~COMBOUT  & \location_col_num~0_combout )))

	.clk(gnd),
	.dataa(terminal_point_col[0]),
	.datab(\location_col_num~1_combout ),
	.datac(\location_col_num[0]~COMBOUT ),
	.datad(\location_col_num~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux7~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux7~0 .lut_mask = "feee";
defparam \Mux7~0 .operation_mode = "normal";
defparam \Mux7~0 .output_mode = "comb_only";
defparam \Mux7~0 .register_cascade_mode = "off";
defparam \Mux7~0 .sum_lutc_input = "datac";
defparam \Mux7~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux6~0 (
// Equation(s):
// \Mux6~0_combout  = (\location_col_num~1_combout  & ((\location_col_num~0_combout  & (\location_col_num[0]~COMBOUT  & !terminal_point_col[0])) # (!\location_col_num~0_combout  & (!\location_col_num[0]~COMBOUT  & terminal_point_col[0])))) # 
// (!\location_col_num~1_combout  & (\location_col_num~0_combout  $ (((!terminal_point_col[0])))))

	.clk(gnd),
	.dataa(\location_col_num~0_combout ),
	.datab(\location_col_num[0]~COMBOUT ),
	.datac(terminal_point_col[0]),
	.datad(\location_col_num~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux6~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux6~0 .lut_mask = "18a5";
defparam \Mux6~0 .operation_mode = "normal";
defparam \Mux6~0 .output_mode = "comb_only";
defparam \Mux6~0 .register_cascade_mode = "off";
defparam \Mux6~0 .sum_lutc_input = "datac";
defparam \Mux6~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux9~2 (
// Equation(s):
// \Mux9~2_combout  = (\location_row_num~7_combout  & (((\location_row_num~6_combout  & \Mux6~0_combout )))) # (!\location_row_num~7_combout  & ((\Mux7~0_combout ) # ((\location_row_num~6_combout ))))

	.clk(gnd),
	.dataa(\location_row_num~7_combout ),
	.datab(\Mux7~0_combout ),
	.datac(\location_row_num~6_combout ),
	.datad(\Mux6~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux9~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux9~2 .lut_mask = "f454";
defparam \Mux9~2 .operation_mode = "normal";
defparam \Mux9~2 .output_mode = "comb_only";
defparam \Mux9~2 .register_cascade_mode = "off";
defparam \Mux9~2 .sum_lutc_input = "datac";
defparam \Mux9~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux4~0 (
// Equation(s):
// \Mux4~0_combout  = (\location_col_num~1_combout  & ((terminal_point_col[0] $ (\location_col_num[0]~COMBOUT )))) # (!\location_col_num~1_combout  & (!\location_col_num[0]~COMBOUT  & ((terminal_point_col[0]) # (!\location_col_num~0_combout ))))

	.clk(gnd),
	.dataa(\location_col_num~1_combout ),
	.datab(\location_col_num~0_combout ),
	.datac(terminal_point_col[0]),
	.datad(\location_col_num[0]~COMBOUT ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux4~0 .lut_mask = "0af1";
defparam \Mux4~0 .operation_mode = "normal";
defparam \Mux4~0 .output_mode = "comb_only";
defparam \Mux4~0 .register_cascade_mode = "off";
defparam \Mux4~0 .sum_lutc_input = "datac";
defparam \Mux4~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux9~3 (
// Equation(s):
// \Mux9~3_combout  = (\Add2~0_combout  & ((\Mux9~2_combout  & ((\Mux4~0_combout ))) # (!\Mux9~2_combout  & (\Mux5~0_combout )))) # (!\Add2~0_combout  & (((\Mux9~2_combout ))))

	.clk(gnd),
	.dataa(\Mux5~0_combout ),
	.datab(\Add2~0_combout ),
	.datac(\Mux9~2_combout ),
	.datad(\Mux4~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux9~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux9~3 .lut_mask = "f838";
defparam \Mux9~3 .operation_mode = "normal";
defparam \Mux9~3 .output_mode = "comb_only";
defparam \Mux9~3 .register_cascade_mode = "off";
defparam \Mux9~3 .sum_lutc_input = "datac";
defparam \Mux9~3 .synch_mode = "off";
// synopsys translate_on

maxii_io \direction2~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\direction2~combout ),
	.padio(direction2));
// synopsys translate_off
defparam \direction2~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \c2|tcnt1[0] (
// Equation(s):
// \c2|tcnt1 [0] = DFFEAS((!\c2|tcnt1 [0]), \clk~combout , \direction2~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[0] .lut_mask = "5555";
defparam \c2|tcnt1[0] .operation_mode = "normal";
defparam \c2|tcnt1[0] .output_mode = "reg_only";
defparam \c2|tcnt1[0] .register_cascade_mode = "off";
defparam \c2|tcnt1[0] .sum_lutc_input = "datac";
defparam \c2|tcnt1[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[1] (
// Equation(s):
// \c2|tcnt1 [1] = DFFEAS(\c2|tcnt1 [0] $ ((\c2|tcnt1 [1])), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[1]~9  = CARRY((\c2|tcnt1 [0] & (\c2|tcnt1 [1])))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [0]),
	.datab(\c2|tcnt1 [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [1]),
	.cout(\c2|tcnt1[1]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[1] .lut_mask = "6688";
defparam \c2|tcnt1[1] .operation_mode = "arithmetic";
defparam \c2|tcnt1[1] .output_mode = "reg_only";
defparam \c2|tcnt1[1] .register_cascade_mode = "off";
defparam \c2|tcnt1[1] .sum_lutc_input = "cin";
defparam \c2|tcnt1[1] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[2] (
// Equation(s):
// \c2|tcnt1 [2] = DFFEAS(\c2|tcnt1 [2] $ ((((\c2|tcnt1[1]~9 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[2]~11  = CARRY(((!\c2|tcnt1[1]~9 )) # (!\c2|tcnt1 [2]))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[1]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [2]),
	.cout(\c2|tcnt1[2]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[2] .cin_used = "true";
defparam \c2|tcnt1[2] .lut_mask = "5a5f";
defparam \c2|tcnt1[2] .operation_mode = "arithmetic";
defparam \c2|tcnt1[2] .output_mode = "reg_only";
defparam \c2|tcnt1[2] .register_cascade_mode = "off";
defparam \c2|tcnt1[2] .sum_lutc_input = "cin";
defparam \c2|tcnt1[2] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[3] (
// Equation(s):
// \c2|tcnt1 [3] = DFFEAS(\c2|tcnt1 [3] $ ((((!\c2|tcnt1[2]~11 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[3]~13  = CARRY((\c2|tcnt1 [3] & ((!\c2|tcnt1[2]~11 ))))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[2]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [3]),
	.cout(\c2|tcnt1[3]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[3] .cin_used = "true";
defparam \c2|tcnt1[3] .lut_mask = "a50a";
defparam \c2|tcnt1[3] .operation_mode = "arithmetic";
defparam \c2|tcnt1[3] .output_mode = "reg_only";
defparam \c2|tcnt1[3] .register_cascade_mode = "off";
defparam \c2|tcnt1[3] .sum_lutc_input = "cin";
defparam \c2|tcnt1[3] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[4] (
// Equation(s):
// \c2|tcnt1 [4] = DFFEAS(\c2|tcnt1 [4] $ ((((\c2|tcnt1[3]~13 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[4]~15  = CARRY(((!\c2|tcnt1[3]~13 )) # (!\c2|tcnt1 [4]))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[3]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [4]),
	.cout(\c2|tcnt1[4]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[4] .cin_used = "true";
defparam \c2|tcnt1[4] .lut_mask = "5a5f";
defparam \c2|tcnt1[4] .operation_mode = "arithmetic";
defparam \c2|tcnt1[4] .output_mode = "reg_only";
defparam \c2|tcnt1[4] .register_cascade_mode = "off";
defparam \c2|tcnt1[4] .sum_lutc_input = "cin";
defparam \c2|tcnt1[4] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[5] (
// Equation(s):
// \c2|tcnt1 [5] = DFFEAS(\c2|tcnt1 [5] $ ((((!\c2|tcnt1[4]~15 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[5]~17  = CARRY((\c2|tcnt1 [5] & ((!\c2|tcnt1[4]~15 ))))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[4]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [5]),
	.cout(\c2|tcnt1[5]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[5] .cin_used = "true";
defparam \c2|tcnt1[5] .lut_mask = "a50a";
defparam \c2|tcnt1[5] .operation_mode = "arithmetic";
defparam \c2|tcnt1[5] .output_mode = "reg_only";
defparam \c2|tcnt1[5] .register_cascade_mode = "off";
defparam \c2|tcnt1[5] .sum_lutc_input = "cin";
defparam \c2|tcnt1[5] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[6] (
// Equation(s):
// \c2|tcnt1 [6] = DFFEAS(\c2|tcnt1 [6] $ ((((\c2|tcnt1[5]~17 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[6]~19  = CARRY(((!\c2|tcnt1[5]~17 )) # (!\c2|tcnt1 [6]))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[5]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [6]),
	.cout(\c2|tcnt1[6]~19 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[6] .cin_used = "true";
defparam \c2|tcnt1[6] .lut_mask = "5a5f";
defparam \c2|tcnt1[6] .operation_mode = "arithmetic";
defparam \c2|tcnt1[6] .output_mode = "reg_only";
defparam \c2|tcnt1[6] .register_cascade_mode = "off";
defparam \c2|tcnt1[6] .sum_lutc_input = "cin";
defparam \c2|tcnt1[6] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[7] (
// Equation(s):
// \c2|tcnt1 [7] = DFFEAS(\c2|tcnt1 [7] $ ((((!\c2|tcnt1[6]~19 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[7]~21  = CARRY((\c2|tcnt1 [7] & ((!\c2|tcnt1[6]~19 ))))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[6]~19 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [7]),
	.cout(\c2|tcnt1[7]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[7] .cin_used = "true";
defparam \c2|tcnt1[7] .lut_mask = "a50a";
defparam \c2|tcnt1[7] .operation_mode = "arithmetic";
defparam \c2|tcnt1[7] .output_mode = "reg_only";
defparam \c2|tcnt1[7] .register_cascade_mode = "off";
defparam \c2|tcnt1[7] .sum_lutc_input = "cin";
defparam \c2|tcnt1[7] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[8] (
// Equation(s):
// \c2|tcnt1 [8] = DFFEAS(\c2|tcnt1 [8] $ ((((\c2|tcnt1[7]~21 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[8]~23  = CARRY(((!\c2|tcnt1[7]~21 )) # (!\c2|tcnt1 [8]))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[7]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [8]),
	.cout(\c2|tcnt1[8]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[8] .cin_used = "true";
defparam \c2|tcnt1[8] .lut_mask = "5a5f";
defparam \c2|tcnt1[8] .operation_mode = "arithmetic";
defparam \c2|tcnt1[8] .output_mode = "reg_only";
defparam \c2|tcnt1[8] .register_cascade_mode = "off";
defparam \c2|tcnt1[8] .sum_lutc_input = "cin";
defparam \c2|tcnt1[8] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[9] (
// Equation(s):
// \c2|tcnt1 [9] = DFFEAS(\c2|tcnt1 [9] $ ((((!\c2|tcnt1[8]~23 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[9]~25  = CARRY((\c2|tcnt1 [9] & ((!\c2|tcnt1[8]~23 ))))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[8]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [9]),
	.cout(\c2|tcnt1[9]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[9] .cin_used = "true";
defparam \c2|tcnt1[9] .lut_mask = "a50a";
defparam \c2|tcnt1[9] .operation_mode = "arithmetic";
defparam \c2|tcnt1[9] .output_mode = "reg_only";
defparam \c2|tcnt1[9] .register_cascade_mode = "off";
defparam \c2|tcnt1[9] .sum_lutc_input = "cin";
defparam \c2|tcnt1[9] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[10] (
// Equation(s):
// \c2|tcnt1 [10] = DFFEAS(\c2|tcnt1 [10] $ ((((\c2|tcnt1[9]~25 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[10]~27  = CARRY(((!\c2|tcnt1[9]~25 )) # (!\c2|tcnt1 [10]))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[9]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [10]),
	.cout(\c2|tcnt1[10]~27 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[10] .cin_used = "true";
defparam \c2|tcnt1[10] .lut_mask = "5a5f";
defparam \c2|tcnt1[10] .operation_mode = "arithmetic";
defparam \c2|tcnt1[10] .output_mode = "reg_only";
defparam \c2|tcnt1[10] .register_cascade_mode = "off";
defparam \c2|tcnt1[10] .sum_lutc_input = "cin";
defparam \c2|tcnt1[10] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[11] (
// Equation(s):
// \c2|tcnt1 [11] = DFFEAS(\c2|tcnt1 [11] $ ((((!\c2|tcnt1[10]~27 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[11]~29  = CARRY((\c2|tcnt1 [11] & ((!\c2|tcnt1[10]~27 ))))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[10]~27 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [11]),
	.cout(\c2|tcnt1[11]~29 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[11] .cin_used = "true";
defparam \c2|tcnt1[11] .lut_mask = "a50a";
defparam \c2|tcnt1[11] .operation_mode = "arithmetic";
defparam \c2|tcnt1[11] .output_mode = "reg_only";
defparam \c2|tcnt1[11] .register_cascade_mode = "off";
defparam \c2|tcnt1[11] .sum_lutc_input = "cin";
defparam \c2|tcnt1[11] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[12] (
// Equation(s):
// \c2|tcnt1 [12] = DFFEAS(\c2|tcnt1 [12] $ ((((\c2|tcnt1[11]~29 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[12]~31  = CARRY(((!\c2|tcnt1[11]~29 )) # (!\c2|tcnt1 [12]))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[11]~29 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [12]),
	.cout(\c2|tcnt1[12]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[12] .cin_used = "true";
defparam \c2|tcnt1[12] .lut_mask = "5a5f";
defparam \c2|tcnt1[12] .operation_mode = "arithmetic";
defparam \c2|tcnt1[12] .output_mode = "reg_only";
defparam \c2|tcnt1[12] .register_cascade_mode = "off";
defparam \c2|tcnt1[12] .sum_lutc_input = "cin";
defparam \c2|tcnt1[12] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[13] (
// Equation(s):
// \c2|tcnt1 [13] = DFFEAS(\c2|tcnt1 [13] $ ((((!\c2|tcnt1[12]~31 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[13]~33  = CARRY((\c2|tcnt1 [13] & ((!\c2|tcnt1[12]~31 ))))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[12]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [13]),
	.cout(\c2|tcnt1[13]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[13] .cin_used = "true";
defparam \c2|tcnt1[13] .lut_mask = "a50a";
defparam \c2|tcnt1[13] .operation_mode = "arithmetic";
defparam \c2|tcnt1[13] .output_mode = "reg_only";
defparam \c2|tcnt1[13] .register_cascade_mode = "off";
defparam \c2|tcnt1[13] .sum_lutc_input = "cin";
defparam \c2|tcnt1[13] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[14] (
// Equation(s):
// \c2|tcnt1 [14] = DFFEAS(\c2|tcnt1 [14] $ ((((\c2|tcnt1[13]~33 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[14]~35  = CARRY(((!\c2|tcnt1[13]~33 )) # (!\c2|tcnt1 [14]))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[13]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [14]),
	.cout(\c2|tcnt1[14]~35 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[14] .cin_used = "true";
defparam \c2|tcnt1[14] .lut_mask = "5a5f";
defparam \c2|tcnt1[14] .operation_mode = "arithmetic";
defparam \c2|tcnt1[14] .output_mode = "reg_only";
defparam \c2|tcnt1[14] .register_cascade_mode = "off";
defparam \c2|tcnt1[14] .sum_lutc_input = "cin";
defparam \c2|tcnt1[14] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[15] (
// Equation(s):
// \c2|tcnt1 [15] = DFFEAS(\c2|tcnt1 [15] $ ((((!\c2|tcnt1[14]~35 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[15]~37  = CARRY((\c2|tcnt1 [15] & ((!\c2|tcnt1[14]~35 ))))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[14]~35 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [15]),
	.cout(\c2|tcnt1[15]~37 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[15] .cin_used = "true";
defparam \c2|tcnt1[15] .lut_mask = "a50a";
defparam \c2|tcnt1[15] .operation_mode = "arithmetic";
defparam \c2|tcnt1[15] .output_mode = "reg_only";
defparam \c2|tcnt1[15] .register_cascade_mode = "off";
defparam \c2|tcnt1[15] .sum_lutc_input = "cin";
defparam \c2|tcnt1[15] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[16] (
// Equation(s):
// \c2|tcnt1 [16] = DFFEAS(\c2|tcnt1 [16] $ ((((\c2|tcnt1[15]~37 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[16]~1  = CARRY(((!\c2|tcnt1[15]~37 )) # (!\c2|tcnt1 [16]))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[15]~37 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [16]),
	.cout(\c2|tcnt1[16]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[16] .cin_used = "true";
defparam \c2|tcnt1[16] .lut_mask = "5a5f";
defparam \c2|tcnt1[16] .operation_mode = "arithmetic";
defparam \c2|tcnt1[16] .output_mode = "reg_only";
defparam \c2|tcnt1[16] .register_cascade_mode = "off";
defparam \c2|tcnt1[16] .sum_lutc_input = "cin";
defparam \c2|tcnt1[16] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[17] (
// Equation(s):
// \c2|tcnt1 [17] = DFFEAS(\c2|tcnt1 [17] $ ((((!\c2|tcnt1[16]~1 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[17]~3  = CARRY((\c2|tcnt1 [17] & ((!\c2|tcnt1[16]~1 ))))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [17]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[16]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [17]),
	.cout(\c2|tcnt1[17]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[17] .cin_used = "true";
defparam \c2|tcnt1[17] .lut_mask = "a50a";
defparam \c2|tcnt1[17] .operation_mode = "arithmetic";
defparam \c2|tcnt1[17] .output_mode = "reg_only";
defparam \c2|tcnt1[17] .register_cascade_mode = "off";
defparam \c2|tcnt1[17] .sum_lutc_input = "cin";
defparam \c2|tcnt1[17] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[18] (
// Equation(s):
// \c2|tcnt1 [18] = DFFEAS(\c2|tcnt1 [18] $ ((((\c2|tcnt1[17]~3 )))), \clk~combout , \direction2~combout , , , , , , )
// \c2|tcnt1[18]~5  = CARRY(((!\c2|tcnt1[17]~3 )) # (!\c2|tcnt1 [18]))

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[17]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [18]),
	.cout(\c2|tcnt1[18]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[18] .cin_used = "true";
defparam \c2|tcnt1[18] .lut_mask = "5a5f";
defparam \c2|tcnt1[18] .operation_mode = "arithmetic";
defparam \c2|tcnt1[18] .output_mode = "reg_only";
defparam \c2|tcnt1[18] .register_cascade_mode = "off";
defparam \c2|tcnt1[18] .sum_lutc_input = "cin";
defparam \c2|tcnt1[18] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|tcnt1[19] (
// Equation(s):
// \c2|tcnt1 [19] = DFFEAS(\c2|tcnt1 [19] $ ((((!\c2|tcnt1[18]~5 )))), \clk~combout , \direction2~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c2|tcnt1 [19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c2|tcnt1[18]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|tcnt1 [19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|tcnt1[19] .cin_used = "true";
defparam \c2|tcnt1[19] .lut_mask = "a5a5";
defparam \c2|tcnt1[19] .operation_mode = "normal";
defparam \c2|tcnt1[19] .output_mode = "reg_only";
defparam \c2|tcnt1[19] .register_cascade_mode = "off";
defparam \c2|tcnt1[19] .sum_lutc_input = "cin";
defparam \c2|tcnt1[19] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|Equal0~0 (
// Equation(s):
// \c2|Equal0~0_combout  = (!\c2|tcnt1 [16] & (!\c2|tcnt1 [17] & (!\c2|tcnt1 [18] & !\c2|tcnt1 [19])))

	.clk(gnd),
	.dataa(\c2|tcnt1 [16]),
	.datab(\c2|tcnt1 [17]),
	.datac(\c2|tcnt1 [18]),
	.datad(\c2|tcnt1 [19]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c2|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|Equal0~0 .lut_mask = "0001";
defparam \c2|Equal0~0 .operation_mode = "normal";
defparam \c2|Equal0~0 .output_mode = "comb_only";
defparam \c2|Equal0~0 .register_cascade_mode = "off";
defparam \c2|Equal0~0 .sum_lutc_input = "datac";
defparam \c2|Equal0~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|Equal0~1 (
// Equation(s):
// \c2|Equal0~1_combout  = (\c2|tcnt1 [0] & (!\c2|tcnt1 [1] & (!\c2|tcnt1 [2] & !\c2|tcnt1 [3])))

	.clk(gnd),
	.dataa(\c2|tcnt1 [0]),
	.datab(\c2|tcnt1 [1]),
	.datac(\c2|tcnt1 [2]),
	.datad(\c2|tcnt1 [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c2|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|Equal0~1 .lut_mask = "0002";
defparam \c2|Equal0~1 .operation_mode = "normal";
defparam \c2|Equal0~1 .output_mode = "comb_only";
defparam \c2|Equal0~1 .register_cascade_mode = "off";
defparam \c2|Equal0~1 .sum_lutc_input = "datac";
defparam \c2|Equal0~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|Equal0~2 (
// Equation(s):
// \c2|Equal0~2_combout  = (!\c2|tcnt1 [4] & (!\c2|tcnt1 [5] & (!\c2|tcnt1 [6] & !\c2|tcnt1 [7])))

	.clk(gnd),
	.dataa(\c2|tcnt1 [4]),
	.datab(\c2|tcnt1 [5]),
	.datac(\c2|tcnt1 [6]),
	.datad(\c2|tcnt1 [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c2|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|Equal0~2 .lut_mask = "0001";
defparam \c2|Equal0~2 .operation_mode = "normal";
defparam \c2|Equal0~2 .output_mode = "comb_only";
defparam \c2|Equal0~2 .register_cascade_mode = "off";
defparam \c2|Equal0~2 .sum_lutc_input = "datac";
defparam \c2|Equal0~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|Equal0~3 (
// Equation(s):
// \c2|Equal0~3_combout  = (!\c2|tcnt1 [8] & (!\c2|tcnt1 [9] & (!\c2|tcnt1 [10] & !\c2|tcnt1 [11])))

	.clk(gnd),
	.dataa(\c2|tcnt1 [8]),
	.datab(\c2|tcnt1 [9]),
	.datac(\c2|tcnt1 [10]),
	.datad(\c2|tcnt1 [11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c2|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|Equal0~3 .lut_mask = "0001";
defparam \c2|Equal0~3 .operation_mode = "normal";
defparam \c2|Equal0~3 .output_mode = "comb_only";
defparam \c2|Equal0~3 .register_cascade_mode = "off";
defparam \c2|Equal0~3 .sum_lutc_input = "datac";
defparam \c2|Equal0~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|Equal0~4 (
// Equation(s):
// \c2|Equal0~4_combout  = (!\c2|tcnt1 [12] & (!\c2|tcnt1 [13] & (!\c2|tcnt1 [14] & !\c2|tcnt1 [15])))

	.clk(gnd),
	.dataa(\c2|tcnt1 [12]),
	.datab(\c2|tcnt1 [13]),
	.datac(\c2|tcnt1 [14]),
	.datad(\c2|tcnt1 [15]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c2|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|Equal0~4 .lut_mask = "0001";
defparam \c2|Equal0~4 .operation_mode = "normal";
defparam \c2|Equal0~4 .output_mode = "comb_only";
defparam \c2|Equal0~4 .register_cascade_mode = "off";
defparam \c2|Equal0~4 .sum_lutc_input = "datac";
defparam \c2|Equal0~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|Equal0~5 (
// Equation(s):
// \c2|Equal0~5_combout  = (\c2|Equal0~1_combout  & (\c2|Equal0~2_combout  & (\c2|Equal0~3_combout  & \c2|Equal0~4_combout )))

	.clk(gnd),
	.dataa(\c2|Equal0~1_combout ),
	.datab(\c2|Equal0~2_combout ),
	.datac(\c2|Equal0~3_combout ),
	.datad(\c2|Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c2|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|Equal0~5 .lut_mask = "8000";
defparam \c2|Equal0~5 .operation_mode = "normal";
defparam \c2|Equal0~5 .output_mode = "comb_only";
defparam \c2|Equal0~5 .register_cascade_mode = "off";
defparam \c2|Equal0~5 .sum_lutc_input = "datac";
defparam \c2|Equal0~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c2|key_out (
// Equation(s):
// \c2|key_out~regout  = DFFEAS((\c2|key_out~regout ) # ((\c2|Equal0~0_combout  & (\c2|Equal0~5_combout ))), \clk~combout , \direction2~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c2|key_out~regout ),
	.datab(\c2|Equal0~0_combout ),
	.datac(\c2|Equal0~5_combout ),
	.datad(vcc),
	.aclr(!\direction2~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c2|key_out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c2|key_out .lut_mask = "eaea";
defparam \c2|key_out .operation_mode = "normal";
defparam \c2|key_out .output_mode = "reg_only";
defparam \c2|key_out .register_cascade_mode = "off";
defparam \c2|key_out .sum_lutc_input = "datac";
defparam \c2|key_out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt~17 (
// Equation(s):
// \step_cnt~17_combout  = (\step_cnt~16_combout ) # (((\Add2~1_combout  & \Mux9~3_combout )) # (!\c2|key_out~regout ))

	.clk(gnd),
	.dataa(\step_cnt~16_combout ),
	.datab(\Add2~1_combout ),
	.datac(\Mux9~3_combout ),
	.datad(\c2|key_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt~17 .lut_mask = "eaff";
defparam \step_cnt~17 .operation_mode = "normal";
defparam \step_cnt~17 .output_mode = "comb_only";
defparam \step_cnt~17 .register_cascade_mode = "off";
defparam \step_cnt~17 .sum_lutc_input = "datac";
defparam \step_cnt~17 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num~12 (
// Equation(s):
// \location_row_num~12_combout  = \location_row_num[0]~COMBOUT  $ (\step_cnt~17_combout  $ (((\step_cnt~15_combout ) # (!\c1|key_out~regout ))))

	.clk(gnd),
	.dataa(\c1|key_out~regout ),
	.datab(\step_cnt~15_combout ),
	.datac(\location_row_num[0]~COMBOUT ),
	.datad(\step_cnt~17_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_row_num~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num~12 .lut_mask = "d22d";
defparam \location_row_num~12 .operation_mode = "normal";
defparam \location_row_num~12 .output_mode = "comb_only";
defparam \location_row_num~12 .register_cascade_mode = "off";
defparam \location_row_num~12 .sum_lutc_input = "datac";
defparam \location_row_num~12 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num[0] (
// Equation(s):
// \location_row_num[0]~COMBOUT  = ((\a1|key_out~regout  & ((terminal_point_col[0]))) # (!\a1|key_out~regout  & (location_row_num[0])))
// location_row_num[0] = DFFEAS(\location_row_num[0]~COMBOUT , \clk~combout , VCC, , , \location_row_num~12_combout , , , \always3~2_combout )

	.clk(\clk~combout ),
	.dataa(location_row_num[0]),
	.datab(terminal_point_col[0]),
	.datac(\location_row_num~12_combout ),
	.datad(\a1|key_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\always3~2_combout ),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_row_num[0]~COMBOUT ),
	.regout(location_row_num[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num[0] .lut_mask = "ccaa";
defparam \location_row_num[0] .operation_mode = "normal";
defparam \location_row_num[0] .output_mode = "reg_and_comb";
defparam \location_row_num[0] .register_cascade_mode = "off";
defparam \location_row_num[0] .sum_lutc_input = "datac";
defparam \location_row_num[0] .synch_mode = "on";
// synopsys translate_on

maxii_lcell \Add0~0 (
// Equation(s):
// \Add0~0_combout  = \location_row_num[0]~COMBOUT  $ (((\a1|key_out~regout  & (!terminal_point_col[0])) # (!\a1|key_out~regout  & ((location_row_num[1])))))

	.clk(gnd),
	.dataa(terminal_point_col[0]),
	.datab(\a1|key_out~regout ),
	.datac(\location_row_num[0]~COMBOUT ),
	.datad(location_row_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~0 .lut_mask = "87b4";
defparam \Add0~0 .operation_mode = "normal";
defparam \Add0~0 .output_mode = "comb_only";
defparam \Add0~0 .register_cascade_mode = "off";
defparam \Add0~0 .sum_lutc_input = "datac";
defparam \Add0~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux8~0 (
// Equation(s):
// \Mux8~0_combout  = (\location_row_num~4_combout  & (((\location_row_num[0]~COMBOUT  & \Mux3~0_combout )))) # (!\location_row_num~4_combout  & ((\Mux2~0_combout ) # ((\location_row_num[0]~COMBOUT ))))

	.clk(gnd),
	.dataa(\location_row_num~4_combout ),
	.datab(\Mux2~0_combout ),
	.datac(\location_row_num[0]~COMBOUT ),
	.datad(\Mux3~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux8~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux8~0 .lut_mask = "f454";
defparam \Mux8~0 .operation_mode = "normal";
defparam \Mux8~0 .output_mode = "comb_only";
defparam \Mux8~0 .register_cascade_mode = "off";
defparam \Mux8~0 .sum_lutc_input = "datac";
defparam \Mux8~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux8~1 (
// Equation(s):
// \Mux8~1_combout  = (\Add0~0_combout  & ((\Mux8~0_combout  & ((\Mux1~0_combout ))) # (!\Mux8~0_combout  & (\Mux0~0_combout )))) # (!\Add0~0_combout  & (((\Mux8~0_combout ))))

	.clk(gnd),
	.dataa(\Mux0~0_combout ),
	.datab(\Add0~0_combout ),
	.datac(\Mux8~0_combout ),
	.datad(\Mux1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux8~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux8~1 .lut_mask = "f838";
defparam \Mux8~1 .operation_mode = "normal";
defparam \Mux8~1 .output_mode = "comb_only";
defparam \Mux8~1 .register_cascade_mode = "off";
defparam \Mux8~1 .sum_lutc_input = "datac";
defparam \Mux8~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add0~1 (
// Equation(s):
// \Add0~1_combout  = (\location_row_num[0]~COMBOUT  & ((\a1|key_out~regout  & ((!terminal_point_col[0]))) # (!\a1|key_out~regout  & (location_row_num[1]))))

	.clk(gnd),
	.dataa(\location_row_num[0]~COMBOUT ),
	.datab(location_row_num[1]),
	.datac(\a1|key_out~regout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~1 .lut_mask = "08a8";
defparam \Add0~1 .operation_mode = "normal";
defparam \Add0~1 .output_mode = "comb_only";
defparam \Add0~1 .register_cascade_mode = "off";
defparam \Add0~1 .sum_lutc_input = "datac";
defparam \Add0~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux8~2 (
// Equation(s):
// \Mux8~2_combout  = (\location_row_num~4_combout  & (((\location_row_num[0]~COMBOUT  & \Mux7~0_combout )))) # (!\location_row_num~4_combout  & ((\Mux6~0_combout ) # ((\location_row_num[0]~COMBOUT ))))

	.clk(gnd),
	.dataa(\location_row_num~4_combout ),
	.datab(\Mux6~0_combout ),
	.datac(\location_row_num[0]~COMBOUT ),
	.datad(\Mux7~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux8~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux8~2 .lut_mask = "f454";
defparam \Mux8~2 .operation_mode = "normal";
defparam \Mux8~2 .output_mode = "comb_only";
defparam \Mux8~2 .register_cascade_mode = "off";
defparam \Mux8~2 .sum_lutc_input = "datac";
defparam \Mux8~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux8~3 (
// Equation(s):
// \Mux8~3_combout  = (\Add0~0_combout  & ((\Mux8~2_combout  & ((\Mux5~0_combout ))) # (!\Mux8~2_combout  & (\Mux4~0_combout )))) # (!\Add0~0_combout  & (((\Mux8~2_combout ))))

	.clk(gnd),
	.dataa(\Mux4~0_combout ),
	.datab(\Add0~0_combout ),
	.datac(\Mux8~2_combout ),
	.datad(\Mux5~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux8~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux8~3 .lut_mask = "f838";
defparam \Mux8~3 .operation_mode = "normal";
defparam \Mux8~3 .output_mode = "comb_only";
defparam \Mux8~3 .register_cascade_mode = "off";
defparam \Mux8~3 .sum_lutc_input = "datac";
defparam \Mux8~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt~15 (
// Equation(s):
// \step_cnt~15_combout  = (\location_row_num~5_combout  & ((\Mux8~1_combout ) # ((\Add0~1_combout )))) # (!\location_row_num~5_combout  & ((\Add0~1_combout  & (\Mux8~1_combout )) # (!\Add0~1_combout  & ((\Mux8~3_combout )))))

	.clk(gnd),
	.dataa(\Mux8~1_combout ),
	.datab(\location_row_num~5_combout ),
	.datac(\Add0~1_combout ),
	.datad(\Mux8~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt~15 .lut_mask = "ebe8";
defparam \step_cnt~15 .operation_mode = "normal";
defparam \step_cnt~15 .output_mode = "comb_only";
defparam \step_cnt~15 .register_cascade_mode = "off";
defparam \step_cnt~15 .sum_lutc_input = "datac";
defparam \step_cnt~15 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num~8 (
// Equation(s):
// \location_row_num~8_combout  = \location_row_num~5_combout  $ (((!\step_cnt~15_combout  & (\c1|key_out~regout  & \Add0~1_combout ))))

	.clk(gnd),
	.dataa(\location_row_num~5_combout ),
	.datab(\step_cnt~15_combout ),
	.datac(\c1|key_out~regout ),
	.datad(\Add0~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_row_num~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num~8 .lut_mask = "9aaa";
defparam \location_row_num~8 .operation_mode = "normal";
defparam \location_row_num~8 .output_mode = "comb_only";
defparam \location_row_num~8 .register_cascade_mode = "off";
defparam \location_row_num~8 .sum_lutc_input = "datac";
defparam \location_row_num~8 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num[2] (
// Equation(s):
// location_row_num[2] = DFFEAS((\always3~2_combout  & ((\step_cnt~17_combout  & (\location_row_num~8_combout )) # (!\step_cnt~17_combout  & ((!\Add2~1_combout ))))), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\always3~2_combout ),
	.datab(\location_row_num~8_combout ),
	.datac(\step_cnt~17_combout ),
	.datad(\Add2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(location_row_num[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num[2] .lut_mask = "808a";
defparam \location_row_num[2] .operation_mode = "normal";
defparam \location_row_num[2] .output_mode = "reg_only";
defparam \location_row_num[2] .register_cascade_mode = "off";
defparam \location_row_num[2] .sum_lutc_input = "datac";
defparam \location_row_num[2] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num~5 (
// Equation(s):
// \location_row_num~5_combout  = ((\a1|key_out~regout  & ((!terminal_point_col[0]))) # (!\a1|key_out~regout  & (location_row_num[2])))

	.clk(gnd),
	.dataa(location_row_num[2]),
	.datab(vcc),
	.datac(\a1|key_out~regout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_row_num~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num~5 .lut_mask = "0afa";
defparam \location_row_num~5 .operation_mode = "normal";
defparam \location_row_num~5 .output_mode = "comb_only";
defparam \location_row_num~5 .register_cascade_mode = "off";
defparam \location_row_num~5 .sum_lutc_input = "datac";
defparam \location_row_num~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \always3~0 (
// Equation(s):
// \always3~0_combout  = (\a1|key_out~regout ) # ((location_col_num[1] & ((!terminal_point_col[0]) # (!location_col_num[2]))) # (!location_col_num[1] & ((location_col_num[2]) # (terminal_point_col[0]))))

	.clk(gnd),
	.dataa(\a1|key_out~regout ),
	.datab(location_col_num[1]),
	.datac(location_col_num[2]),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always3~0 .lut_mask = "bffe";
defparam \always3~0 .operation_mode = "normal";
defparam \always3~0 .output_mode = "comb_only";
defparam \always3~0 .register_cascade_mode = "off";
defparam \always3~0 .sum_lutc_input = "datac";
defparam \always3~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \always3~1 (
// Equation(s):
// \always3~1_combout  = ((\location_col_num[0]~COMBOUT  & ((!terminal_point_col[0]) # (!\location_row_num[0]~COMBOUT ))) # (!\location_col_num[0]~COMBOUT  & ((\location_row_num[0]~COMBOUT ) # (terminal_point_col[0]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\location_col_num[0]~COMBOUT ),
	.datac(\location_row_num[0]~COMBOUT ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always3~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always3~1 .lut_mask = "3ffc";
defparam \always3~1 .operation_mode = "normal";
defparam \always3~1 .output_mode = "comb_only";
defparam \always3~1 .register_cascade_mode = "off";
defparam \always3~1 .sum_lutc_input = "datac";
defparam \always3~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \always3~2 (
// Equation(s):
// \always3~2_combout  = (\location_row_num~5_combout ) # ((\location_row_num~4_combout ) # ((\always3~0_combout ) # (\always3~1_combout )))

	.clk(gnd),
	.dataa(\location_row_num~5_combout ),
	.datab(\location_row_num~4_combout ),
	.datac(\always3~0_combout ),
	.datad(\always3~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always3~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always3~2 .lut_mask = "fffe";
defparam \always3~2 .operation_mode = "normal";
defparam \always3~2 .output_mode = "comb_only";
defparam \always3~2 .register_cascade_mode = "off";
defparam \always3~2 .sum_lutc_input = "datac";
defparam \always3~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_col_num[0] (
// Equation(s):
// \location_col_num[0]~COMBOUT  = ((\a1|key_out~regout  & ((!terminal_point_col[0]))) # (!\a1|key_out~regout  & (location_col_num[0])))
// location_col_num[0] = DFFEAS(\location_col_num[0]~COMBOUT , \clk~combout , VCC, , , \location_col_num~5_combout , , , \always3~2_combout )

	.clk(\clk~combout ),
	.dataa(location_col_num[0]),
	.datab(terminal_point_col[0]),
	.datac(\location_col_num~5_combout ),
	.datad(\a1|key_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\always3~2_combout ),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_col_num[0]~COMBOUT ),
	.regout(location_col_num[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_col_num[0] .lut_mask = "33aa";
defparam \location_col_num[0] .operation_mode = "normal";
defparam \location_col_num[0] .output_mode = "reg_and_comb";
defparam \location_col_num[0] .register_cascade_mode = "off";
defparam \location_col_num[0] .sum_lutc_input = "datac";
defparam \location_col_num[0] .synch_mode = "on";
// synopsys translate_on

maxii_io \direction3~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\direction3~combout ),
	.padio(direction3));
// synopsys translate_off
defparam \direction3~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \c3|tcnt1[0] (
// Equation(s):
// \c3|tcnt1 [0] = DFFEAS((!\c3|tcnt1 [0]), \clk~combout , \direction3~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[0] .lut_mask = "5555";
defparam \c3|tcnt1[0] .operation_mode = "normal";
defparam \c3|tcnt1[0] .output_mode = "reg_only";
defparam \c3|tcnt1[0] .register_cascade_mode = "off";
defparam \c3|tcnt1[0] .sum_lutc_input = "datac";
defparam \c3|tcnt1[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[1] (
// Equation(s):
// \c3|tcnt1 [1] = DFFEAS(\c3|tcnt1 [0] $ ((\c3|tcnt1 [1])), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[1]~9  = CARRY((\c3|tcnt1 [0] & (\c3|tcnt1 [1])))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [0]),
	.datab(\c3|tcnt1 [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [1]),
	.cout(\c3|tcnt1[1]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[1] .lut_mask = "6688";
defparam \c3|tcnt1[1] .operation_mode = "arithmetic";
defparam \c3|tcnt1[1] .output_mode = "reg_only";
defparam \c3|tcnt1[1] .register_cascade_mode = "off";
defparam \c3|tcnt1[1] .sum_lutc_input = "cin";
defparam \c3|tcnt1[1] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[2] (
// Equation(s):
// \c3|tcnt1 [2] = DFFEAS(\c3|tcnt1 [2] $ ((((\c3|tcnt1[1]~9 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[2]~11  = CARRY(((!\c3|tcnt1[1]~9 )) # (!\c3|tcnt1 [2]))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[1]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [2]),
	.cout(\c3|tcnt1[2]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[2] .cin_used = "true";
defparam \c3|tcnt1[2] .lut_mask = "5a5f";
defparam \c3|tcnt1[2] .operation_mode = "arithmetic";
defparam \c3|tcnt1[2] .output_mode = "reg_only";
defparam \c3|tcnt1[2] .register_cascade_mode = "off";
defparam \c3|tcnt1[2] .sum_lutc_input = "cin";
defparam \c3|tcnt1[2] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[3] (
// Equation(s):
// \c3|tcnt1 [3] = DFFEAS(\c3|tcnt1 [3] $ ((((!\c3|tcnt1[2]~11 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[3]~13  = CARRY((\c3|tcnt1 [3] & ((!\c3|tcnt1[2]~11 ))))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[2]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [3]),
	.cout(\c3|tcnt1[3]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[3] .cin_used = "true";
defparam \c3|tcnt1[3] .lut_mask = "a50a";
defparam \c3|tcnt1[3] .operation_mode = "arithmetic";
defparam \c3|tcnt1[3] .output_mode = "reg_only";
defparam \c3|tcnt1[3] .register_cascade_mode = "off";
defparam \c3|tcnt1[3] .sum_lutc_input = "cin";
defparam \c3|tcnt1[3] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[4] (
// Equation(s):
// \c3|tcnt1 [4] = DFFEAS(\c3|tcnt1 [4] $ ((((\c3|tcnt1[3]~13 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[4]~15  = CARRY(((!\c3|tcnt1[3]~13 )) # (!\c3|tcnt1 [4]))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[3]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [4]),
	.cout(\c3|tcnt1[4]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[4] .cin_used = "true";
defparam \c3|tcnt1[4] .lut_mask = "5a5f";
defparam \c3|tcnt1[4] .operation_mode = "arithmetic";
defparam \c3|tcnt1[4] .output_mode = "reg_only";
defparam \c3|tcnt1[4] .register_cascade_mode = "off";
defparam \c3|tcnt1[4] .sum_lutc_input = "cin";
defparam \c3|tcnt1[4] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[5] (
// Equation(s):
// \c3|tcnt1 [5] = DFFEAS(\c3|tcnt1 [5] $ ((((!\c3|tcnt1[4]~15 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[5]~17  = CARRY((\c3|tcnt1 [5] & ((!\c3|tcnt1[4]~15 ))))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[4]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [5]),
	.cout(\c3|tcnt1[5]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[5] .cin_used = "true";
defparam \c3|tcnt1[5] .lut_mask = "a50a";
defparam \c3|tcnt1[5] .operation_mode = "arithmetic";
defparam \c3|tcnt1[5] .output_mode = "reg_only";
defparam \c3|tcnt1[5] .register_cascade_mode = "off";
defparam \c3|tcnt1[5] .sum_lutc_input = "cin";
defparam \c3|tcnt1[5] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[6] (
// Equation(s):
// \c3|tcnt1 [6] = DFFEAS(\c3|tcnt1 [6] $ ((((\c3|tcnt1[5]~17 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[6]~19  = CARRY(((!\c3|tcnt1[5]~17 )) # (!\c3|tcnt1 [6]))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[5]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [6]),
	.cout(\c3|tcnt1[6]~19 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[6] .cin_used = "true";
defparam \c3|tcnt1[6] .lut_mask = "5a5f";
defparam \c3|tcnt1[6] .operation_mode = "arithmetic";
defparam \c3|tcnt1[6] .output_mode = "reg_only";
defparam \c3|tcnt1[6] .register_cascade_mode = "off";
defparam \c3|tcnt1[6] .sum_lutc_input = "cin";
defparam \c3|tcnt1[6] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[7] (
// Equation(s):
// \c3|tcnt1 [7] = DFFEAS(\c3|tcnt1 [7] $ ((((!\c3|tcnt1[6]~19 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[7]~21  = CARRY((\c3|tcnt1 [7] & ((!\c3|tcnt1[6]~19 ))))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[6]~19 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [7]),
	.cout(\c3|tcnt1[7]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[7] .cin_used = "true";
defparam \c3|tcnt1[7] .lut_mask = "a50a";
defparam \c3|tcnt1[7] .operation_mode = "arithmetic";
defparam \c3|tcnt1[7] .output_mode = "reg_only";
defparam \c3|tcnt1[7] .register_cascade_mode = "off";
defparam \c3|tcnt1[7] .sum_lutc_input = "cin";
defparam \c3|tcnt1[7] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[8] (
// Equation(s):
// \c3|tcnt1 [8] = DFFEAS(\c3|tcnt1 [8] $ ((((\c3|tcnt1[7]~21 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[8]~23  = CARRY(((!\c3|tcnt1[7]~21 )) # (!\c3|tcnt1 [8]))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[7]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [8]),
	.cout(\c3|tcnt1[8]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[8] .cin_used = "true";
defparam \c3|tcnt1[8] .lut_mask = "5a5f";
defparam \c3|tcnt1[8] .operation_mode = "arithmetic";
defparam \c3|tcnt1[8] .output_mode = "reg_only";
defparam \c3|tcnt1[8] .register_cascade_mode = "off";
defparam \c3|tcnt1[8] .sum_lutc_input = "cin";
defparam \c3|tcnt1[8] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[9] (
// Equation(s):
// \c3|tcnt1 [9] = DFFEAS(\c3|tcnt1 [9] $ ((((!\c3|tcnt1[8]~23 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[9]~25  = CARRY((\c3|tcnt1 [9] & ((!\c3|tcnt1[8]~23 ))))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[8]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [9]),
	.cout(\c3|tcnt1[9]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[9] .cin_used = "true";
defparam \c3|tcnt1[9] .lut_mask = "a50a";
defparam \c3|tcnt1[9] .operation_mode = "arithmetic";
defparam \c3|tcnt1[9] .output_mode = "reg_only";
defparam \c3|tcnt1[9] .register_cascade_mode = "off";
defparam \c3|tcnt1[9] .sum_lutc_input = "cin";
defparam \c3|tcnt1[9] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[10] (
// Equation(s):
// \c3|tcnt1 [10] = DFFEAS(\c3|tcnt1 [10] $ ((((\c3|tcnt1[9]~25 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[10]~27  = CARRY(((!\c3|tcnt1[9]~25 )) # (!\c3|tcnt1 [10]))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[9]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [10]),
	.cout(\c3|tcnt1[10]~27 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[10] .cin_used = "true";
defparam \c3|tcnt1[10] .lut_mask = "5a5f";
defparam \c3|tcnt1[10] .operation_mode = "arithmetic";
defparam \c3|tcnt1[10] .output_mode = "reg_only";
defparam \c3|tcnt1[10] .register_cascade_mode = "off";
defparam \c3|tcnt1[10] .sum_lutc_input = "cin";
defparam \c3|tcnt1[10] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[11] (
// Equation(s):
// \c3|tcnt1 [11] = DFFEAS(\c3|tcnt1 [11] $ ((((!\c3|tcnt1[10]~27 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[11]~29  = CARRY((\c3|tcnt1 [11] & ((!\c3|tcnt1[10]~27 ))))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[10]~27 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [11]),
	.cout(\c3|tcnt1[11]~29 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[11] .cin_used = "true";
defparam \c3|tcnt1[11] .lut_mask = "a50a";
defparam \c3|tcnt1[11] .operation_mode = "arithmetic";
defparam \c3|tcnt1[11] .output_mode = "reg_only";
defparam \c3|tcnt1[11] .register_cascade_mode = "off";
defparam \c3|tcnt1[11] .sum_lutc_input = "cin";
defparam \c3|tcnt1[11] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[12] (
// Equation(s):
// \c3|tcnt1 [12] = DFFEAS(\c3|tcnt1 [12] $ ((((\c3|tcnt1[11]~29 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[12]~31  = CARRY(((!\c3|tcnt1[11]~29 )) # (!\c3|tcnt1 [12]))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[11]~29 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [12]),
	.cout(\c3|tcnt1[12]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[12] .cin_used = "true";
defparam \c3|tcnt1[12] .lut_mask = "5a5f";
defparam \c3|tcnt1[12] .operation_mode = "arithmetic";
defparam \c3|tcnt1[12] .output_mode = "reg_only";
defparam \c3|tcnt1[12] .register_cascade_mode = "off";
defparam \c3|tcnt1[12] .sum_lutc_input = "cin";
defparam \c3|tcnt1[12] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[13] (
// Equation(s):
// \c3|tcnt1 [13] = DFFEAS(\c3|tcnt1 [13] $ ((((!\c3|tcnt1[12]~31 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[13]~33  = CARRY((\c3|tcnt1 [13] & ((!\c3|tcnt1[12]~31 ))))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[12]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [13]),
	.cout(\c3|tcnt1[13]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[13] .cin_used = "true";
defparam \c3|tcnt1[13] .lut_mask = "a50a";
defparam \c3|tcnt1[13] .operation_mode = "arithmetic";
defparam \c3|tcnt1[13] .output_mode = "reg_only";
defparam \c3|tcnt1[13] .register_cascade_mode = "off";
defparam \c3|tcnt1[13] .sum_lutc_input = "cin";
defparam \c3|tcnt1[13] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[14] (
// Equation(s):
// \c3|tcnt1 [14] = DFFEAS(\c3|tcnt1 [14] $ ((((\c3|tcnt1[13]~33 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[14]~35  = CARRY(((!\c3|tcnt1[13]~33 )) # (!\c3|tcnt1 [14]))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[13]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [14]),
	.cout(\c3|tcnt1[14]~35 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[14] .cin_used = "true";
defparam \c3|tcnt1[14] .lut_mask = "5a5f";
defparam \c3|tcnt1[14] .operation_mode = "arithmetic";
defparam \c3|tcnt1[14] .output_mode = "reg_only";
defparam \c3|tcnt1[14] .register_cascade_mode = "off";
defparam \c3|tcnt1[14] .sum_lutc_input = "cin";
defparam \c3|tcnt1[14] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[15] (
// Equation(s):
// \c3|tcnt1 [15] = DFFEAS(\c3|tcnt1 [15] $ ((((!\c3|tcnt1[14]~35 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[15]~37  = CARRY((\c3|tcnt1 [15] & ((!\c3|tcnt1[14]~35 ))))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[14]~35 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [15]),
	.cout(\c3|tcnt1[15]~37 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[15] .cin_used = "true";
defparam \c3|tcnt1[15] .lut_mask = "a50a";
defparam \c3|tcnt1[15] .operation_mode = "arithmetic";
defparam \c3|tcnt1[15] .output_mode = "reg_only";
defparam \c3|tcnt1[15] .register_cascade_mode = "off";
defparam \c3|tcnt1[15] .sum_lutc_input = "cin";
defparam \c3|tcnt1[15] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[16] (
// Equation(s):
// \c3|tcnt1 [16] = DFFEAS(\c3|tcnt1 [16] $ ((((\c3|tcnt1[15]~37 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[16]~1  = CARRY(((!\c3|tcnt1[15]~37 )) # (!\c3|tcnt1 [16]))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[15]~37 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [16]),
	.cout(\c3|tcnt1[16]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[16] .cin_used = "true";
defparam \c3|tcnt1[16] .lut_mask = "5a5f";
defparam \c3|tcnt1[16] .operation_mode = "arithmetic";
defparam \c3|tcnt1[16] .output_mode = "reg_only";
defparam \c3|tcnt1[16] .register_cascade_mode = "off";
defparam \c3|tcnt1[16] .sum_lutc_input = "cin";
defparam \c3|tcnt1[16] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[17] (
// Equation(s):
// \c3|tcnt1 [17] = DFFEAS(\c3|tcnt1 [17] $ ((((!\c3|tcnt1[16]~1 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[17]~3  = CARRY((\c3|tcnt1 [17] & ((!\c3|tcnt1[16]~1 ))))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [17]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[16]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [17]),
	.cout(\c3|tcnt1[17]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[17] .cin_used = "true";
defparam \c3|tcnt1[17] .lut_mask = "a50a";
defparam \c3|tcnt1[17] .operation_mode = "arithmetic";
defparam \c3|tcnt1[17] .output_mode = "reg_only";
defparam \c3|tcnt1[17] .register_cascade_mode = "off";
defparam \c3|tcnt1[17] .sum_lutc_input = "cin";
defparam \c3|tcnt1[17] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[18] (
// Equation(s):
// \c3|tcnt1 [18] = DFFEAS(\c3|tcnt1 [18] $ ((((\c3|tcnt1[17]~3 )))), \clk~combout , \direction3~combout , , , , , , )
// \c3|tcnt1[18]~5  = CARRY(((!\c3|tcnt1[17]~3 )) # (!\c3|tcnt1 [18]))

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[17]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [18]),
	.cout(\c3|tcnt1[18]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[18] .cin_used = "true";
defparam \c3|tcnt1[18] .lut_mask = "5a5f";
defparam \c3|tcnt1[18] .operation_mode = "arithmetic";
defparam \c3|tcnt1[18] .output_mode = "reg_only";
defparam \c3|tcnt1[18] .register_cascade_mode = "off";
defparam \c3|tcnt1[18] .sum_lutc_input = "cin";
defparam \c3|tcnt1[18] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|tcnt1[19] (
// Equation(s):
// \c3|tcnt1 [19] = DFFEAS(\c3|tcnt1 [19] $ ((((!\c3|tcnt1[18]~5 )))), \clk~combout , \direction3~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c3|tcnt1 [19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c3|tcnt1[18]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|tcnt1 [19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|tcnt1[19] .cin_used = "true";
defparam \c3|tcnt1[19] .lut_mask = "a5a5";
defparam \c3|tcnt1[19] .operation_mode = "normal";
defparam \c3|tcnt1[19] .output_mode = "reg_only";
defparam \c3|tcnt1[19] .register_cascade_mode = "off";
defparam \c3|tcnt1[19] .sum_lutc_input = "cin";
defparam \c3|tcnt1[19] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|Equal0~0 (
// Equation(s):
// \c3|Equal0~0_combout  = (!\c3|tcnt1 [16] & (!\c3|tcnt1 [17] & (!\c3|tcnt1 [18] & !\c3|tcnt1 [19])))

	.clk(gnd),
	.dataa(\c3|tcnt1 [16]),
	.datab(\c3|tcnt1 [17]),
	.datac(\c3|tcnt1 [18]),
	.datad(\c3|tcnt1 [19]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c3|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|Equal0~0 .lut_mask = "0001";
defparam \c3|Equal0~0 .operation_mode = "normal";
defparam \c3|Equal0~0 .output_mode = "comb_only";
defparam \c3|Equal0~0 .register_cascade_mode = "off";
defparam \c3|Equal0~0 .sum_lutc_input = "datac";
defparam \c3|Equal0~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|Equal0~1 (
// Equation(s):
// \c3|Equal0~1_combout  = (\c3|tcnt1 [0] & (!\c3|tcnt1 [1] & (!\c3|tcnt1 [2] & !\c3|tcnt1 [3])))

	.clk(gnd),
	.dataa(\c3|tcnt1 [0]),
	.datab(\c3|tcnt1 [1]),
	.datac(\c3|tcnt1 [2]),
	.datad(\c3|tcnt1 [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c3|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|Equal0~1 .lut_mask = "0002";
defparam \c3|Equal0~1 .operation_mode = "normal";
defparam \c3|Equal0~1 .output_mode = "comb_only";
defparam \c3|Equal0~1 .register_cascade_mode = "off";
defparam \c3|Equal0~1 .sum_lutc_input = "datac";
defparam \c3|Equal0~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|Equal0~2 (
// Equation(s):
// \c3|Equal0~2_combout  = (!\c3|tcnt1 [4] & (!\c3|tcnt1 [5] & (!\c3|tcnt1 [6] & !\c3|tcnt1 [7])))

	.clk(gnd),
	.dataa(\c3|tcnt1 [4]),
	.datab(\c3|tcnt1 [5]),
	.datac(\c3|tcnt1 [6]),
	.datad(\c3|tcnt1 [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c3|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|Equal0~2 .lut_mask = "0001";
defparam \c3|Equal0~2 .operation_mode = "normal";
defparam \c3|Equal0~2 .output_mode = "comb_only";
defparam \c3|Equal0~2 .register_cascade_mode = "off";
defparam \c3|Equal0~2 .sum_lutc_input = "datac";
defparam \c3|Equal0~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|Equal0~3 (
// Equation(s):
// \c3|Equal0~3_combout  = (!\c3|tcnt1 [8] & (!\c3|tcnt1 [9] & (!\c3|tcnt1 [10] & !\c3|tcnt1 [11])))

	.clk(gnd),
	.dataa(\c3|tcnt1 [8]),
	.datab(\c3|tcnt1 [9]),
	.datac(\c3|tcnt1 [10]),
	.datad(\c3|tcnt1 [11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c3|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|Equal0~3 .lut_mask = "0001";
defparam \c3|Equal0~3 .operation_mode = "normal";
defparam \c3|Equal0~3 .output_mode = "comb_only";
defparam \c3|Equal0~3 .register_cascade_mode = "off";
defparam \c3|Equal0~3 .sum_lutc_input = "datac";
defparam \c3|Equal0~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|Equal0~4 (
// Equation(s):
// \c3|Equal0~4_combout  = (!\c3|tcnt1 [12] & (!\c3|tcnt1 [13] & (!\c3|tcnt1 [14] & !\c3|tcnt1 [15])))

	.clk(gnd),
	.dataa(\c3|tcnt1 [12]),
	.datab(\c3|tcnt1 [13]),
	.datac(\c3|tcnt1 [14]),
	.datad(\c3|tcnt1 [15]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c3|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|Equal0~4 .lut_mask = "0001";
defparam \c3|Equal0~4 .operation_mode = "normal";
defparam \c3|Equal0~4 .output_mode = "comb_only";
defparam \c3|Equal0~4 .register_cascade_mode = "off";
defparam \c3|Equal0~4 .sum_lutc_input = "datac";
defparam \c3|Equal0~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|Equal0~5 (
// Equation(s):
// \c3|Equal0~5_combout  = (\c3|Equal0~1_combout  & (\c3|Equal0~2_combout  & (\c3|Equal0~3_combout  & \c3|Equal0~4_combout )))

	.clk(gnd),
	.dataa(\c3|Equal0~1_combout ),
	.datab(\c3|Equal0~2_combout ),
	.datac(\c3|Equal0~3_combout ),
	.datad(\c3|Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c3|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|Equal0~5 .lut_mask = "8000";
defparam \c3|Equal0~5 .operation_mode = "normal";
defparam \c3|Equal0~5 .output_mode = "comb_only";
defparam \c3|Equal0~5 .register_cascade_mode = "off";
defparam \c3|Equal0~5 .sum_lutc_input = "datac";
defparam \c3|Equal0~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c3|key_out (
// Equation(s):
// \c3|key_out~regout  = DFFEAS((\c3|key_out~regout ) # ((\c3|Equal0~0_combout  & (\c3|Equal0~5_combout ))), \clk~combout , \direction3~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c3|key_out~regout ),
	.datab(\c3|Equal0~0_combout ),
	.datac(\c3|Equal0~5_combout ),
	.datad(vcc),
	.aclr(!\direction3~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c3|key_out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c3|key_out .lut_mask = "eaea";
defparam \c3|key_out .operation_mode = "normal";
defparam \c3|key_out .output_mode = "reg_only";
defparam \c3|key_out .register_cascade_mode = "off";
defparam \c3|key_out .sum_lutc_input = "datac";
defparam \c3|key_out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt~14 (
// Equation(s):
// \step_cnt~14_combout  = ((!\location_col_num[0]~COMBOUT  & (!\location_col_num~1_combout  & !\location_col_num~0_combout ))) # (!\c3|key_out~regout )

	.clk(gnd),
	.dataa(\location_col_num[0]~COMBOUT ),
	.datab(\location_col_num~1_combout ),
	.datac(\location_col_num~0_combout ),
	.datad(\c3|key_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt~14 .lut_mask = "01ff";
defparam \step_cnt~14 .operation_mode = "normal";
defparam \step_cnt~14 .output_mode = "comb_only";
defparam \step_cnt~14 .register_cascade_mode = "off";
defparam \step_cnt~14 .sum_lutc_input = "datac";
defparam \step_cnt~14 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add3~2 (
// Equation(s):
// \Add3~2_combout  = (\a1|key_out~regout  & (((!terminal_point_col[0])))) # (!\a1|key_out~regout  & ((location_col_num[0]) # ((location_col_num[1]))))

	.clk(gnd),
	.dataa(location_col_num[0]),
	.datab(location_col_num[1]),
	.datac(\a1|key_out~regout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add3~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add3~2 .lut_mask = "0efe";
defparam \Add3~2 .operation_mode = "normal";
defparam \Add3~2 .output_mode = "comb_only";
defparam \Add3~2 .register_cascade_mode = "off";
defparam \Add3~2 .sum_lutc_input = "datac";
defparam \Add3~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add3~3 (
// Equation(s):
// \Add3~3_combout  = \Add3~2_combout  $ (((\a1|key_out~regout  & ((!terminal_point_col[0]))) # (!\a1|key_out~regout  & (location_col_num[2]))))

	.clk(gnd),
	.dataa(location_col_num[2]),
	.datab(\a1|key_out~regout ),
	.datac(terminal_point_col[0]),
	.datad(\Add3~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add3~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add3~3 .lut_mask = "d12e";
defparam \Add3~3 .operation_mode = "normal";
defparam \Add3~3 .output_mode = "comb_only";
defparam \Add3~3 .register_cascade_mode = "off";
defparam \Add3~3 .sum_lutc_input = "datac";
defparam \Add3~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux12~0 (
// Equation(s):
// \Mux12~0_combout  = (\Add3~3_combout  & (((\a1|key_out~regout  & !terminal_point_col[0])))) # (!\Add3~3_combout  & ((\location_col_num[0]~COMBOUT ) # ((!terminal_point_col[0]))))

	.clk(gnd),
	.dataa(\location_col_num[0]~COMBOUT ),
	.datab(\a1|key_out~regout ),
	.datac(\Add3~3_combout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux12~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux12~0 .lut_mask = "0acf";
defparam \Mux12~0 .operation_mode = "normal";
defparam \Mux12~0 .output_mode = "comb_only";
defparam \Mux12~0 .register_cascade_mode = "off";
defparam \Mux12~0 .sum_lutc_input = "datac";
defparam \Mux12~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux12~1 (
// Equation(s):
// \Mux12~1_combout  = (location_col_num[0] & ((\location_col_num[0]~COMBOUT  $ (!\location_col_num~0_combout )) # (!\a1|key_out~regout ))) # (!location_col_num[0] & (\location_col_num[0]~COMBOUT  $ ((!\location_col_num~0_combout ))))

	.clk(gnd),
	.dataa(\location_col_num[0]~COMBOUT ),
	.datab(\location_col_num~0_combout ),
	.datac(location_col_num[0]),
	.datad(\a1|key_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux12~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux12~1 .lut_mask = "99f9";
defparam \Mux12~1 .operation_mode = "normal";
defparam \Mux12~1 .output_mode = "comb_only";
defparam \Mux12~1 .register_cascade_mode = "off";
defparam \Mux12~1 .sum_lutc_input = "datac";
defparam \Mux12~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux12~2 (
// Equation(s):
// \Mux12~2_combout  = (\Mux12~0_combout ) # ((\Add3~3_combout  & (\Mux12~1_combout )))

	.clk(gnd),
	.dataa(\Mux12~0_combout ),
	.datab(\Add3~3_combout ),
	.datac(\Mux12~1_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux12~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux12~2 .lut_mask = "eaea";
defparam \Mux12~2 .operation_mode = "normal";
defparam \Mux12~2 .output_mode = "comb_only";
defparam \Mux12~2 .register_cascade_mode = "off";
defparam \Mux12~2 .sum_lutc_input = "datac";
defparam \Mux12~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux11~0 (
// Equation(s):
// \Mux11~0_combout  = (\location_col_num[0]~COMBOUT  & ((\Add3~3_combout  & ((!\location_col_num~0_combout ))) # (!\Add3~3_combout  & (terminal_point_col[0] & \location_col_num~0_combout ))))

	.clk(gnd),
	.dataa(\location_col_num[0]~COMBOUT ),
	.datab(terminal_point_col[0]),
	.datac(\Add3~3_combout ),
	.datad(\location_col_num~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux11~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux11~0 .lut_mask = "08a0";
defparam \Mux11~0 .operation_mode = "normal";
defparam \Mux11~0 .output_mode = "comb_only";
defparam \Mux11~0 .register_cascade_mode = "off";
defparam \Mux11~0 .sum_lutc_input = "datac";
defparam \Mux11~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num~9 (
// Equation(s):
// \location_row_num~9_combout  = \location_row_num~7_combout  $ (((!\step_cnt~17_combout  & ((\location_row_num~6_combout )))))

	.clk(gnd),
	.dataa(\location_row_num~7_combout ),
	.datab(\step_cnt~17_combout ),
	.datac(vcc),
	.datad(\location_row_num~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_row_num~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num~9 .lut_mask = "99aa";
defparam \location_row_num~9 .operation_mode = "normal";
defparam \location_row_num~9 .output_mode = "comb_only";
defparam \location_row_num~9 .register_cascade_mode = "off";
defparam \location_row_num~9 .sum_lutc_input = "datac";
defparam \location_row_num~9 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux13~0 (
// Equation(s):
// \Mux13~0_combout  = (terminal_point_col[0] & (((\location_col_num[0]~COMBOUT )))) # (!terminal_point_col[0] & ((\location_col_num[0]~COMBOUT  & (\Add3~3_combout )) # (!\location_col_num[0]~COMBOUT  & ((!\location_col_num~0_combout )))))

	.clk(gnd),
	.dataa(\Add3~3_combout ),
	.datab(\location_col_num~0_combout ),
	.datac(terminal_point_col[0]),
	.datad(\location_col_num[0]~COMBOUT ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux13~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux13~0 .lut_mask = "fa03";
defparam \Mux13~0 .operation_mode = "normal";
defparam \Mux13~0 .output_mode = "comb_only";
defparam \Mux13~0 .register_cascade_mode = "off";
defparam \Mux13~0 .sum_lutc_input = "datac";
defparam \Mux13~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux18~0 (
// Equation(s):
// \Mux18~0_combout  = (\location_row_num~12_combout  & (((\location_row_num~9_combout )))) # (!\location_row_num~12_combout  & ((\location_row_num~9_combout  & (\Mux11~0_combout )) # (!\location_row_num~9_combout  & ((\Mux13~0_combout )))))

	.clk(gnd),
	.dataa(\location_row_num~12_combout ),
	.datab(\Mux11~0_combout ),
	.datac(\location_row_num~9_combout ),
	.datad(\Mux13~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux18~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux18~0 .lut_mask = "e5e0";
defparam \Mux18~0 .operation_mode = "normal";
defparam \Mux18~0 .output_mode = "comb_only";
defparam \Mux18~0 .register_cascade_mode = "off";
defparam \Mux18~0 .sum_lutc_input = "datac";
defparam \Mux18~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux10~0 (
// Equation(s):
// \Mux10~0_combout  = (\location_col_num[0]~COMBOUT ) # ((\location_col_num~1_combout ) # ((\location_col_num~0_combout ) # (!terminal_point_col[0])))

	.clk(gnd),
	.dataa(\location_col_num[0]~COMBOUT ),
	.datab(\location_col_num~1_combout ),
	.datac(\location_col_num~0_combout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux10~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux10~0 .lut_mask = "feff";
defparam \Mux10~0 .operation_mode = "normal";
defparam \Mux10~0 .output_mode = "comb_only";
defparam \Mux10~0 .register_cascade_mode = "off";
defparam \Mux10~0 .sum_lutc_input = "datac";
defparam \Mux10~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux18~1 (
// Equation(s):
// \Mux18~1_combout  = (\location_row_num~12_combout  & ((\Mux18~0_combout  & ((\Mux10~0_combout ))) # (!\Mux18~0_combout  & (\Mux12~2_combout )))) # (!\location_row_num~12_combout  & (((\Mux18~0_combout ))))

	.clk(gnd),
	.dataa(\Mux12~2_combout ),
	.datab(\location_row_num~12_combout ),
	.datac(\Mux18~0_combout ),
	.datad(\Mux10~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux18~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux18~1 .lut_mask = "f838";
defparam \Mux18~1 .operation_mode = "normal";
defparam \Mux18~1 .output_mode = "comb_only";
defparam \Mux18~1 .register_cascade_mode = "off";
defparam \Mux18~1 .sum_lutc_input = "datac";
defparam \Mux18~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux15~0 (
// Equation(s):
// \Mux15~0_combout  = (\location_col_num[0]~COMBOUT  & ((\Add3~3_combout ) # (\location_col_num~0_combout  $ (!terminal_point_col[0])))) # (!\location_col_num[0]~COMBOUT  & (((!\Add3~3_combout  & !\location_col_num~0_combout )) # (!terminal_point_col[0])))

	.clk(gnd),
	.dataa(\location_col_num[0]~COMBOUT ),
	.datab(\Add3~3_combout ),
	.datac(\location_col_num~0_combout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux15~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux15~0 .lut_mask = "a9df";
defparam \Mux15~0 .operation_mode = "normal";
defparam \Mux15~0 .output_mode = "comb_only";
defparam \Mux15~0 .register_cascade_mode = "off";
defparam \Mux15~0 .sum_lutc_input = "datac";
defparam \Mux15~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux16~0 (
// Equation(s):
// \Mux16~0_combout  = (\Add3~3_combout  & (\location_col_num[0]~COMBOUT  $ (terminal_point_col[0] $ (\location_col_num~0_combout )))) # (!\Add3~3_combout  & (!\location_col_num~0_combout  & (\location_col_num[0]~COMBOUT  $ (!terminal_point_col[0]))))

	.clk(gnd),
	.dataa(\Add3~3_combout ),
	.datab(\location_col_num[0]~COMBOUT ),
	.datac(terminal_point_col[0]),
	.datad(\location_col_num~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux16~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux16~0 .lut_mask = "8269";
defparam \Mux16~0 .operation_mode = "normal";
defparam \Mux16~0 .output_mode = "comb_only";
defparam \Mux16~0 .register_cascade_mode = "off";
defparam \Mux16~0 .sum_lutc_input = "datac";
defparam \Mux16~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux17~0 (
// Equation(s):
// \Mux17~0_combout  = (terminal_point_col[0]) # ((\location_col_num~1_combout ) # ((!\location_col_num[0]~COMBOUT  & !\location_col_num~0_combout )))

	.clk(gnd),
	.dataa(terminal_point_col[0]),
	.datab(\location_col_num~1_combout ),
	.datac(\location_col_num[0]~COMBOUT ),
	.datad(\location_col_num~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux17~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux17~0 .lut_mask = "eeef";
defparam \Mux17~0 .operation_mode = "normal";
defparam \Mux17~0 .output_mode = "comb_only";
defparam \Mux17~0 .register_cascade_mode = "off";
defparam \Mux17~0 .sum_lutc_input = "datac";
defparam \Mux17~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux18~2 (
// Equation(s):
// \Mux18~2_combout  = (\location_row_num~9_combout  & (((\location_row_num~12_combout )))) # (!\location_row_num~9_combout  & ((\location_row_num~12_combout  & (\Mux16~0_combout )) # (!\location_row_num~12_combout  & ((\Mux17~0_combout )))))

	.clk(gnd),
	.dataa(\location_row_num~9_combout ),
	.datab(\Mux16~0_combout ),
	.datac(\location_row_num~12_combout ),
	.datad(\Mux17~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux18~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux18~2 .lut_mask = "e5e0";
defparam \Mux18~2 .operation_mode = "normal";
defparam \Mux18~2 .output_mode = "comb_only";
defparam \Mux18~2 .register_cascade_mode = "off";
defparam \Mux18~2 .sum_lutc_input = "datac";
defparam \Mux18~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux14~0 (
// Equation(s):
// \Mux14~0_combout  = (\location_col_num[0]~COMBOUT  & ((terminal_point_col[0]) # ((\Add3~3_combout  & !\location_col_num~0_combout )))) # (!\location_col_num[0]~COMBOUT  & (!terminal_point_col[0] & (!\Add3~3_combout )))

	.clk(gnd),
	.dataa(\location_col_num[0]~COMBOUT ),
	.datab(terminal_point_col[0]),
	.datac(\Add3~3_combout ),
	.datad(\location_col_num~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux14~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux14~0 .lut_mask = "89a9";
defparam \Mux14~0 .operation_mode = "normal";
defparam \Mux14~0 .output_mode = "comb_only";
defparam \Mux14~0 .register_cascade_mode = "off";
defparam \Mux14~0 .sum_lutc_input = "datac";
defparam \Mux14~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux18~3 (
// Equation(s):
// \Mux18~3_combout  = (\location_row_num~9_combout  & ((\Mux18~2_combout  & ((\Mux14~0_combout ))) # (!\Mux18~2_combout  & (\Mux15~0_combout )))) # (!\location_row_num~9_combout  & (((\Mux18~2_combout ))))

	.clk(gnd),
	.dataa(\Mux15~0_combout ),
	.datab(\location_row_num~9_combout ),
	.datac(\Mux18~2_combout ),
	.datad(\Mux14~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux18~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux18~3 .lut_mask = "f838";
defparam \Mux18~3 .operation_mode = "normal";
defparam \Mux18~3 .output_mode = "comb_only";
defparam \Mux18~3 .register_cascade_mode = "off";
defparam \Mux18~3 .sum_lutc_input = "datac";
defparam \Mux18~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_row_num~13 (
// Equation(s):
// \location_row_num~13_combout  = \location_row_num~8_combout  $ (((\location_row_num~6_combout  & (!\location_row_num~7_combout  & !\step_cnt~17_combout ))))

	.clk(gnd),
	.dataa(\location_row_num~6_combout ),
	.datab(\location_row_num~7_combout ),
	.datac(\location_row_num~8_combout ),
	.datad(\step_cnt~17_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_row_num~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_row_num~13 .lut_mask = "f0d2";
defparam \location_row_num~13 .operation_mode = "normal";
defparam \location_row_num~13 .output_mode = "comb_only";
defparam \location_row_num~13 .register_cascade_mode = "off";
defparam \location_row_num~13 .sum_lutc_input = "datac";
defparam \location_row_num~13 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt~18 (
// Equation(s):
// \step_cnt~18_combout  = (\step_cnt~14_combout ) # ((\location_row_num~13_combout  & (\Mux18~1_combout )) # (!\location_row_num~13_combout  & ((\Mux18~3_combout ))))

	.clk(gnd),
	.dataa(\step_cnt~14_combout ),
	.datab(\Mux18~1_combout ),
	.datac(\Mux18~3_combout ),
	.datad(\location_row_num~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt~18 .lut_mask = "eefa";
defparam \step_cnt~18 .operation_mode = "normal";
defparam \step_cnt~18 .output_mode = "comb_only";
defparam \step_cnt~18 .register_cascade_mode = "off";
defparam \step_cnt~18 .sum_lutc_input = "datac";
defparam \step_cnt~18 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add4~4 (
// Equation(s):
// \Add4~4_combout  = \location_col_num~0_combout  $ ((((!\step_cnt~18_combout )) # (!\location_col_num[0]~COMBOUT )))

	.clk(gnd),
	.dataa(\location_col_num[0]~COMBOUT ),
	.datab(\step_cnt~18_combout ),
	.datac(\location_col_num~0_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add4~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add4~4 .lut_mask = "8787";
defparam \Add4~4 .operation_mode = "normal";
defparam \Add4~4 .output_mode = "comb_only";
defparam \Add4~4 .register_cascade_mode = "off";
defparam \Add4~4 .sum_lutc_input = "datac";
defparam \Add4~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_col_num~2 (
// Equation(s):
// \location_col_num~2_combout  = \location_col_num~0_combout  $ (((!\location_col_num[0]~COMBOUT  & (!\step_cnt~18_combout ))))

	.clk(gnd),
	.dataa(\location_col_num~0_combout ),
	.datab(\location_col_num[0]~COMBOUT ),
	.datac(\step_cnt~18_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_col_num~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_col_num~2 .lut_mask = "a9a9";
defparam \location_col_num~2 .operation_mode = "normal";
defparam \location_col_num~2 .output_mode = "comb_only";
defparam \location_col_num~2 .register_cascade_mode = "off";
defparam \location_col_num~2 .sum_lutc_input = "datac";
defparam \location_col_num~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_col_num~4 (
// Equation(s):
// \location_col_num~4_combout  = ((\location_col_num[0]~COMBOUT  $ (\step_cnt~18_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\location_col_num[0]~COMBOUT ),
	.datad(\step_cnt~18_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_col_num~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_col_num~4 .lut_mask = "0ff0";
defparam \location_col_num~4 .operation_mode = "normal";
defparam \location_col_num~4 .output_mode = "comb_only";
defparam \location_col_num~4 .register_cascade_mode = "off";
defparam \location_col_num~4 .sum_lutc_input = "datac";
defparam \location_col_num~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux21~0 (
// Equation(s):
// \Mux21~0_combout  = ((\location_col_num~3_combout  & ((!terminal_point_col[0]))) # (!\location_col_num~3_combout  & (\location_col_num~2_combout ))) # (!\location_col_num~4_combout )

	.clk(gnd),
	.dataa(\location_col_num~2_combout ),
	.datab(\location_col_num~3_combout ),
	.datac(terminal_point_col[0]),
	.datad(\location_col_num~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux21~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux21~0 .lut_mask = "2eff";
defparam \Mux21~0 .operation_mode = "normal";
defparam \Mux21~0 .output_mode = "comb_only";
defparam \Mux21~0 .register_cascade_mode = "off";
defparam \Mux21~0 .sum_lutc_input = "datac";
defparam \Mux21~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux20~0 (
// Equation(s):
// \Mux20~0_combout  = (\location_col_num~3_combout  & (!\location_col_num~4_combout  & ((terminal_point_col[0]) # (\location_col_num~2_combout ))))

	.clk(gnd),
	.dataa(\location_col_num~3_combout ),
	.datab(terminal_point_col[0]),
	.datac(\location_col_num~2_combout ),
	.datad(\location_col_num~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux20~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux20~0 .lut_mask = "00a8";
defparam \Mux20~0 .operation_mode = "normal";
defparam \Mux20~0 .output_mode = "comb_only";
defparam \Mux20~0 .register_cascade_mode = "off";
defparam \Mux20~0 .sum_lutc_input = "datac";
defparam \Mux20~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux22~0 (
// Equation(s):
// \Mux22~0_combout  = (terminal_point_col[0] & (((!\location_col_num~4_combout )))) # (!terminal_point_col[0] & (\location_col_num~2_combout  $ (((!\location_col_num~3_combout  & !\location_col_num~4_combout )))))

	.clk(gnd),
	.dataa(terminal_point_col[0]),
	.datab(\location_col_num~3_combout ),
	.datac(\location_col_num~2_combout ),
	.datad(\location_col_num~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux22~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux22~0 .lut_mask = "50eb";
defparam \Mux22~0 .operation_mode = "normal";
defparam \Mux22~0 .output_mode = "comb_only";
defparam \Mux22~0 .register_cascade_mode = "off";
defparam \Mux22~0 .sum_lutc_input = "datac";
defparam \Mux22~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux27~0 (
// Equation(s):
// \Mux27~0_combout  = (\location_row_num~12_combout  & (((\location_row_num~9_combout )))) # (!\location_row_num~12_combout  & ((\location_row_num~9_combout  & (\Mux20~0_combout )) # (!\location_row_num~9_combout  & ((\Mux22~0_combout )))))

	.clk(gnd),
	.dataa(\location_row_num~12_combout ),
	.datab(\Mux20~0_combout ),
	.datac(\location_row_num~9_combout ),
	.datad(\Mux22~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux27~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux27~0 .lut_mask = "e5e0";
defparam \Mux27~0 .operation_mode = "normal";
defparam \Mux27~0 .output_mode = "comb_only";
defparam \Mux27~0 .register_cascade_mode = "off";
defparam \Mux27~0 .sum_lutc_input = "datac";
defparam \Mux27~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux19~0 (
// Equation(s):
// \Mux19~0_combout  = (((!\location_col_num~2_combout ) # (!\location_col_num~4_combout )) # (!\location_col_num~3_combout )) # (!terminal_point_col[0])

	.clk(gnd),
	.dataa(terminal_point_col[0]),
	.datab(\location_col_num~3_combout ),
	.datac(\location_col_num~4_combout ),
	.datad(\location_col_num~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux19~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux19~0 .lut_mask = "7fff";
defparam \Mux19~0 .operation_mode = "normal";
defparam \Mux19~0 .output_mode = "comb_only";
defparam \Mux19~0 .register_cascade_mode = "off";
defparam \Mux19~0 .sum_lutc_input = "datac";
defparam \Mux19~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux27~1 (
// Equation(s):
// \Mux27~1_combout  = (\location_row_num~12_combout  & ((\Mux27~0_combout  & ((\Mux19~0_combout ))) # (!\Mux27~0_combout  & (\Mux21~0_combout )))) # (!\location_row_num~12_combout  & (((\Mux27~0_combout ))))

	.clk(gnd),
	.dataa(\Mux21~0_combout ),
	.datab(\location_row_num~12_combout ),
	.datac(\Mux27~0_combout ),
	.datad(\Mux19~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux27~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux27~1 .lut_mask = "f838";
defparam \Mux27~1 .operation_mode = "normal";
defparam \Mux27~1 .output_mode = "comb_only";
defparam \Mux27~1 .register_cascade_mode = "off";
defparam \Mux27~1 .sum_lutc_input = "datac";
defparam \Mux27~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux24~0 (
// Equation(s):
// \Mux24~0_combout  = (\location_col_num~3_combout  & ((\location_col_num~2_combout ) # (\location_col_num~4_combout  $ (terminal_point_col[0])))) # (!\location_col_num~3_combout  & (((!\location_col_num~2_combout  & !\location_col_num~4_combout )) # 
// (!terminal_point_col[0])))

	.clk(gnd),
	.dataa(\location_col_num~3_combout ),
	.datab(\location_col_num~2_combout ),
	.datac(\location_col_num~4_combout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux24~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux24~0 .lut_mask = "8bfd";
defparam \Mux24~0 .operation_mode = "normal";
defparam \Mux24~0 .output_mode = "comb_only";
defparam \Mux24~0 .register_cascade_mode = "off";
defparam \Mux24~0 .sum_lutc_input = "datac";
defparam \Mux24~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux25~0 (
// Equation(s):
// \Mux25~0_combout  = (\location_col_num~2_combout  & ((terminal_point_col[0] $ (\location_col_num~3_combout )))) # (!\location_col_num~2_combout  & (!\location_col_num~3_combout  & (\location_col_num~4_combout  $ (terminal_point_col[0]))))

	.clk(gnd),
	.dataa(\location_col_num~2_combout ),
	.datab(\location_col_num~4_combout ),
	.datac(terminal_point_col[0]),
	.datad(\location_col_num~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux25~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux25~0 .lut_mask = "0ab4";
defparam \Mux25~0 .operation_mode = "normal";
defparam \Mux25~0 .output_mode = "comb_only";
defparam \Mux25~0 .register_cascade_mode = "off";
defparam \Mux25~0 .sum_lutc_input = "datac";
defparam \Mux25~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux26~0 (
// Equation(s):
// \Mux26~0_combout  = (terminal_point_col[0]) # ((\location_col_num~3_combout  & ((\location_col_num~4_combout ) # (!\location_col_num~2_combout ))) # (!\location_col_num~3_combout  & ((\location_col_num~2_combout ))))

	.clk(gnd),
	.dataa(terminal_point_col[0]),
	.datab(\location_col_num~4_combout ),
	.datac(\location_col_num~3_combout ),
	.datad(\location_col_num~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux26~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux26~0 .lut_mask = "effa";
defparam \Mux26~0 .operation_mode = "normal";
defparam \Mux26~0 .output_mode = "comb_only";
defparam \Mux26~0 .register_cascade_mode = "off";
defparam \Mux26~0 .sum_lutc_input = "datac";
defparam \Mux26~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux27~2 (
// Equation(s):
// \Mux27~2_combout  = (\location_row_num~9_combout  & (((\location_row_num~12_combout )))) # (!\location_row_num~9_combout  & ((\location_row_num~12_combout  & (\Mux25~0_combout )) # (!\location_row_num~12_combout  & ((\Mux26~0_combout )))))

	.clk(gnd),
	.dataa(\location_row_num~9_combout ),
	.datab(\Mux25~0_combout ),
	.datac(\location_row_num~12_combout ),
	.datad(\Mux26~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux27~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux27~2 .lut_mask = "e5e0";
defparam \Mux27~2 .operation_mode = "normal";
defparam \Mux27~2 .output_mode = "comb_only";
defparam \Mux27~2 .register_cascade_mode = "off";
defparam \Mux27~2 .sum_lutc_input = "datac";
defparam \Mux27~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux23~0 (
// Equation(s):
// \Mux23~0_combout  = (terminal_point_col[0] & (((!\location_col_num~4_combout )))) # (!terminal_point_col[0] & (\location_col_num~3_combout  & ((\location_col_num~2_combout ) # (\location_col_num~4_combout ))))

	.clk(gnd),
	.dataa(\location_col_num~3_combout ),
	.datab(\location_col_num~2_combout ),
	.datac(terminal_point_col[0]),
	.datad(\location_col_num~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux23~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux23~0 .lut_mask = "0af8";
defparam \Mux23~0 .operation_mode = "normal";
defparam \Mux23~0 .output_mode = "comb_only";
defparam \Mux23~0 .register_cascade_mode = "off";
defparam \Mux23~0 .sum_lutc_input = "datac";
defparam \Mux23~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux27~3 (
// Equation(s):
// \Mux27~3_combout  = (\location_row_num~9_combout  & ((\Mux27~2_combout  & ((\Mux23~0_combout ))) # (!\Mux27~2_combout  & (\Mux24~0_combout )))) # (!\location_row_num~9_combout  & (((\Mux27~2_combout ))))

	.clk(gnd),
	.dataa(\Mux24~0_combout ),
	.datab(\location_row_num~9_combout ),
	.datac(\Mux27~2_combout ),
	.datad(\Mux23~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux27~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux27~3 .lut_mask = "f838";
defparam \Mux27~3 .operation_mode = "normal";
defparam \Mux27~3 .output_mode = "comb_only";
defparam \Mux27~3 .register_cascade_mode = "off";
defparam \Mux27~3 .sum_lutc_input = "datac";
defparam \Mux27~3 .synch_mode = "off";
// synopsys translate_on

maxii_io \direction4~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\direction4~combout ),
	.padio(direction4));
// synopsys translate_off
defparam \direction4~I .operation_mode = "input";
// synopsys translate_on

maxii_lcell \c4|tcnt1[0] (
// Equation(s):
// \c4|tcnt1 [0] = DFFEAS((!\c4|tcnt1 [0]), \clk~combout , \direction4~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[0] .lut_mask = "5555";
defparam \c4|tcnt1[0] .operation_mode = "normal";
defparam \c4|tcnt1[0] .output_mode = "reg_only";
defparam \c4|tcnt1[0] .register_cascade_mode = "off";
defparam \c4|tcnt1[0] .sum_lutc_input = "datac";
defparam \c4|tcnt1[0] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[1] (
// Equation(s):
// \c4|tcnt1 [1] = DFFEAS(\c4|tcnt1 [0] $ ((\c4|tcnt1 [1])), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[1]~9  = CARRY((\c4|tcnt1 [0] & (\c4|tcnt1 [1])))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [0]),
	.datab(\c4|tcnt1 [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [1]),
	.cout(\c4|tcnt1[1]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[1] .lut_mask = "6688";
defparam \c4|tcnt1[1] .operation_mode = "arithmetic";
defparam \c4|tcnt1[1] .output_mode = "reg_only";
defparam \c4|tcnt1[1] .register_cascade_mode = "off";
defparam \c4|tcnt1[1] .sum_lutc_input = "cin";
defparam \c4|tcnt1[1] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[2] (
// Equation(s):
// \c4|tcnt1 [2] = DFFEAS(\c4|tcnt1 [2] $ ((((\c4|tcnt1[1]~9 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[2]~11  = CARRY(((!\c4|tcnt1[1]~9 )) # (!\c4|tcnt1 [2]))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[1]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [2]),
	.cout(\c4|tcnt1[2]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[2] .cin_used = "true";
defparam \c4|tcnt1[2] .lut_mask = "5a5f";
defparam \c4|tcnt1[2] .operation_mode = "arithmetic";
defparam \c4|tcnt1[2] .output_mode = "reg_only";
defparam \c4|tcnt1[2] .register_cascade_mode = "off";
defparam \c4|tcnt1[2] .sum_lutc_input = "cin";
defparam \c4|tcnt1[2] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[3] (
// Equation(s):
// \c4|tcnt1 [3] = DFFEAS(\c4|tcnt1 [3] $ ((((!\c4|tcnt1[2]~11 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[3]~13  = CARRY((\c4|tcnt1 [3] & ((!\c4|tcnt1[2]~11 ))))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[2]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [3]),
	.cout(\c4|tcnt1[3]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[3] .cin_used = "true";
defparam \c4|tcnt1[3] .lut_mask = "a50a";
defparam \c4|tcnt1[3] .operation_mode = "arithmetic";
defparam \c4|tcnt1[3] .output_mode = "reg_only";
defparam \c4|tcnt1[3] .register_cascade_mode = "off";
defparam \c4|tcnt1[3] .sum_lutc_input = "cin";
defparam \c4|tcnt1[3] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[4] (
// Equation(s):
// \c4|tcnt1 [4] = DFFEAS(\c4|tcnt1 [4] $ ((((\c4|tcnt1[3]~13 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[4]~15  = CARRY(((!\c4|tcnt1[3]~13 )) # (!\c4|tcnt1 [4]))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[3]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [4]),
	.cout(\c4|tcnt1[4]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[4] .cin_used = "true";
defparam \c4|tcnt1[4] .lut_mask = "5a5f";
defparam \c4|tcnt1[4] .operation_mode = "arithmetic";
defparam \c4|tcnt1[4] .output_mode = "reg_only";
defparam \c4|tcnt1[4] .register_cascade_mode = "off";
defparam \c4|tcnt1[4] .sum_lutc_input = "cin";
defparam \c4|tcnt1[4] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[5] (
// Equation(s):
// \c4|tcnt1 [5] = DFFEAS(\c4|tcnt1 [5] $ ((((!\c4|tcnt1[4]~15 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[5]~17  = CARRY((\c4|tcnt1 [5] & ((!\c4|tcnt1[4]~15 ))))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[4]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [5]),
	.cout(\c4|tcnt1[5]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[5] .cin_used = "true";
defparam \c4|tcnt1[5] .lut_mask = "a50a";
defparam \c4|tcnt1[5] .operation_mode = "arithmetic";
defparam \c4|tcnt1[5] .output_mode = "reg_only";
defparam \c4|tcnt1[5] .register_cascade_mode = "off";
defparam \c4|tcnt1[5] .sum_lutc_input = "cin";
defparam \c4|tcnt1[5] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[6] (
// Equation(s):
// \c4|tcnt1 [6] = DFFEAS(\c4|tcnt1 [6] $ ((((\c4|tcnt1[5]~17 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[6]~19  = CARRY(((!\c4|tcnt1[5]~17 )) # (!\c4|tcnt1 [6]))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[5]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [6]),
	.cout(\c4|tcnt1[6]~19 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[6] .cin_used = "true";
defparam \c4|tcnt1[6] .lut_mask = "5a5f";
defparam \c4|tcnt1[6] .operation_mode = "arithmetic";
defparam \c4|tcnt1[6] .output_mode = "reg_only";
defparam \c4|tcnt1[6] .register_cascade_mode = "off";
defparam \c4|tcnt1[6] .sum_lutc_input = "cin";
defparam \c4|tcnt1[6] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[7] (
// Equation(s):
// \c4|tcnt1 [7] = DFFEAS(\c4|tcnt1 [7] $ ((((!\c4|tcnt1[6]~19 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[7]~21  = CARRY((\c4|tcnt1 [7] & ((!\c4|tcnt1[6]~19 ))))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[6]~19 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [7]),
	.cout(\c4|tcnt1[7]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[7] .cin_used = "true";
defparam \c4|tcnt1[7] .lut_mask = "a50a";
defparam \c4|tcnt1[7] .operation_mode = "arithmetic";
defparam \c4|tcnt1[7] .output_mode = "reg_only";
defparam \c4|tcnt1[7] .register_cascade_mode = "off";
defparam \c4|tcnt1[7] .sum_lutc_input = "cin";
defparam \c4|tcnt1[7] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[8] (
// Equation(s):
// \c4|tcnt1 [8] = DFFEAS(\c4|tcnt1 [8] $ ((((\c4|tcnt1[7]~21 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[8]~23  = CARRY(((!\c4|tcnt1[7]~21 )) # (!\c4|tcnt1 [8]))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[7]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [8]),
	.cout(\c4|tcnt1[8]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[8] .cin_used = "true";
defparam \c4|tcnt1[8] .lut_mask = "5a5f";
defparam \c4|tcnt1[8] .operation_mode = "arithmetic";
defparam \c4|tcnt1[8] .output_mode = "reg_only";
defparam \c4|tcnt1[8] .register_cascade_mode = "off";
defparam \c4|tcnt1[8] .sum_lutc_input = "cin";
defparam \c4|tcnt1[8] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[9] (
// Equation(s):
// \c4|tcnt1 [9] = DFFEAS(\c4|tcnt1 [9] $ ((((!\c4|tcnt1[8]~23 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[9]~25  = CARRY((\c4|tcnt1 [9] & ((!\c4|tcnt1[8]~23 ))))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[8]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [9]),
	.cout(\c4|tcnt1[9]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[9] .cin_used = "true";
defparam \c4|tcnt1[9] .lut_mask = "a50a";
defparam \c4|tcnt1[9] .operation_mode = "arithmetic";
defparam \c4|tcnt1[9] .output_mode = "reg_only";
defparam \c4|tcnt1[9] .register_cascade_mode = "off";
defparam \c4|tcnt1[9] .sum_lutc_input = "cin";
defparam \c4|tcnt1[9] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[10] (
// Equation(s):
// \c4|tcnt1 [10] = DFFEAS(\c4|tcnt1 [10] $ ((((\c4|tcnt1[9]~25 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[10]~27  = CARRY(((!\c4|tcnt1[9]~25 )) # (!\c4|tcnt1 [10]))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[9]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [10]),
	.cout(\c4|tcnt1[10]~27 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[10] .cin_used = "true";
defparam \c4|tcnt1[10] .lut_mask = "5a5f";
defparam \c4|tcnt1[10] .operation_mode = "arithmetic";
defparam \c4|tcnt1[10] .output_mode = "reg_only";
defparam \c4|tcnt1[10] .register_cascade_mode = "off";
defparam \c4|tcnt1[10] .sum_lutc_input = "cin";
defparam \c4|tcnt1[10] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[11] (
// Equation(s):
// \c4|tcnt1 [11] = DFFEAS(\c4|tcnt1 [11] $ ((((!\c4|tcnt1[10]~27 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[11]~29  = CARRY((\c4|tcnt1 [11] & ((!\c4|tcnt1[10]~27 ))))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[10]~27 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [11]),
	.cout(\c4|tcnt1[11]~29 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[11] .cin_used = "true";
defparam \c4|tcnt1[11] .lut_mask = "a50a";
defparam \c4|tcnt1[11] .operation_mode = "arithmetic";
defparam \c4|tcnt1[11] .output_mode = "reg_only";
defparam \c4|tcnt1[11] .register_cascade_mode = "off";
defparam \c4|tcnt1[11] .sum_lutc_input = "cin";
defparam \c4|tcnt1[11] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[12] (
// Equation(s):
// \c4|tcnt1 [12] = DFFEAS(\c4|tcnt1 [12] $ ((((\c4|tcnt1[11]~29 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[12]~31  = CARRY(((!\c4|tcnt1[11]~29 )) # (!\c4|tcnt1 [12]))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[11]~29 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [12]),
	.cout(\c4|tcnt1[12]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[12] .cin_used = "true";
defparam \c4|tcnt1[12] .lut_mask = "5a5f";
defparam \c4|tcnt1[12] .operation_mode = "arithmetic";
defparam \c4|tcnt1[12] .output_mode = "reg_only";
defparam \c4|tcnt1[12] .register_cascade_mode = "off";
defparam \c4|tcnt1[12] .sum_lutc_input = "cin";
defparam \c4|tcnt1[12] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[13] (
// Equation(s):
// \c4|tcnt1 [13] = DFFEAS(\c4|tcnt1 [13] $ ((((!\c4|tcnt1[12]~31 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[13]~33  = CARRY((\c4|tcnt1 [13] & ((!\c4|tcnt1[12]~31 ))))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[12]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [13]),
	.cout(\c4|tcnt1[13]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[13] .cin_used = "true";
defparam \c4|tcnt1[13] .lut_mask = "a50a";
defparam \c4|tcnt1[13] .operation_mode = "arithmetic";
defparam \c4|tcnt1[13] .output_mode = "reg_only";
defparam \c4|tcnt1[13] .register_cascade_mode = "off";
defparam \c4|tcnt1[13] .sum_lutc_input = "cin";
defparam \c4|tcnt1[13] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[14] (
// Equation(s):
// \c4|tcnt1 [14] = DFFEAS(\c4|tcnt1 [14] $ ((((\c4|tcnt1[13]~33 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[14]~35  = CARRY(((!\c4|tcnt1[13]~33 )) # (!\c4|tcnt1 [14]))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[13]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [14]),
	.cout(\c4|tcnt1[14]~35 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[14] .cin_used = "true";
defparam \c4|tcnt1[14] .lut_mask = "5a5f";
defparam \c4|tcnt1[14] .operation_mode = "arithmetic";
defparam \c4|tcnt1[14] .output_mode = "reg_only";
defparam \c4|tcnt1[14] .register_cascade_mode = "off";
defparam \c4|tcnt1[14] .sum_lutc_input = "cin";
defparam \c4|tcnt1[14] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[15] (
// Equation(s):
// \c4|tcnt1 [15] = DFFEAS(\c4|tcnt1 [15] $ ((((!\c4|tcnt1[14]~35 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[15]~37  = CARRY((\c4|tcnt1 [15] & ((!\c4|tcnt1[14]~35 ))))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[14]~35 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [15]),
	.cout(\c4|tcnt1[15]~37 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[15] .cin_used = "true";
defparam \c4|tcnt1[15] .lut_mask = "a50a";
defparam \c4|tcnt1[15] .operation_mode = "arithmetic";
defparam \c4|tcnt1[15] .output_mode = "reg_only";
defparam \c4|tcnt1[15] .register_cascade_mode = "off";
defparam \c4|tcnt1[15] .sum_lutc_input = "cin";
defparam \c4|tcnt1[15] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[16] (
// Equation(s):
// \c4|tcnt1 [16] = DFFEAS(\c4|tcnt1 [16] $ ((((\c4|tcnt1[15]~37 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[16]~1  = CARRY(((!\c4|tcnt1[15]~37 )) # (!\c4|tcnt1 [16]))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[15]~37 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [16]),
	.cout(\c4|tcnt1[16]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[16] .cin_used = "true";
defparam \c4|tcnt1[16] .lut_mask = "5a5f";
defparam \c4|tcnt1[16] .operation_mode = "arithmetic";
defparam \c4|tcnt1[16] .output_mode = "reg_only";
defparam \c4|tcnt1[16] .register_cascade_mode = "off";
defparam \c4|tcnt1[16] .sum_lutc_input = "cin";
defparam \c4|tcnt1[16] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[17] (
// Equation(s):
// \c4|tcnt1 [17] = DFFEAS(\c4|tcnt1 [17] $ ((((!\c4|tcnt1[16]~1 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[17]~3  = CARRY((\c4|tcnt1 [17] & ((!\c4|tcnt1[16]~1 ))))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [17]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[16]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [17]),
	.cout(\c4|tcnt1[17]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[17] .cin_used = "true";
defparam \c4|tcnt1[17] .lut_mask = "a50a";
defparam \c4|tcnt1[17] .operation_mode = "arithmetic";
defparam \c4|tcnt1[17] .output_mode = "reg_only";
defparam \c4|tcnt1[17] .register_cascade_mode = "off";
defparam \c4|tcnt1[17] .sum_lutc_input = "cin";
defparam \c4|tcnt1[17] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[18] (
// Equation(s):
// \c4|tcnt1 [18] = DFFEAS(\c4|tcnt1 [18] $ ((((\c4|tcnt1[17]~3 )))), \clk~combout , \direction4~combout , , , , , , )
// \c4|tcnt1[18]~5  = CARRY(((!\c4|tcnt1[17]~3 )) # (!\c4|tcnt1 [18]))

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[17]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [18]),
	.cout(\c4|tcnt1[18]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[18] .cin_used = "true";
defparam \c4|tcnt1[18] .lut_mask = "5a5f";
defparam \c4|tcnt1[18] .operation_mode = "arithmetic";
defparam \c4|tcnt1[18] .output_mode = "reg_only";
defparam \c4|tcnt1[18] .register_cascade_mode = "off";
defparam \c4|tcnt1[18] .sum_lutc_input = "cin";
defparam \c4|tcnt1[18] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|tcnt1[19] (
// Equation(s):
// \c4|tcnt1 [19] = DFFEAS(\c4|tcnt1 [19] $ ((((!\c4|tcnt1[18]~5 )))), \clk~combout , \direction4~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c4|tcnt1 [19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\c4|tcnt1[18]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|tcnt1 [19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|tcnt1[19] .cin_used = "true";
defparam \c4|tcnt1[19] .lut_mask = "a5a5";
defparam \c4|tcnt1[19] .operation_mode = "normal";
defparam \c4|tcnt1[19] .output_mode = "reg_only";
defparam \c4|tcnt1[19] .register_cascade_mode = "off";
defparam \c4|tcnt1[19] .sum_lutc_input = "cin";
defparam \c4|tcnt1[19] .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|Equal0~0 (
// Equation(s):
// \c4|Equal0~0_combout  = (!\c4|tcnt1 [16] & (!\c4|tcnt1 [17] & (!\c4|tcnt1 [18] & !\c4|tcnt1 [19])))

	.clk(gnd),
	.dataa(\c4|tcnt1 [16]),
	.datab(\c4|tcnt1 [17]),
	.datac(\c4|tcnt1 [18]),
	.datad(\c4|tcnt1 [19]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c4|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|Equal0~0 .lut_mask = "0001";
defparam \c4|Equal0~0 .operation_mode = "normal";
defparam \c4|Equal0~0 .output_mode = "comb_only";
defparam \c4|Equal0~0 .register_cascade_mode = "off";
defparam \c4|Equal0~0 .sum_lutc_input = "datac";
defparam \c4|Equal0~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|Equal0~1 (
// Equation(s):
// \c4|Equal0~1_combout  = (\c4|tcnt1 [0] & (!\c4|tcnt1 [1] & (!\c4|tcnt1 [2] & !\c4|tcnt1 [3])))

	.clk(gnd),
	.dataa(\c4|tcnt1 [0]),
	.datab(\c4|tcnt1 [1]),
	.datac(\c4|tcnt1 [2]),
	.datad(\c4|tcnt1 [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c4|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|Equal0~1 .lut_mask = "0002";
defparam \c4|Equal0~1 .operation_mode = "normal";
defparam \c4|Equal0~1 .output_mode = "comb_only";
defparam \c4|Equal0~1 .register_cascade_mode = "off";
defparam \c4|Equal0~1 .sum_lutc_input = "datac";
defparam \c4|Equal0~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|Equal0~2 (
// Equation(s):
// \c4|Equal0~2_combout  = (!\c4|tcnt1 [4] & (!\c4|tcnt1 [5] & (!\c4|tcnt1 [6] & !\c4|tcnt1 [7])))

	.clk(gnd),
	.dataa(\c4|tcnt1 [4]),
	.datab(\c4|tcnt1 [5]),
	.datac(\c4|tcnt1 [6]),
	.datad(\c4|tcnt1 [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c4|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|Equal0~2 .lut_mask = "0001";
defparam \c4|Equal0~2 .operation_mode = "normal";
defparam \c4|Equal0~2 .output_mode = "comb_only";
defparam \c4|Equal0~2 .register_cascade_mode = "off";
defparam \c4|Equal0~2 .sum_lutc_input = "datac";
defparam \c4|Equal0~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|Equal0~3 (
// Equation(s):
// \c4|Equal0~3_combout  = (!\c4|tcnt1 [8] & (!\c4|tcnt1 [9] & (!\c4|tcnt1 [10] & !\c4|tcnt1 [11])))

	.clk(gnd),
	.dataa(\c4|tcnt1 [8]),
	.datab(\c4|tcnt1 [9]),
	.datac(\c4|tcnt1 [10]),
	.datad(\c4|tcnt1 [11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c4|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|Equal0~3 .lut_mask = "0001";
defparam \c4|Equal0~3 .operation_mode = "normal";
defparam \c4|Equal0~3 .output_mode = "comb_only";
defparam \c4|Equal0~3 .register_cascade_mode = "off";
defparam \c4|Equal0~3 .sum_lutc_input = "datac";
defparam \c4|Equal0~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|Equal0~4 (
// Equation(s):
// \c4|Equal0~4_combout  = (!\c4|tcnt1 [12] & (!\c4|tcnt1 [13] & (!\c4|tcnt1 [14] & !\c4|tcnt1 [15])))

	.clk(gnd),
	.dataa(\c4|tcnt1 [12]),
	.datab(\c4|tcnt1 [13]),
	.datac(\c4|tcnt1 [14]),
	.datad(\c4|tcnt1 [15]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c4|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|Equal0~4 .lut_mask = "0001";
defparam \c4|Equal0~4 .operation_mode = "normal";
defparam \c4|Equal0~4 .output_mode = "comb_only";
defparam \c4|Equal0~4 .register_cascade_mode = "off";
defparam \c4|Equal0~4 .sum_lutc_input = "datac";
defparam \c4|Equal0~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|Equal0~5 (
// Equation(s):
// \c4|Equal0~5_combout  = (\c4|Equal0~1_combout  & (\c4|Equal0~2_combout  & (\c4|Equal0~3_combout  & \c4|Equal0~4_combout )))

	.clk(gnd),
	.dataa(\c4|Equal0~1_combout ),
	.datab(\c4|Equal0~2_combout ),
	.datac(\c4|Equal0~3_combout ),
	.datad(\c4|Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\c4|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|Equal0~5 .lut_mask = "8000";
defparam \c4|Equal0~5 .operation_mode = "normal";
defparam \c4|Equal0~5 .output_mode = "comb_only";
defparam \c4|Equal0~5 .register_cascade_mode = "off";
defparam \c4|Equal0~5 .sum_lutc_input = "datac";
defparam \c4|Equal0~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \c4|key_out (
// Equation(s):
// \c4|key_out~regout  = DFFEAS((\c4|key_out~regout ) # ((\c4|Equal0~0_combout  & (\c4|Equal0~5_combout ))), \clk~combout , \direction4~combout , , , , , , )

	.clk(\clk~combout ),
	.dataa(\c4|key_out~regout ),
	.datab(\c4|Equal0~0_combout ),
	.datac(\c4|Equal0~5_combout ),
	.datad(vcc),
	.aclr(!\direction4~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\c4|key_out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c4|key_out .lut_mask = "eaea";
defparam \c4|key_out .operation_mode = "normal";
defparam \c4|key_out .output_mode = "reg_only";
defparam \c4|key_out .register_cascade_mode = "off";
defparam \c4|key_out .sum_lutc_input = "datac";
defparam \c4|key_out .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt~19 (
// Equation(s):
// \step_cnt~19_combout  = ((\location_row_num~13_combout  & (\Mux27~1_combout )) # (!\location_row_num~13_combout  & ((\Mux27~3_combout )))) # (!\c4|key_out~regout )

	.clk(gnd),
	.dataa(\Mux27~1_combout ),
	.datab(\Mux27~3_combout ),
	.datac(\location_row_num~13_combout ),
	.datad(\c4|key_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt~19 .lut_mask = "acff";
defparam \step_cnt~19 .operation_mode = "normal";
defparam \step_cnt~19 .output_mode = "comb_only";
defparam \step_cnt~19 .register_cascade_mode = "off";
defparam \step_cnt~19 .sum_lutc_input = "datac";
defparam \step_cnt~19 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt~20 (
// Equation(s):
// \step_cnt~20_combout  = (\step_cnt~19_combout ) # ((\location_col_num~3_combout  & (\location_col_num~2_combout  & !\location_col_num~4_combout )))

	.clk(gnd),
	.dataa(\step_cnt~19_combout ),
	.datab(\location_col_num~3_combout ),
	.datac(\location_col_num~2_combout ),
	.datad(\location_col_num~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt~20 .lut_mask = "aaea";
defparam \step_cnt~20 .operation_mode = "normal";
defparam \step_cnt~20 .output_mode = "comb_only";
defparam \step_cnt~20 .register_cascade_mode = "off";
defparam \step_cnt~20 .sum_lutc_input = "datac";
defparam \step_cnt~20 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_col_num[1] (
// Equation(s):
// location_col_num[1] = DFFEAS(((\step_cnt~20_combout  & ((\location_col_num~2_combout ))) # (!\step_cnt~20_combout  & (!\Add4~4_combout ))), \clk~combout , VCC, , , \location_col_num~0_combout , , , !\always3~2_combout )

	.clk(\clk~combout ),
	.dataa(\Add4~4_combout ),
	.datab(\location_col_num~2_combout ),
	.datac(\location_col_num~0_combout ),
	.datad(\step_cnt~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\always3~2_combout ),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(location_col_num[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_col_num[1] .lut_mask = "cc55";
defparam \location_col_num[1] .operation_mode = "normal";
defparam \location_col_num[1] .output_mode = "reg_only";
defparam \location_col_num[1] .register_cascade_mode = "off";
defparam \location_col_num[1] .sum_lutc_input = "datac";
defparam \location_col_num[1] .synch_mode = "on";
// synopsys translate_on

maxii_lcell \location_col_num~0 (
// Equation(s):
// \location_col_num~0_combout  = ((\a1|key_out~regout  & ((!terminal_point_col[0]))) # (!\a1|key_out~regout  & (location_col_num[1])))

	.clk(gnd),
	.dataa(location_col_num[1]),
	.datab(vcc),
	.datac(\a1|key_out~regout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_col_num~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_col_num~0 .lut_mask = "0afa";
defparam \location_col_num~0 .operation_mode = "normal";
defparam \location_col_num~0 .output_mode = "comb_only";
defparam \location_col_num~0 .register_cascade_mode = "off";
defparam \location_col_num~0 .sum_lutc_input = "datac";
defparam \location_col_num~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Add4~5 (
// Equation(s):
// \Add4~5_combout  = \location_col_num~3_combout  $ (((\location_col_num~0_combout  & (\location_col_num[0]~COMBOUT  & \step_cnt~18_combout )) # (!\location_col_num~0_combout  & (!\location_col_num[0]~COMBOUT  & !\step_cnt~18_combout ))))

	.clk(gnd),
	.dataa(\location_col_num~0_combout ),
	.datab(\location_col_num[0]~COMBOUT ),
	.datac(\step_cnt~18_combout ),
	.datad(\location_col_num~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add4~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add4~5 .lut_mask = "7e81";
defparam \Add4~5 .operation_mode = "normal";
defparam \Add4~5 .output_mode = "comb_only";
defparam \Add4~5 .register_cascade_mode = "off";
defparam \Add4~5 .sum_lutc_input = "datac";
defparam \Add4~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_col_num[2] (
// Equation(s):
// location_col_num[2] = DFFEAS(((\step_cnt~20_combout  & ((\location_col_num~3_combout ))) # (!\step_cnt~20_combout  & (\Add4~5_combout ))), \clk~combout , VCC, , , \location_col_num~1_combout , , , !\always3~2_combout )

	.clk(\clk~combout ),
	.dataa(\Add4~5_combout ),
	.datab(\location_col_num~3_combout ),
	.datac(\location_col_num~1_combout ),
	.datad(\step_cnt~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\always3~2_combout ),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(location_col_num[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_col_num[2] .lut_mask = "ccaa";
defparam \location_col_num[2] .operation_mode = "normal";
defparam \location_col_num[2] .output_mode = "reg_only";
defparam \location_col_num[2] .register_cascade_mode = "off";
defparam \location_col_num[2] .sum_lutc_input = "datac";
defparam \location_col_num[2] .synch_mode = "on";
// synopsys translate_on

maxii_lcell \location_col_num~1 (
// Equation(s):
// \location_col_num~1_combout  = ((\a1|key_out~regout  & ((!terminal_point_col[0]))) # (!\a1|key_out~regout  & (location_col_num[2])))

	.clk(gnd),
	.dataa(location_col_num[2]),
	.datab(vcc),
	.datac(\a1|key_out~regout ),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_col_num~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_col_num~1 .lut_mask = "0afa";
defparam \location_col_num~1 .operation_mode = "normal";
defparam \location_col_num~1 .output_mode = "comb_only";
defparam \location_col_num~1 .register_cascade_mode = "off";
defparam \location_col_num~1 .sum_lutc_input = "datac";
defparam \location_col_num~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_col_num~3 (
// Equation(s):
// \location_col_num~3_combout  = \location_col_num~1_combout  $ (((!\Add3~2_combout  & (!\step_cnt~18_combout ))))

	.clk(gnd),
	.dataa(\location_col_num~1_combout ),
	.datab(\Add3~2_combout ),
	.datac(\step_cnt~18_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_col_num~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_col_num~3 .lut_mask = "a9a9";
defparam \location_col_num~3 .operation_mode = "normal";
defparam \location_col_num~3 .output_mode = "comb_only";
defparam \location_col_num~3 .register_cascade_mode = "off";
defparam \location_col_num~3 .sum_lutc_input = "datac";
defparam \location_col_num~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \location_col_num~5 (
// Equation(s):
// \location_col_num~5_combout  = (\location_col_num~4_combout  & (((!\step_cnt~19_combout )))) # (!\location_col_num~4_combout  & ((\step_cnt~19_combout ) # ((\location_col_num~3_combout  & \location_col_num~2_combout ))))

	.clk(gnd),
	.dataa(\location_col_num~3_combout ),
	.datab(\location_col_num~2_combout ),
	.datac(\location_col_num~4_combout ),
	.datad(\step_cnt~19_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\location_col_num~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \location_col_num~5 .lut_mask = "0ff8";
defparam \location_col_num~5 .operation_mode = "normal";
defparam \location_col_num~5 .output_mode = "comb_only";
defparam \location_col_num~5 .register_cascade_mode = "off";
defparam \location_col_num~5 .sum_lutc_input = "datac";
defparam \location_col_num~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \always4~0 (
// Equation(s):
// \always4~0_combout  = (location_col_num[0] & (location_col_num[1] & (location_row_num[0] & terminal_point_col[0]))) # (!location_col_num[0] & (!location_col_num[1] & (!location_row_num[0] & !terminal_point_col[0])))

	.clk(gnd),
	.dataa(location_col_num[0]),
	.datab(location_col_num[1]),
	.datac(location_row_num[0]),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always4~0 .lut_mask = "8001";
defparam \always4~0 .operation_mode = "normal";
defparam \always4~0 .output_mode = "comb_only";
defparam \always4~0 .register_cascade_mode = "off";
defparam \always4~0 .sum_lutc_input = "datac";
defparam \always4~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Equal3~0 (
// Equation(s):
// \Equal3~0_combout  = ((location_col_num[2] $ (terminal_point_col[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(location_col_num[2]),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal3~0 .lut_mask = "0ff0";
defparam \Equal3~0 .operation_mode = "normal";
defparam \Equal3~0 .output_mode = "comb_only";
defparam \Equal3~0 .register_cascade_mode = "off";
defparam \Equal3~0 .sum_lutc_input = "datac";
defparam \Equal3~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \suc~reg0 (
// Equation(s):
// \suc~reg0_regout  = DFFEAS((\always4~0_combout  & (!location_row_num[2] & (!location_row_num[1] & !\Equal3~0_combout ))), \clk~combout , VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\always4~0_combout ),
	.datab(location_row_num[2]),
	.datac(location_row_num[1]),
	.datad(\Equal3~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\suc~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \suc~reg0 .lut_mask = "0002";
defparam \suc~reg0 .operation_mode = "normal";
defparam \suc~reg0 .output_mode = "reg_only";
defparam \suc~reg0 .register_cascade_mode = "off";
defparam \suc~reg0 .sum_lutc_input = "datac";
defparam \suc~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~0 (
// Equation(s):
// \r_col~0_combout  = (\start_con~regout  & (\Equal7~1_combout  & ((!\suc~reg0_regout ))))

	.clk(gnd),
	.dataa(\start_con~regout ),
	.datab(\Equal7~1_combout ),
	.datac(vcc),
	.datad(\suc~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~0 .lut_mask = "0088";
defparam \r_col~0 .operation_mode = "normal";
defparam \r_col~0 .output_mode = "comb_only";
defparam \r_col~0 .register_cascade_mode = "off";
defparam \r_col~0 .sum_lutc_input = "datac";
defparam \r_col~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[6]~0 (
// Equation(s):
// \g_col[6]~0_combout  = (row_num[0] & (location_row_num[0] & (row_num[1] $ (!location_row_num[1])))) # (!row_num[0] & (!location_row_num[0] & (row_num[1] $ (!location_row_num[1]))))

	.clk(gnd),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(location_row_num[1]),
	.datad(location_row_num[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col[6]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[6]~0 .lut_mask = "8241";
defparam \g_col[6]~0 .operation_mode = "normal";
defparam \g_col[6]~0 .output_mode = "comb_only";
defparam \g_col[6]~0 .register_cascade_mode = "off";
defparam \g_col[6]~0 .sum_lutc_input = "datac";
defparam \g_col[6]~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[6]~1 (
// Equation(s):
// \g_col[6]~1_combout  = (\r_col~0_combout  & (\g_col[6]~0_combout  & (row_num[2] $ (!location_row_num[2]))))

	.clk(gnd),
	.dataa(\r_col~0_combout ),
	.datab(\g_col[6]~0_combout ),
	.datac(row_num[2]),
	.datad(location_row_num[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col[6]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[6]~1 .lut_mask = "8008";
defparam \g_col[6]~1 .operation_mode = "normal";
defparam \g_col[6]~1 .output_mode = "comb_only";
defparam \g_col[6]~1 .register_cascade_mode = "off";
defparam \g_col[6]~1 .sum_lutc_input = "datac";
defparam \g_col[6]~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~1 (
// Equation(s):
// \r_col~1_combout  = (\Equal7~1_combout ) # (((!\start_con~regout ) # (!\suc~reg0_regout )))

	.clk(gnd),
	.dataa(\Equal7~1_combout ),
	.datab(vcc),
	.datac(\suc~reg0_regout ),
	.datad(\start_con~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~1 .lut_mask = "afff";
defparam \r_col~1 .operation_mode = "normal";
defparam \r_col~1 .output_mode = "comb_only";
defparam \r_col~1 .register_cascade_mode = "off";
defparam \r_col~1 .sum_lutc_input = "datac";
defparam \r_col~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[0]~reg0 (
// Equation(s):
// \g_col[0]~reg0_regout  = DFFEAS((\g_col[6]~1_combout  & (!location_col_num[0] & (!location_col_num[1] & !location_col_num[2]))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\g_col[6]~1_combout ),
	.datab(location_col_num[0]),
	.datac(location_col_num[1]),
	.datad(location_col_num[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\g_col[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[0]~reg0 .lut_mask = "0002";
defparam \g_col[0]~reg0 .operation_mode = "normal";
defparam \g_col[0]~reg0 .output_mode = "reg_only";
defparam \g_col[0]~reg0 .register_cascade_mode = "off";
defparam \g_col[0]~reg0 .sum_lutc_input = "datac";
defparam \g_col[0]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col~3 (
// Equation(s):
// \g_col~3_combout  = ((row_num[2] & ((!row_num[1]))) # (!row_num[2] & (!row_num[0] & row_num[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(row_num[2]),
	.datac(row_num[0]),
	.datad(row_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col~3 .lut_mask = "03cc";
defparam \g_col~3 .operation_mode = "normal";
defparam \g_col~3 .output_mode = "comb_only";
defparam \g_col~3 .register_cascade_mode = "off";
defparam \g_col~3 .sum_lutc_input = "datac";
defparam \g_col~3 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col~4 (
// Equation(s):
// \g_col~4_combout  = (\suc~reg0_regout  & (\start_con~regout  & (\Equal7~1_combout  & \g_col~3_combout )))

	.clk(gnd),
	.dataa(\suc~reg0_regout ),
	.datab(\start_con~regout ),
	.datac(\Equal7~1_combout ),
	.datad(\g_col~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col~4 .lut_mask = "8000";
defparam \g_col~4 .operation_mode = "normal";
defparam \g_col~4 .output_mode = "comb_only";
defparam \g_col~4 .register_cascade_mode = "off";
defparam \g_col~4 .sum_lutc_input = "datac";
defparam \g_col~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col~5 (
// Equation(s):
// \g_col~5_combout  = (\g_col[6]~1_combout  & (((!location_col_num[2]))))

	.clk(gnd),
	.dataa(\g_col[6]~1_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(location_col_num[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col~5 .lut_mask = "00aa";
defparam \g_col~5 .operation_mode = "normal";
defparam \g_col~5 .output_mode = "comb_only";
defparam \g_col~5 .register_cascade_mode = "off";
defparam \g_col~5 .sum_lutc_input = "datac";
defparam \g_col~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[1]~reg0 (
// Equation(s):
// \g_col[1]~reg0_regout  = DFFEAS((\g_col~4_combout ) # ((location_col_num[0] & (\g_col~5_combout  & !location_col_num[1]))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\g_col~4_combout ),
	.datab(location_col_num[0]),
	.datac(\g_col~5_combout ),
	.datad(location_col_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\g_col[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[1]~reg0 .lut_mask = "aaea";
defparam \g_col[1]~reg0 .operation_mode = "normal";
defparam \g_col[1]~reg0 .output_mode = "reg_only";
defparam \g_col[1]~reg0 .register_cascade_mode = "off";
defparam \g_col[1]~reg0 .sum_lutc_input = "datac";
defparam \g_col[1]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col~7 (
// Equation(s):
// \g_col~7_combout  = ((!row_num[1] & ((row_num[0]) # (row_num[2]))))

	.clk(gnd),
	.dataa(row_num[0]),
	.datab(row_num[2]),
	.datac(vcc),
	.datad(row_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col~7 .lut_mask = "00ee";
defparam \g_col~7 .operation_mode = "normal";
defparam \g_col~7 .output_mode = "comb_only";
defparam \g_col~7 .register_cascade_mode = "off";
defparam \g_col~7 .sum_lutc_input = "datac";
defparam \g_col~7 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col~8 (
// Equation(s):
// \g_col~8_combout  = (\suc~reg0_regout  & (\start_con~regout  & (\Equal7~1_combout  & \g_col~7_combout )))

	.clk(gnd),
	.dataa(\suc~reg0_regout ),
	.datab(\start_con~regout ),
	.datac(\Equal7~1_combout ),
	.datad(\g_col~7_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col~8 .lut_mask = "8000";
defparam \g_col~8 .operation_mode = "normal";
defparam \g_col~8 .output_mode = "comb_only";
defparam \g_col~8 .register_cascade_mode = "off";
defparam \g_col~8 .sum_lutc_input = "datac";
defparam \g_col~8 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[2]~reg0 (
// Equation(s):
// \g_col[2]~reg0_regout  = DFFEAS((\g_col~8_combout ) # ((location_col_num[1] & (\g_col~5_combout  & !location_col_num[0]))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\g_col~8_combout ),
	.datab(location_col_num[1]),
	.datac(\g_col~5_combout ),
	.datad(location_col_num[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\g_col[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[2]~reg0 .lut_mask = "aaea";
defparam \g_col[2]~reg0 .operation_mode = "normal";
defparam \g_col[2]~reg0 .output_mode = "reg_only";
defparam \g_col[2]~reg0 .register_cascade_mode = "off";
defparam \g_col[2]~reg0 .sum_lutc_input = "datac";
defparam \g_col[2]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col~10 (
// Equation(s):
// \g_col~10_combout  = (row_num[0] & (((!row_num[1] & !row_num[2]))))

	.clk(gnd),
	.dataa(row_num[0]),
	.datab(vcc),
	.datac(row_num[1]),
	.datad(row_num[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col~10 .lut_mask = "000a";
defparam \g_col~10 .operation_mode = "normal";
defparam \g_col~10 .output_mode = "comb_only";
defparam \g_col~10 .register_cascade_mode = "off";
defparam \g_col~10 .sum_lutc_input = "datac";
defparam \g_col~10 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col~11 (
// Equation(s):
// \g_col~11_combout  = (\suc~reg0_regout  & (\start_con~regout  & (\Equal7~1_combout  & \g_col~10_combout )))

	.clk(gnd),
	.dataa(\suc~reg0_regout ),
	.datab(\start_con~regout ),
	.datac(\Equal7~1_combout ),
	.datad(\g_col~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col~11 .lut_mask = "8000";
defparam \g_col~11 .operation_mode = "normal";
defparam \g_col~11 .output_mode = "comb_only";
defparam \g_col~11 .register_cascade_mode = "off";
defparam \g_col~11 .sum_lutc_input = "datac";
defparam \g_col~11 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[3]~reg0 (
// Equation(s):
// \g_col[3]~reg0_regout  = DFFEAS((\g_col~11_combout ) # ((location_col_num[0] & (location_col_num[1] & \g_col~5_combout ))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\g_col~11_combout ),
	.datab(location_col_num[0]),
	.datac(location_col_num[1]),
	.datad(\g_col~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\g_col[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[3]~reg0 .lut_mask = "eaaa";
defparam \g_col[3]~reg0 .operation_mode = "normal";
defparam \g_col[3]~reg0 .output_mode = "reg_only";
defparam \g_col[3]~reg0 .register_cascade_mode = "off";
defparam \g_col[3]~reg0 .sum_lutc_input = "datac";
defparam \g_col[3]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col~13 (
// Equation(s):
// \g_col~13_combout  = (location_col_num[2] & (\g_col[6]~1_combout ))

	.clk(gnd),
	.dataa(location_col_num[2]),
	.datab(\g_col[6]~1_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\g_col~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col~13 .lut_mask = "8888";
defparam \g_col~13 .operation_mode = "normal";
defparam \g_col~13 .output_mode = "comb_only";
defparam \g_col~13 .register_cascade_mode = "off";
defparam \g_col~13 .sum_lutc_input = "datac";
defparam \g_col~13 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[4]~reg0 (
// Equation(s):
// \g_col[4]~reg0_regout  = DFFEAS((\g_col~11_combout ) # ((\g_col~13_combout  & (!location_col_num[0] & !location_col_num[1]))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\g_col~11_combout ),
	.datab(\g_col~13_combout ),
	.datac(location_col_num[0]),
	.datad(location_col_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\g_col[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[4]~reg0 .lut_mask = "aaae";
defparam \g_col[4]~reg0 .operation_mode = "normal";
defparam \g_col[4]~reg0 .output_mode = "reg_only";
defparam \g_col[4]~reg0 .register_cascade_mode = "off";
defparam \g_col[4]~reg0 .sum_lutc_input = "datac";
defparam \g_col[4]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[5]~reg0 (
// Equation(s):
// \g_col[5]~reg0_regout  = DFFEAS((\g_col~8_combout ) # ((location_col_num[0] & (\g_col~13_combout  & !location_col_num[1]))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\g_col~8_combout ),
	.datab(location_col_num[0]),
	.datac(\g_col~13_combout ),
	.datad(location_col_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\g_col[5]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[5]~reg0 .lut_mask = "aaea";
defparam \g_col[5]~reg0 .operation_mode = "normal";
defparam \g_col[5]~reg0 .output_mode = "reg_only";
defparam \g_col[5]~reg0 .register_cascade_mode = "off";
defparam \g_col[5]~reg0 .sum_lutc_input = "datac";
defparam \g_col[5]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[6]~reg0 (
// Equation(s):
// \g_col[6]~reg0_regout  = DFFEAS((\g_col~4_combout ) # ((location_col_num[1] & (\g_col~13_combout  & !location_col_num[0]))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\g_col~4_combout ),
	.datab(location_col_num[1]),
	.datac(\g_col~13_combout ),
	.datad(location_col_num[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\g_col[6]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[6]~reg0 .lut_mask = "aaea";
defparam \g_col[6]~reg0 .operation_mode = "normal";
defparam \g_col[6]~reg0 .output_mode = "reg_only";
defparam \g_col[6]~reg0 .register_cascade_mode = "off";
defparam \g_col[6]~reg0 .sum_lutc_input = "datac";
defparam \g_col[6]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \g_col[7]~reg0 (
// Equation(s):
// \g_col[7]~reg0_regout  = DFFEAS((location_col_num[0] & (location_col_num[1] & (location_col_num[2] & \g_col[6]~1_combout ))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(location_col_num[0]),
	.datab(location_col_num[1]),
	.datac(location_col_num[2]),
	.datad(\g_col[6]~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\g_col[7]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \g_col[7]~reg0 .lut_mask = "8000";
defparam \g_col[7]~reg0 .operation_mode = "normal";
defparam \g_col[7]~reg0 .output_mode = "reg_only";
defparam \g_col[7]~reg0 .register_cascade_mode = "off";
defparam \g_col[7]~reg0 .sum_lutc_input = "datac";
defparam \g_col[7]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~2 (
// Equation(s):
// \r_col~2_combout  = (row_num[1]) # ((row_num[2]) # (row_num[0] $ (terminal_point_col[0])))

	.clk(gnd),
	.dataa(row_num[1]),
	.datab(row_num[2]),
	.datac(row_num[0]),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~2 .lut_mask = "effe";
defparam \r_col~2 .operation_mode = "normal";
defparam \r_col~2 .output_mode = "comb_only";
defparam \r_col~2 .register_cascade_mode = "off";
defparam \r_col~2 .sum_lutc_input = "datac";
defparam \r_col~2 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col[0]~reg0 (
// Equation(s):
// \r_col[0]~reg0_regout  = DFFEAS((\start_con~regout  & (\Equal7~1_combout  & (\r_col~2_combout  & !\suc~reg0_regout ))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\start_con~regout ),
	.datab(\Equal7~1_combout ),
	.datac(\r_col~2_combout ),
	.datad(\suc~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\r_col[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col[0]~reg0 .lut_mask = "0080";
defparam \r_col[0]~reg0 .operation_mode = "normal";
defparam \r_col[0]~reg0 .output_mode = "reg_only";
defparam \r_col[0]~reg0 .register_cascade_mode = "off";
defparam \r_col[0]~reg0 .sum_lutc_input = "datac";
defparam \r_col[0]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~4 (
// Equation(s):
// \r_col~4_combout  = (row_num[0] & ((row_num[1] & (row_num[2])) # (!row_num[1] & (!row_num[2] & !terminal_point_col[0])))) # (!row_num[0] & (!row_num[2] & (row_num[1] $ (terminal_point_col[0]))))

	.clk(gnd),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(row_num[2]),
	.datad(terminal_point_col[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~4 .lut_mask = "8186";
defparam \r_col~4 .operation_mode = "normal";
defparam \r_col~4 .output_mode = "comb_only";
defparam \r_col~4 .register_cascade_mode = "off";
defparam \r_col~4 .sum_lutc_input = "datac";
defparam \r_col~4 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~5 (
// Equation(s):
// \r_col~5_combout  = (!\suc~reg0_regout  & ((\Equal7~1_combout  & (\r_col~4_combout )) # (!\Equal7~1_combout  & ((\g_col~7_combout )))))

	.clk(gnd),
	.dataa(\r_col~4_combout ),
	.datab(\g_col~7_combout ),
	.datac(\Equal7~1_combout ),
	.datad(\suc~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~5 .lut_mask = "00ac";
defparam \r_col~5 .operation_mode = "normal";
defparam \r_col~5 .output_mode = "comb_only";
defparam \r_col~5 .register_cascade_mode = "off";
defparam \r_col~5 .sum_lutc_input = "datac";
defparam \r_col~5 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~6 (
// Equation(s):
// \r_col~6_combout  = (\suc~reg0_regout  & (((!\Equal7~1_combout ))))

	.clk(gnd),
	.dataa(\suc~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Equal7~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~6 .lut_mask = "00aa";
defparam \r_col~6 .operation_mode = "normal";
defparam \r_col~6 .output_mode = "comb_only";
defparam \r_col~6 .register_cascade_mode = "off";
defparam \r_col~6 .sum_lutc_input = "datac";
defparam \r_col~6 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col[1]~reg0 (
// Equation(s):
// \r_col[1]~reg0_regout  = DFFEAS((\start_con~regout  & ((\r_col~5_combout ) # ((\r_col[1]~reg0_regout  & \r_col~6_combout )))), \clk_1kHz~regout , VCC, , , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\start_con~regout ),
	.datab(\r_col~5_combout ),
	.datac(\r_col[1]~reg0_regout ),
	.datad(\r_col~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\r_col[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col[1]~reg0 .lut_mask = "a888";
defparam \r_col[1]~reg0 .operation_mode = "normal";
defparam \r_col[1]~reg0 .output_mode = "reg_only";
defparam \r_col[1]~reg0 .register_cascade_mode = "off";
defparam \r_col[1]~reg0 .sum_lutc_input = "datac";
defparam \r_col[1]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~8 (
// Equation(s):
// \r_col~8_combout  = (row_num[2] & ((row_num[0]) # ((!row_num[1])))) # (!row_num[2] & ((terminal_point_col[0]) # ((!row_num[0] & row_num[1]))))

	.clk(gnd),
	.dataa(row_num[0]),
	.datab(terminal_point_col[0]),
	.datac(row_num[2]),
	.datad(row_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~8 .lut_mask = "adfc";
defparam \r_col~8 .operation_mode = "normal";
defparam \r_col~8 .output_mode = "comb_only";
defparam \r_col~8 .register_cascade_mode = "off";
defparam \r_col~8 .sum_lutc_input = "datac";
defparam \r_col~8 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~9 (
// Equation(s):
// \r_col~9_combout  = (!\suc~reg0_regout  & ((\Equal7~1_combout  & (\r_col~8_combout )) # (!\Equal7~1_combout  & ((\g_col~3_combout )))))

	.clk(gnd),
	.dataa(\r_col~8_combout ),
	.datab(\g_col~3_combout ),
	.datac(\Equal7~1_combout ),
	.datad(\suc~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~9 .lut_mask = "00ac";
defparam \r_col~9 .operation_mode = "normal";
defparam \r_col~9 .output_mode = "comb_only";
defparam \r_col~9 .register_cascade_mode = "off";
defparam \r_col~9 .sum_lutc_input = "datac";
defparam \r_col~9 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col[2]~reg0 (
// Equation(s):
// \r_col[2]~reg0_regout  = DFFEAS((\start_con~regout  & ((\r_col~9_combout ) # ((\r_col[2]~reg0_regout  & \r_col~6_combout )))), \clk_1kHz~regout , VCC, , , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\start_con~regout ),
	.datab(\r_col~9_combout ),
	.datac(\r_col[2]~reg0_regout ),
	.datad(\r_col~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\r_col[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col[2]~reg0 .lut_mask = "a888";
defparam \r_col[2]~reg0 .operation_mode = "normal";
defparam \r_col[2]~reg0 .output_mode = "reg_only";
defparam \r_col[2]~reg0 .register_cascade_mode = "off";
defparam \r_col[2]~reg0 .sum_lutc_input = "datac";
defparam \r_col[2]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~11 (
// Equation(s):
// \r_col~11_combout  = (row_num[1] & (((!row_num[0] & !row_num[2]))))

	.clk(gnd),
	.dataa(row_num[1]),
	.datab(vcc),
	.datac(row_num[0]),
	.datad(row_num[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~11 .lut_mask = "000a";
defparam \r_col~11 .operation_mode = "normal";
defparam \r_col~11 .output_mode = "comb_only";
defparam \r_col~11 .register_cascade_mode = "off";
defparam \r_col~11 .sum_lutc_input = "datac";
defparam \r_col~11 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~12 (
// Equation(s):
// \r_col~12_combout  = (!\Equal7~1_combout  & ((\suc~reg0_regout  & (\r_col[3]~reg0_regout )) # (!\suc~reg0_regout  & ((\r_col~11_combout )))))

	.clk(gnd),
	.dataa(\r_col[3]~reg0_regout ),
	.datab(\r_col~11_combout ),
	.datac(\suc~reg0_regout ),
	.datad(\Equal7~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~12 .lut_mask = "00ac";
defparam \r_col~12 .operation_mode = "normal";
defparam \r_col~12 .output_mode = "comb_only";
defparam \r_col~12 .register_cascade_mode = "off";
defparam \r_col~12 .sum_lutc_input = "datac";
defparam \r_col~12 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~13 (
// Equation(s):
// \r_col~13_combout  = (\Equal7~1_combout  & (((!\suc~reg0_regout ))))

	.clk(gnd),
	.dataa(\Equal7~1_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\suc~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~13 .lut_mask = "00aa";
defparam \r_col~13 .operation_mode = "normal";
defparam \r_col~13 .output_mode = "comb_only";
defparam \r_col~13 .register_cascade_mode = "off";
defparam \r_col~13 .sum_lutc_input = "datac";
defparam \r_col~13 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux40~0 (
// Equation(s):
// \Mux40~0_combout  = (row_num[2] & ((row_num[0]) # ((!terminal_point_col[0] & !row_num[1])))) # (!row_num[2] & ((terminal_point_col[0] & ((!row_num[1]))) # (!terminal_point_col[0] & (!row_num[0]))))

	.clk(gnd),
	.dataa(row_num[0]),
	.datab(row_num[2]),
	.datac(terminal_point_col[0]),
	.datad(row_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux40~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux40~0 .lut_mask = "89bd";
defparam \Mux40~0 .operation_mode = "normal";
defparam \Mux40~0 .output_mode = "comb_only";
defparam \Mux40~0 .register_cascade_mode = "off";
defparam \Mux40~0 .sum_lutc_input = "datac";
defparam \Mux40~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col[3]~reg0 (
// Equation(s):
// \r_col[3]~reg0_regout  = DFFEAS((\start_con~regout  & ((\r_col~12_combout ) # ((\r_col~13_combout  & \Mux40~0_combout )))), \clk_1kHz~regout , VCC, , , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\start_con~regout ),
	.datab(\r_col~12_combout ),
	.datac(\r_col~13_combout ),
	.datad(\Mux40~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\r_col[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col[3]~reg0 .lut_mask = "a888";
defparam \r_col[3]~reg0 .operation_mode = "normal";
defparam \r_col[3]~reg0 .output_mode = "reg_only";
defparam \r_col[3]~reg0 .register_cascade_mode = "off";
defparam \r_col[3]~reg0 .sum_lutc_input = "datac";
defparam \r_col[3]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~15 (
// Equation(s):
// \r_col~15_combout  = (!\Equal7~1_combout  & ((\suc~reg0_regout  & (\r_col[4]~reg0_regout )) # (!\suc~reg0_regout  & ((\r_col~11_combout )))))

	.clk(gnd),
	.dataa(\r_col[4]~reg0_regout ),
	.datab(\r_col~11_combout ),
	.datac(\suc~reg0_regout ),
	.datad(\Equal7~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~15 .lut_mask = "00ac";
defparam \r_col~15 .operation_mode = "normal";
defparam \r_col~15 .output_mode = "comb_only";
defparam \r_col~15 .register_cascade_mode = "off";
defparam \r_col~15 .sum_lutc_input = "datac";
defparam \r_col~15 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux39~0 (
// Equation(s):
// \Mux39~0_combout  = (terminal_point_col[0] & ((row_num[0]) # ((!row_num[1])))) # (!terminal_point_col[0] & (row_num[0] $ ((!row_num[2]))))

	.clk(gnd),
	.dataa(row_num[0]),
	.datab(terminal_point_col[0]),
	.datac(row_num[2]),
	.datad(row_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux39~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux39~0 .lut_mask = "a9ed";
defparam \Mux39~0 .operation_mode = "normal";
defparam \Mux39~0 .output_mode = "comb_only";
defparam \Mux39~0 .register_cascade_mode = "off";
defparam \Mux39~0 .sum_lutc_input = "datac";
defparam \Mux39~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col[4]~reg0 (
// Equation(s):
// \r_col[4]~reg0_regout  = DFFEAS((\start_con~regout  & ((\r_col~15_combout ) # ((\r_col~13_combout  & \Mux39~0_combout )))), \clk_1kHz~regout , VCC, , , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\start_con~regout ),
	.datab(\r_col~15_combout ),
	.datac(\r_col~13_combout ),
	.datad(\Mux39~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\r_col[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col[4]~reg0 .lut_mask = "a888";
defparam \r_col[4]~reg0 .operation_mode = "normal";
defparam \r_col[4]~reg0 .output_mode = "reg_only";
defparam \r_col[4]~reg0 .register_cascade_mode = "off";
defparam \r_col[4]~reg0 .sum_lutc_input = "datac";
defparam \r_col[4]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux38~0 (
// Equation(s):
// \Mux38~0_combout  = (row_num[2] & (row_num[0] & ((row_num[1]) # (!terminal_point_col[0])))) # (!row_num[2] & ((row_num[1] & ((!terminal_point_col[0]))) # (!row_num[1] & (!row_num[0]))))

	.clk(gnd),
	.dataa(row_num[0]),
	.datab(row_num[2]),
	.datac(terminal_point_col[0]),
	.datad(row_num[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux38~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux38~0 .lut_mask = "8b19";
defparam \Mux38~0 .operation_mode = "normal";
defparam \Mux38~0 .output_mode = "comb_only";
defparam \Mux38~0 .register_cascade_mode = "off";
defparam \Mux38~0 .sum_lutc_input = "datac";
defparam \Mux38~0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~17 (
// Equation(s):
// \r_col~17_combout  = (!\suc~reg0_regout  & ((\Equal7~1_combout  & (\Mux38~0_combout )) # (!\Equal7~1_combout  & ((\g_col~3_combout )))))

	.clk(gnd),
	.dataa(\Mux38~0_combout ),
	.datab(\g_col~3_combout ),
	.datac(\Equal7~1_combout ),
	.datad(\suc~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~17 .lut_mask = "00ac";
defparam \r_col~17 .operation_mode = "normal";
defparam \r_col~17 .output_mode = "comb_only";
defparam \r_col~17 .register_cascade_mode = "off";
defparam \r_col~17 .sum_lutc_input = "datac";
defparam \r_col~17 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col[5]~reg0 (
// Equation(s):
// \r_col[5]~reg0_regout  = DFFEAS((\start_con~regout  & ((\r_col~17_combout ) # ((\r_col[5]~reg0_regout  & \r_col~6_combout )))), \clk_1kHz~regout , VCC, , , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\start_con~regout ),
	.datab(\r_col~17_combout ),
	.datac(\r_col[5]~reg0_regout ),
	.datad(\r_col~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\r_col[5]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col[5]~reg0 .lut_mask = "a888";
defparam \r_col[5]~reg0 .operation_mode = "normal";
defparam \r_col[5]~reg0 .output_mode = "reg_only";
defparam \r_col[5]~reg0 .register_cascade_mode = "off";
defparam \r_col[5]~reg0 .sum_lutc_input = "datac";
defparam \r_col[5]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \Mux38~1 (
// Equation(s):
// \Mux38~1_combout  = (row_num[2] & ((terminal_point_col[0]) # ((row_num[0])))) # (!row_num[2] & ((row_num[1] & (terminal_point_col[0])) # (!row_num[1] & ((!row_num[0])))))

	.clk(gnd),
	.dataa(terminal_point_col[0]),
	.datab(row_num[1]),
	.datac(row_num[0]),
	.datad(row_num[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux38~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux38~1 .lut_mask = "fa8b";
defparam \Mux38~1 .operation_mode = "normal";
defparam \Mux38~1 .output_mode = "comb_only";
defparam \Mux38~1 .register_cascade_mode = "off";
defparam \Mux38~1 .sum_lutc_input = "datac";
defparam \Mux38~1 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~19 (
// Equation(s):
// \r_col~19_combout  = (!\suc~reg0_regout  & ((\Equal7~1_combout  & (\Mux38~1_combout )) # (!\Equal7~1_combout  & ((\g_col~7_combout )))))

	.clk(gnd),
	.dataa(\Mux38~1_combout ),
	.datab(\g_col~7_combout ),
	.datac(\Equal7~1_combout ),
	.datad(\suc~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~19 .lut_mask = "00ac";
defparam \r_col~19 .operation_mode = "normal";
defparam \r_col~19 .output_mode = "comb_only";
defparam \r_col~19 .register_cascade_mode = "off";
defparam \r_col~19 .sum_lutc_input = "datac";
defparam \r_col~19 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col[6]~reg0 (
// Equation(s):
// \r_col[6]~reg0_regout  = DFFEAS((\start_con~regout  & ((\r_col~19_combout ) # ((\r_col[6]~reg0_regout  & \r_col~6_combout )))), \clk_1kHz~regout , VCC, , , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(\start_con~regout ),
	.datab(\r_col~19_combout ),
	.datac(\r_col[6]~reg0_regout ),
	.datad(\r_col~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\r_col[6]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col[6]~reg0 .lut_mask = "a888";
defparam \r_col[6]~reg0 .operation_mode = "normal";
defparam \r_col[6]~reg0 .output_mode = "reg_only";
defparam \r_col[6]~reg0 .register_cascade_mode = "off";
defparam \r_col[6]~reg0 .sum_lutc_input = "datac";
defparam \r_col[6]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col~21 (
// Equation(s):
// \r_col~21_combout  = (terminal_point_col[0]) # ((!row_num[0] & (row_num[1])))

	.clk(gnd),
	.dataa(row_num[0]),
	.datab(row_num[1]),
	.datac(terminal_point_col[0]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\r_col~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col~21 .lut_mask = "f4f4";
defparam \r_col~21 .operation_mode = "normal";
defparam \r_col~21 .output_mode = "comb_only";
defparam \r_col~21 .register_cascade_mode = "off";
defparam \r_col~21 .sum_lutc_input = "datac";
defparam \r_col~21 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \r_col[7]~reg0 (
// Equation(s):
// \r_col[7]~reg0_regout  = DFFEAS((\r_col~0_combout  & (((!row_num[2] & !row_num[0])) # (!\r_col~21_combout ))), \clk_1kHz~regout , VCC, , \r_col~1_combout , , , , )

	.clk(\clk_1kHz~regout ),
	.dataa(row_num[2]),
	.datab(\r_col~0_combout ),
	.datac(row_num[0]),
	.datad(\r_col~21_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\r_col~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\r_col[7]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \r_col[7]~reg0 .lut_mask = "04cc";
defparam \r_col[7]~reg0 .operation_mode = "normal";
defparam \r_col[7]~reg0 .output_mode = "reg_only";
defparam \r_col[7]~reg0 .register_cascade_mode = "off";
defparam \r_col[7]~reg0 .sum_lutc_input = "datac";
defparam \r_col[7]~reg0 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt[0]~21 (
// Equation(s):
// \step_cnt[0]~21_combout  = (\step_cnt~17_combout  & (\step_cnt~18_combout  & ((\step_cnt~15_combout ) # (!\c1|key_out~regout ))))

	.clk(gnd),
	.dataa(\step_cnt~17_combout ),
	.datab(\step_cnt~18_combout ),
	.datac(\step_cnt~15_combout ),
	.datad(\c1|key_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt[0]~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[0]~21 .lut_mask = "8088";
defparam \step_cnt[0]~21 .operation_mode = "normal";
defparam \step_cnt[0]~21 .output_mode = "comb_only";
defparam \step_cnt[0]~21 .register_cascade_mode = "off";
defparam \step_cnt[0]~21 .sum_lutc_input = "datac";
defparam \step_cnt[0]~21 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt[0]~22 (
// Equation(s):
// \step_cnt[0]~22_combout  = (((\step_cnt~20_combout  & \step_cnt[0]~21_combout )) # (!\always3~2_combout ))

	.clk(gnd),
	.dataa(\step_cnt~20_combout ),
	.datab(\step_cnt[0]~21_combout ),
	.datac(vcc),
	.datad(\always3~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt[0]~22_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[0]~22 .lut_mask = "88ff";
defparam \step_cnt[0]~22 .operation_mode = "normal";
defparam \step_cnt[0]~22 .output_mode = "comb_only";
defparam \step_cnt[0]~22 .register_cascade_mode = "off";
defparam \step_cnt[0]~22 .sum_lutc_input = "datac";
defparam \step_cnt[0]~22 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt[0]~23 (
// Equation(s):
// \step_cnt[0]~23_combout  = (\a1|key_out~regout ) # ((\always3~2_combout  & ((!\step_cnt[0]~21_combout ) # (!\step_cnt~20_combout ))))

	.clk(gnd),
	.dataa(\a1|key_out~regout ),
	.datab(\always3~2_combout ),
	.datac(\step_cnt~20_combout ),
	.datad(\step_cnt[0]~21_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\step_cnt[0]~23_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[0]~23 .lut_mask = "aeee";
defparam \step_cnt[0]~23 .operation_mode = "normal";
defparam \step_cnt[0]~23 .output_mode = "comb_only";
defparam \step_cnt[0]~23 .register_cascade_mode = "off";
defparam \step_cnt[0]~23 .sum_lutc_input = "datac";
defparam \step_cnt[0]~23 .synch_mode = "off";
// synopsys translate_on

maxii_lcell \step_cnt[0]~reg0 (
// Equation(s):
// \step_cnt[0]~reg0_regout  = DFFEAS((!\step_cnt[0]~reg0_regout ), \clk~combout , VCC, , \step_cnt[0]~23_combout , , , \step_cnt[0]~22_combout , )
// \step_cnt[0]~1  = CARRY((\step_cnt[0]~reg0_regout ))

	.clk(\clk~combout ),
	.dataa(\step_cnt[0]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\step_cnt[0]~22_combout ),
	.sload(gnd),
	.ena(\step_cnt[0]~23_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\step_cnt[0]~reg0_regout ),
	.cout(\step_cnt[0]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[0]~reg0 .lut_mask = "55aa";
defparam \step_cnt[0]~reg0 .operation_mode = "arithmetic";
defparam \step_cnt[0]~reg0 .output_mode = "reg_only";
defparam \step_cnt[0]~reg0 .register_cascade_mode = "off";
defparam \step_cnt[0]~reg0 .sum_lutc_input = "cin";
defparam \step_cnt[0]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \step_cnt[1]~reg0 (
// Equation(s):
// \step_cnt[1]~reg0_regout  = DFFEAS(\step_cnt[1]~reg0_regout  $ ((((\step_cnt[0]~1 )))), \clk~combout , VCC, , \step_cnt[0]~23_combout , , , \step_cnt[0]~22_combout , )
// \step_cnt[1]~3  = CARRY(((!\step_cnt[0]~1 )) # (!\step_cnt[1]~reg0_regout ))

	.clk(\clk~combout ),
	.dataa(\step_cnt[1]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\step_cnt[0]~22_combout ),
	.sload(gnd),
	.ena(\step_cnt[0]~23_combout ),
	.cin(\step_cnt[0]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\step_cnt[1]~reg0_regout ),
	.cout(\step_cnt[1]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[1]~reg0 .cin_used = "true";
defparam \step_cnt[1]~reg0 .lut_mask = "5a5f";
defparam \step_cnt[1]~reg0 .operation_mode = "arithmetic";
defparam \step_cnt[1]~reg0 .output_mode = "reg_only";
defparam \step_cnt[1]~reg0 .register_cascade_mode = "off";
defparam \step_cnt[1]~reg0 .sum_lutc_input = "cin";
defparam \step_cnt[1]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \step_cnt[2]~reg0 (
// Equation(s):
// \step_cnt[2]~reg0_regout  = DFFEAS(\step_cnt[2]~reg0_regout  $ ((((!\step_cnt[1]~3 )))), \clk~combout , VCC, , \step_cnt[0]~23_combout , , , \step_cnt[0]~22_combout , )
// \step_cnt[2]~5  = CARRY((\step_cnt[2]~reg0_regout  & ((!\step_cnt[1]~3 ))))

	.clk(\clk~combout ),
	.dataa(\step_cnt[2]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\step_cnt[0]~22_combout ),
	.sload(gnd),
	.ena(\step_cnt[0]~23_combout ),
	.cin(\step_cnt[1]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\step_cnt[2]~reg0_regout ),
	.cout(\step_cnt[2]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[2]~reg0 .cin_used = "true";
defparam \step_cnt[2]~reg0 .lut_mask = "a50a";
defparam \step_cnt[2]~reg0 .operation_mode = "arithmetic";
defparam \step_cnt[2]~reg0 .output_mode = "reg_only";
defparam \step_cnt[2]~reg0 .register_cascade_mode = "off";
defparam \step_cnt[2]~reg0 .sum_lutc_input = "cin";
defparam \step_cnt[2]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \step_cnt[3]~reg0 (
// Equation(s):
// \step_cnt[3]~reg0_regout  = DFFEAS(\step_cnt[3]~reg0_regout  $ ((((\step_cnt[2]~5 )))), \clk~combout , VCC, , \step_cnt[0]~23_combout , , , \step_cnt[0]~22_combout , )
// \step_cnt[3]~7  = CARRY(((!\step_cnt[2]~5 )) # (!\step_cnt[3]~reg0_regout ))

	.clk(\clk~combout ),
	.dataa(\step_cnt[3]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\step_cnt[0]~22_combout ),
	.sload(gnd),
	.ena(\step_cnt[0]~23_combout ),
	.cin(\step_cnt[2]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\step_cnt[3]~reg0_regout ),
	.cout(\step_cnt[3]~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[3]~reg0 .cin_used = "true";
defparam \step_cnt[3]~reg0 .lut_mask = "5a5f";
defparam \step_cnt[3]~reg0 .operation_mode = "arithmetic";
defparam \step_cnt[3]~reg0 .output_mode = "reg_only";
defparam \step_cnt[3]~reg0 .register_cascade_mode = "off";
defparam \step_cnt[3]~reg0 .sum_lutc_input = "cin";
defparam \step_cnt[3]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \step_cnt[4]~reg0 (
// Equation(s):
// \step_cnt[4]~reg0_regout  = DFFEAS(\step_cnt[4]~reg0_regout  $ ((((!\step_cnt[3]~7 )))), \clk~combout , VCC, , \step_cnt[0]~23_combout , , , \step_cnt[0]~22_combout , )
// \step_cnt[4]~9  = CARRY((\step_cnt[4]~reg0_regout  & ((!\step_cnt[3]~7 ))))

	.clk(\clk~combout ),
	.dataa(\step_cnt[4]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\step_cnt[0]~22_combout ),
	.sload(gnd),
	.ena(\step_cnt[0]~23_combout ),
	.cin(\step_cnt[3]~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\step_cnt[4]~reg0_regout ),
	.cout(\step_cnt[4]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[4]~reg0 .cin_used = "true";
defparam \step_cnt[4]~reg0 .lut_mask = "a50a";
defparam \step_cnt[4]~reg0 .operation_mode = "arithmetic";
defparam \step_cnt[4]~reg0 .output_mode = "reg_only";
defparam \step_cnt[4]~reg0 .register_cascade_mode = "off";
defparam \step_cnt[4]~reg0 .sum_lutc_input = "cin";
defparam \step_cnt[4]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \step_cnt[5]~reg0 (
// Equation(s):
// \step_cnt[5]~reg0_regout  = DFFEAS(\step_cnt[5]~reg0_regout  $ ((((\step_cnt[4]~9 )))), \clk~combout , VCC, , \step_cnt[0]~23_combout , , , \step_cnt[0]~22_combout , )
// \step_cnt[5]~11  = CARRY(((!\step_cnt[4]~9 )) # (!\step_cnt[5]~reg0_regout ))

	.clk(\clk~combout ),
	.dataa(\step_cnt[5]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\step_cnt[0]~22_combout ),
	.sload(gnd),
	.ena(\step_cnt[0]~23_combout ),
	.cin(\step_cnt[4]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\step_cnt[5]~reg0_regout ),
	.cout(\step_cnt[5]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[5]~reg0 .cin_used = "true";
defparam \step_cnt[5]~reg0 .lut_mask = "5a5f";
defparam \step_cnt[5]~reg0 .operation_mode = "arithmetic";
defparam \step_cnt[5]~reg0 .output_mode = "reg_only";
defparam \step_cnt[5]~reg0 .register_cascade_mode = "off";
defparam \step_cnt[5]~reg0 .sum_lutc_input = "cin";
defparam \step_cnt[5]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_lcell \step_cnt[6]~reg0 (
// Equation(s):
// \step_cnt[6]~reg0_regout  = DFFEAS(\step_cnt[6]~reg0_regout  $ ((((!\step_cnt[5]~11 )))), \clk~combout , VCC, , \step_cnt[0]~23_combout , , , \step_cnt[0]~22_combout , )

	.clk(\clk~combout ),
	.dataa(\step_cnt[6]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\step_cnt[0]~22_combout ),
	.sload(gnd),
	.ena(\step_cnt[0]~23_combout ),
	.cin(\step_cnt[5]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\step_cnt[6]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \step_cnt[6]~reg0 .cin_used = "true";
defparam \step_cnt[6]~reg0 .lut_mask = "a5a5";
defparam \step_cnt[6]~reg0 .operation_mode = "normal";
defparam \step_cnt[6]~reg0 .output_mode = "reg_only";
defparam \step_cnt[6]~reg0 .register_cascade_mode = "off";
defparam \step_cnt[6]~reg0 .sum_lutc_input = "cin";
defparam \step_cnt[6]~reg0 .synch_mode = "on";
// synopsys translate_on

maxii_io \rst~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(rst));
// synopsys translate_off
defparam \rst~I .operation_mode = "input";
// synopsys translate_on

maxii_io \row[0]~I (
	.datain(\row[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(row[0]));
// synopsys translate_off
defparam \row[0]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \row[1]~I (
	.datain(\row[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(row[1]));
// synopsys translate_off
defparam \row[1]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \row[2]~I (
	.datain(\row[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(row[2]));
// synopsys translate_off
defparam \row[2]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \row[3]~I (
	.datain(\row[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(row[3]));
// synopsys translate_off
defparam \row[3]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \row[4]~I (
	.datain(\row[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(row[4]));
// synopsys translate_off
defparam \row[4]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \row[5]~I (
	.datain(\row[5]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(row[5]));
// synopsys translate_off
defparam \row[5]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \row[6]~I (
	.datain(\row[6]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(row[6]));
// synopsys translate_off
defparam \row[6]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \row[7]~I (
	.datain(\row[7]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(row[7]));
// synopsys translate_off
defparam \row[7]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \g_col[0]~I (
	.datain(\g_col[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(g_col[0]));
// synopsys translate_off
defparam \g_col[0]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \g_col[1]~I (
	.datain(\g_col[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(g_col[1]));
// synopsys translate_off
defparam \g_col[1]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \g_col[2]~I (
	.datain(\g_col[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(g_col[2]));
// synopsys translate_off
defparam \g_col[2]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \g_col[3]~I (
	.datain(\g_col[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(g_col[3]));
// synopsys translate_off
defparam \g_col[3]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \g_col[4]~I (
	.datain(\g_col[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(g_col[4]));
// synopsys translate_off
defparam \g_col[4]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \g_col[5]~I (
	.datain(\g_col[5]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(g_col[5]));
// synopsys translate_off
defparam \g_col[5]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \g_col[6]~I (
	.datain(\g_col[6]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(g_col[6]));
// synopsys translate_off
defparam \g_col[6]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \g_col[7]~I (
	.datain(\g_col[7]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(g_col[7]));
// synopsys translate_off
defparam \g_col[7]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \r_col[0]~I (
	.datain(\r_col[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(r_col[0]));
// synopsys translate_off
defparam \r_col[0]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \r_col[1]~I (
	.datain(\r_col[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(r_col[1]));
// synopsys translate_off
defparam \r_col[1]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \r_col[2]~I (
	.datain(\r_col[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(r_col[2]));
// synopsys translate_off
defparam \r_col[2]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \r_col[3]~I (
	.datain(\r_col[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(r_col[3]));
// synopsys translate_off
defparam \r_col[3]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \r_col[4]~I (
	.datain(\r_col[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(r_col[4]));
// synopsys translate_off
defparam \r_col[4]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \r_col[5]~I (
	.datain(\r_col[5]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(r_col[5]));
// synopsys translate_off
defparam \r_col[5]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \r_col[6]~I (
	.datain(\r_col[6]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(r_col[6]));
// synopsys translate_off
defparam \r_col[6]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \r_col[7]~I (
	.datain(\r_col[7]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(r_col[7]));
// synopsys translate_off
defparam \r_col[7]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \suc~I (
	.datain(\suc~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(suc));
// synopsys translate_off
defparam \suc~I .operation_mode = "output";
// synopsys translate_on

maxii_io \step_cnt[0]~I (
	.datain(\step_cnt[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(step_cnt[0]));
// synopsys translate_off
defparam \step_cnt[0]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \step_cnt[1]~I (
	.datain(\step_cnt[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(step_cnt[1]));
// synopsys translate_off
defparam \step_cnt[1]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \step_cnt[2]~I (
	.datain(\step_cnt[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(step_cnt[2]));
// synopsys translate_off
defparam \step_cnt[2]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \step_cnt[3]~I (
	.datain(\step_cnt[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(step_cnt[3]));
// synopsys translate_off
defparam \step_cnt[3]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \step_cnt[4]~I (
	.datain(\step_cnt[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(step_cnt[4]));
// synopsys translate_off
defparam \step_cnt[4]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \step_cnt[5]~I (
	.datain(\step_cnt[5]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(step_cnt[5]));
// synopsys translate_off
defparam \step_cnt[5]~I .operation_mode = "output";
// synopsys translate_on

maxii_io \step_cnt[6]~I (
	.datain(\step_cnt[6]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(step_cnt[6]));
// synopsys translate_off
defparam \step_cnt[6]~I .operation_mode = "output";
// synopsys translate_on

endmodule
